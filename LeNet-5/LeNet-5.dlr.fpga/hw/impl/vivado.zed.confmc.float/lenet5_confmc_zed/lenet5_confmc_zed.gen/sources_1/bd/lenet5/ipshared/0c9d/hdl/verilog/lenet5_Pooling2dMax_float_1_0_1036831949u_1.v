// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module lenet5_Pooling2dMax_float_1_0_1036831949u_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p1_out_data_address0,
        p1_out_data_ce0,
        p1_out_data_we0,
        p1_out_data_d0,
        in_data_address0,
        in_data_ce0,
        in_data_q0,
        in_data_address1,
        in_data_ce1,
        in_data_q1,
        in_data_address2,
        in_data_ce2,
        in_data_q2,
        in_data_address3,
        in_data_ce3,
        in_data_q3,
        grp_fu_248_p_din0,
        grp_fu_248_p_din1,
        grp_fu_248_p_opcode,
        grp_fu_248_p_dout0,
        grp_fu_248_p_ce,
        grp_fu_252_p_din0,
        grp_fu_252_p_din1,
        grp_fu_252_p_opcode,
        grp_fu_252_p_dout0,
        grp_fu_252_p_ce,
        grp_fu_256_p_din0,
        grp_fu_256_p_din1,
        grp_fu_256_p_opcode,
        grp_fu_256_p_dout0,
        grp_fu_256_p_ce,
        grp_fu_260_p_din0,
        grp_fu_260_p_din1,
        grp_fu_260_p_opcode,
        grp_fu_260_p_dout0,
        grp_fu_260_p_ce,
        grp_fu_264_p_din0,
        grp_fu_264_p_din1,
        grp_fu_264_p_opcode,
        grp_fu_264_p_dout0,
        grp_fu_264_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [10:0] p1_out_data_address0;
output   p1_out_data_ce0;
output   p1_out_data_we0;
output  [31:0] p1_out_data_d0;
output  [12:0] in_data_address0;
output   in_data_ce0;
input  [31:0] in_data_q0;
output  [12:0] in_data_address1;
output   in_data_ce1;
input  [31:0] in_data_q1;
output  [12:0] in_data_address2;
output   in_data_ce2;
input  [31:0] in_data_q2;
output  [12:0] in_data_address3;
output   in_data_ce3;
input  [31:0] in_data_q3;
output  [31:0] grp_fu_248_p_din0;
output  [31:0] grp_fu_248_p_din1;
output  [4:0] grp_fu_248_p_opcode;
input  [0:0] grp_fu_248_p_dout0;
output   grp_fu_248_p_ce;
output  [31:0] grp_fu_252_p_din0;
output  [31:0] grp_fu_252_p_din1;
output  [4:0] grp_fu_252_p_opcode;
input  [0:0] grp_fu_252_p_dout0;
output   grp_fu_252_p_ce;
output  [31:0] grp_fu_256_p_din0;
output  [31:0] grp_fu_256_p_din1;
output  [4:0] grp_fu_256_p_opcode;
input  [0:0] grp_fu_256_p_dout0;
output   grp_fu_256_p_ce;
output  [31:0] grp_fu_260_p_din0;
output  [31:0] grp_fu_260_p_din1;
output  [4:0] grp_fu_260_p_opcode;
input  [0:0] grp_fu_260_p_dout0;
output   grp_fu_260_p_ce;
output  [31:0] grp_fu_264_p_din0;
output  [31:0] grp_fu_264_p_din1;
output  [4:0] grp_fu_264_p_opcode;
input  [0:0] grp_fu_264_p_dout0;
output   grp_fu_264_p_ce;

reg ap_idle;
reg p1_out_data_ce0;
reg p1_out_data_we0;
reg in_data_ce0;
reg in_data_ce1;
reg in_data_ce2;
reg in_data_ce3;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln96_fu_245_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [2:0] ch_1_reg_1262;
reg   [2:0] ch_1_reg_1262_pp0_iter1_reg;
reg   [2:0] ch_1_reg_1262_pp0_iter2_reg;
reg   [2:0] ch_1_reg_1262_pp0_iter3_reg;
reg   [0:0] icmp_ln96_reg_1268;
reg   [0:0] icmp_ln96_reg_1268_pp0_iter1_reg;
reg   [0:0] icmp_ln96_reg_1268_pp0_iter2_reg;
reg   [0:0] icmp_ln96_reg_1268_pp0_iter3_reg;
wire   [2:0] add_ln96_fu_260_p2;
reg   [2:0] add_ln96_reg_1272;
reg   [2:0] add_ln96_reg_1272_pp0_iter1_reg;
reg   [2:0] add_ln96_reg_1272_pp0_iter2_reg;
reg   [2:0] add_ln96_reg_1272_pp0_iter3_reg;
wire   [0:0] icmp_ln97_fu_266_p2;
reg   [0:0] icmp_ln97_reg_1278;
reg   [0:0] icmp_ln97_reg_1278_pp0_iter1_reg;
reg   [0:0] icmp_ln97_reg_1278_pp0_iter2_reg;
reg   [0:0] icmp_ln97_reg_1278_pp0_iter3_reg;
reg   [3:0] k_load_reg_1295;
wire   [0:0] icmp_ln98_fu_316_p2;
reg   [0:0] icmp_ln98_reg_1300;
wire   [0:0] and_ln97_fu_330_p2;
reg   [0:0] and_ln97_reg_1305;
reg   [0:0] and_ln97_reg_1305_pp0_iter3_reg;
wire   [3:0] select_ln97_7_fu_340_p3;
reg   [3:0] select_ln97_7_reg_1314;
reg   [3:0] select_ln97_7_reg_1314_pp0_iter3_reg;
reg   [4:0] r_1_reg_1324;
reg   [3:0] g_1_reg_1331;
wire   [3:0] add_ln97_fu_401_p2;
reg   [3:0] add_ln97_reg_1336;
wire   [4:0] add_ln97_1_fu_407_p2;
reg   [4:0] add_ln97_1_reg_1341;
wire   [11:0] grp_fu_1205_p3;
reg   [11:0] empty_89_reg_1348;
wire   [10:0] add_ln113_fu_834_p2;
reg   [10:0] add_ln113_reg_1373;
reg   [10:0] add_ln113_reg_1373_pp0_iter5_reg;
reg   [10:0] add_ln113_reg_1373_pp0_iter6_reg;
reg   [10:0] add_ln113_reg_1373_pp0_iter7_reg;
reg   [10:0] add_ln113_reg_1373_pp0_iter8_reg;
reg   [10:0] add_ln113_reg_1373_pp0_iter9_reg;
reg   [10:0] add_ln113_reg_1373_pp0_iter10_reg;
reg   [10:0] add_ln113_reg_1373_pp0_iter11_reg;
reg   [10:0] add_ln113_reg_1373_pp0_iter12_reg;
reg   [10:0] add_ln113_reg_1373_pp0_iter13_reg;
reg   [10:0] add_ln113_reg_1373_pp0_iter14_reg;
reg   [10:0] add_ln113_reg_1373_pp0_iter15_reg;
reg   [31:0] in_data_load_reg_1378;
reg   [31:0] in_data_load_reg_1378_pp0_iter6_reg;
reg   [31:0] in_data_load_1_reg_1385;
reg   [31:0] in_data_load_1_reg_1385_pp0_iter6_reg;
reg   [31:0] in_data_load_1_reg_1385_pp0_iter7_reg;
reg   [31:0] in_data_load_1_reg_1385_pp0_iter8_reg;
reg   [31:0] in_data_load_2_reg_1392;
reg   [31:0] in_data_load_2_reg_1392_pp0_iter6_reg;
reg   [31:0] in_data_load_2_reg_1392_pp0_iter7_reg;
reg   [31:0] in_data_load_2_reg_1392_pp0_iter8_reg;
reg   [31:0] in_data_load_2_reg_1392_pp0_iter9_reg;
reg   [31:0] in_data_load_2_reg_1392_pp0_iter10_reg;
reg   [31:0] in_data_load_3_reg_1399;
reg   [31:0] in_data_load_3_reg_1399_pp0_iter6_reg;
reg   [31:0] in_data_load_3_reg_1399_pp0_iter7_reg;
reg   [31:0] in_data_load_3_reg_1399_pp0_iter8_reg;
reg   [31:0] in_data_load_3_reg_1399_pp0_iter9_reg;
reg   [31:0] in_data_load_3_reg_1399_pp0_iter10_reg;
reg   [31:0] in_data_load_3_reg_1399_pp0_iter11_reg;
reg   [31:0] in_data_load_3_reg_1399_pp0_iter12_reg;
wire   [31:0] select_ln107_fu_881_p3;
reg   [31:0] select_ln107_reg_1406;
reg   [31:0] select_ln107_reg_1406_pp0_iter8_reg;
wire   [31:0] select_ln107_1_fu_970_p3;
reg   [31:0] select_ln107_1_reg_1413;
reg   [31:0] select_ln107_1_reg_1413_pp0_iter10_reg;
wire   [31:0] select_ln107_2_fu_1058_p3;
reg   [31:0] select_ln107_2_reg_1420;
reg   [31:0] select_ln107_2_reg_1420_pp0_iter12_reg;
wire   [31:0] select_ln107_3_fu_1146_p3;
reg   [31:0] select_ln107_3_reg_1427;
reg   [31:0] select_ln107_3_reg_1427_pp0_iter14_reg;
wire   [31:0] select_ln113_fu_1193_p3;
reg   [31:0] select_ln113_reg_1433;
reg    ap_condition_exit_pp0_iter4_stage0;
wire   [31:0] zext_ln106_1_fu_793_p1;
wire    ap_block_pp0_stage0;
wire   [31:0] zext_ln106_2_fu_804_p1;
wire   [31:0] zext_ln106_3_fu_815_p1;
wire   [31:0] zext_ln106_4_fu_826_p1;
wire   [31:0] zext_ln113_1_fu_1201_p1;
reg   [4:0] c_fu_92;
wire   [4:0] add_ln98_1_fu_365_p2;
wire    ap_loop_init;
reg   [3:0] k_fu_96;
wire   [3:0] add_ln98_fu_359_p2;
reg   [3:0] ap_sig_allocacmp_k_load;
reg   [4:0] r_fu_100;
wire   [4:0] select_ln97_13_fu_420_p3;
reg   [3:0] g_fu_104;
wire   [3:0] select_ln97_12_fu_413_p3;
reg   [7:0] indvar_flatten_fu_108;
wire   [7:0] select_ln97_14_fu_290_p3;
reg   [7:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [2:0] ch_fu_112;
wire   [2:0] select_ln97_3_fu_272_p3;
reg   [2:0] ap_sig_allocacmp_ch_1;
reg   [10:0] indvar_flatten75_fu_116;
wire   [10:0] add_ln96_1_fu_251_p2;
reg   [10:0] ap_sig_allocacmp_indvar_flatten75_load;
wire   [7:0] add_ln97_2_fu_284_p2;
wire   [0:0] xor_ln97_fu_325_p2;
wire   [0:0] or_ln97_fu_335_p2;
wire   [4:0] select_ln97_8_fu_347_p3;
wire   [3:0] select_ln97_fu_387_p3;
wire   [4:0] select_ln97_1_fu_394_p3;
wire   [6:0] p_shl_fu_437_p3;
wire   [3:0] p_shl4_fu_448_p3;
wire   [7:0] p_shl_cast_fu_444_p1;
wire   [7:0] p_shl4_cast_fu_455_p1;
wire   [7:0] zext_ln97_fu_465_p1;
wire   [7:0] empty_fu_459_p2;
wire   [7:0] empty_81_fu_468_p2;
wire   [6:0] empty_82_fu_474_p1;
wire   [8:0] p_shl6_fu_486_p3;
wire   [10:0] p_shl5_fu_478_p3;
wire  signed [10:0] p_shl6_cast_fu_494_p1;
wire   [9:0] p_shl7_fu_504_p3;
wire   [6:0] p_shl8_fu_515_p3;
wire   [10:0] p_shl7_0_cast_fu_511_p1;
wire   [10:0] p_shl8_0_cast_fu_522_p1;
wire   [4:0] empty_84_fu_532_p2;
wire   [9:0] p_shl7_1_fu_537_p3;
wire   [6:0] p_shl8_1_fu_549_p3;
wire   [10:0] p_shl7_1_cast_fu_545_p1;
wire   [10:0] p_shl8_1_cast_fu_557_p1;
wire   [6:0] p_shl_mid1_fu_567_p3;
wire   [3:0] p_shl4_mid1_fu_578_p3;
wire   [7:0] p_shl_cast_mid1_fu_574_p1;
wire   [7:0] p_shl4_cast_mid1_fu_585_p1;
wire   [7:0] p_mid121_fu_589_p2;
wire   [6:0] empty_87_fu_602_p1;
wire   [8:0] p_shl6_mid_fu_614_p3;
wire   [10:0] p_shl5_mid_fu_606_p3;
wire  signed [10:0] p_shl6_cast_mid139_fu_622_p1;
wire   [10:0] sub_ln100_1_fu_626_p2;
wire   [10:0] sub_ln100_fu_498_p2;
wire   [10:0] empty_83_fu_526_p2;
wire   [10:0] empty_85_fu_561_p2;
wire   [7:0] zext_ln97_2_fu_653_p1;
wire   [7:0] select_ln97_2_fu_595_p3;
wire   [7:0] p_mid1_fu_656_p2;
wire   [6:0] empty_88_fu_662_p1;
wire   [8:0] p_shl6_mid1_fu_674_p3;
wire   [10:0] p_shl5_mid1_fu_666_p3;
wire  signed [10:0] p_shl6_cast_mid1_fu_682_p1;
wire   [10:0] sub_ln100_2_fu_686_p2;
wire   [10:0] select_ln97_4_fu_632_p3;
wire   [9:0] p_shl7_0_mid1_fu_699_p3;
wire   [6:0] p_shl8_0_mid1_fu_710_p3;
wire   [10:0] p_shl7_0_cast_mid1_fu_706_p1;
wire   [10:0] p_shl8_0_cast_mid1_fu_717_p1;
wire   [10:0] p_mid15_fu_721_p2;
wire   [10:0] select_ln97_5_fu_639_p3;
wire   [10:0] select_ln97_10_fu_727_p3;
wire   [4:0] p_mid17_fu_738_p2;
wire   [9:0] p_shl7_1_mid1_fu_743_p3;
wire   [6:0] p_shl8_1_mid1_fu_755_p3;
wire   [10:0] p_shl7_1_cast_mid1_fu_751_p1;
wire   [10:0] p_shl8_1_cast_mid1_fu_763_p1;
wire   [10:0] p_mid19_fu_767_p2;
wire   [10:0] select_ln97_6_fu_646_p3;
wire   [10:0] select_ln97_11_fu_773_p3;
wire   [12:0] zext_ln106_fu_784_p1;
wire  signed [12:0] select_ln97_10_cast_fu_734_p1;
wire   [12:0] add_ln106_fu_787_p2;
wire   [12:0] or_ln106_fu_798_p2;
wire  signed [12:0] select_ln97_11_cast_fu_780_p1;
wire   [12:0] add_ln106_1_fu_809_p2;
wire   [12:0] or_ln106_1_fu_820_p2;
wire   [10:0] zext_ln113_fu_831_p1;
wire   [10:0] select_ln97_9_fu_692_p3;
wire   [31:0] bitcast_ln107_fu_840_p1;
wire   [7:0] tmp_fu_843_p4;
wire   [22:0] trunc_ln107_fu_853_p1;
wire   [0:0] icmp_ln107_1_fu_863_p2;
wire   [0:0] icmp_ln107_fu_857_p2;
wire   [0:0] or_ln107_fu_869_p2;
wire   [0:0] and_ln107_fu_875_p2;
wire   [31:0] bitcast_ln107_1_fu_888_p1;
wire   [31:0] bitcast_ln107_2_fu_905_p1;
wire   [7:0] tmp_5_fu_891_p4;
wire   [22:0] trunc_ln107_1_fu_901_p1;
wire   [0:0] icmp_ln107_3_fu_928_p2;
wire   [0:0] icmp_ln107_2_fu_922_p2;
wire   [7:0] tmp_6_fu_908_p4;
wire   [22:0] trunc_ln107_2_fu_918_p1;
wire   [0:0] icmp_ln107_5_fu_946_p2;
wire   [0:0] icmp_ln107_4_fu_940_p2;
wire   [0:0] or_ln107_1_fu_934_p2;
wire   [0:0] or_ln107_2_fu_952_p2;
wire   [0:0] and_ln107_1_fu_958_p2;
wire   [0:0] and_ln107_2_fu_964_p2;
wire   [31:0] bitcast_ln107_3_fu_976_p1;
wire   [31:0] bitcast_ln107_4_fu_993_p1;
wire   [7:0] tmp_8_fu_979_p4;
wire   [22:0] trunc_ln107_3_fu_989_p1;
wire   [0:0] icmp_ln107_7_fu_1016_p2;
wire   [0:0] icmp_ln107_6_fu_1010_p2;
wire   [7:0] tmp_9_fu_996_p4;
wire   [22:0] trunc_ln107_4_fu_1006_p1;
wire   [0:0] icmp_ln107_9_fu_1034_p2;
wire   [0:0] icmp_ln107_8_fu_1028_p2;
wire   [0:0] or_ln107_3_fu_1022_p2;
wire   [0:0] or_ln107_4_fu_1040_p2;
wire   [0:0] and_ln107_3_fu_1046_p2;
wire   [0:0] and_ln107_4_fu_1052_p2;
wire   [31:0] bitcast_ln107_5_fu_1064_p1;
wire   [31:0] bitcast_ln107_6_fu_1081_p1;
wire   [7:0] tmp_1_fu_1067_p4;
wire   [22:0] trunc_ln107_5_fu_1077_p1;
wire   [0:0] icmp_ln107_11_fu_1104_p2;
wire   [0:0] icmp_ln107_10_fu_1098_p2;
wire   [7:0] tmp_2_fu_1084_p4;
wire   [22:0] trunc_ln107_6_fu_1094_p1;
wire   [0:0] icmp_ln107_13_fu_1122_p2;
wire   [0:0] icmp_ln107_12_fu_1116_p2;
wire   [0:0] or_ln107_5_fu_1110_p2;
wire   [0:0] or_ln107_6_fu_1128_p2;
wire   [0:0] and_ln107_5_fu_1134_p2;
wire   [0:0] and_ln107_6_fu_1140_p2;
wire   [31:0] bitcast_ln113_fu_1152_p1;
wire   [7:0] tmp_10_fu_1155_p4;
wire   [22:0] trunc_ln113_fu_1165_p1;
wire   [0:0] icmp_ln113_1_fu_1175_p2;
wire   [0:0] icmp_ln113_fu_1169_p2;
wire   [0:0] or_ln113_fu_1181_p2;
wire   [0:0] and_ln113_fu_1187_p2;
wire   [2:0] grp_fu_1205_p0;
wire   [9:0] grp_fu_1205_p1;
wire   [4:0] grp_fu_1205_p2;
wire    ap_block_pp0_stage0_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [11:0] grp_fu_1205_p00;
wire   [11:0] grp_fu_1205_p20;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_done_reg = 1'b0;
end

lenet5_mac_muladd_3ns_10ns_5ns_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 5 ),
    .dout_WIDTH( 12 ))
mac_muladd_3ns_10ns_5ns_12_4_1_U49(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1205_p0),
    .din1(grp_fu_1205_p1),
    .din2(grp_fu_1205_p2),
    .ce(1'b1),
    .dout(grp_fu_1205_p3)
);

lenet5_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter15_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter4_stage0)) begin
            ap_enable_reg_pp0_iter5 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            c_fu_92 <= 5'd0;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln96_reg_1268_pp0_iter1_reg == 1'd0))) begin
            c_fu_92 <= add_ln98_1_fu_365_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln96_fu_245_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            ch_fu_112 <= select_ln97_3_fu_272_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            ch_fu_112 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            g_fu_104 <= 4'd0;
        end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln96_reg_1268_pp0_iter2_reg == 1'd0))) begin
            g_fu_104 <= select_ln97_12_fu_413_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln96_fu_245_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten75_fu_116 <= add_ln96_1_fu_251_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten75_fu_116 <= 11'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln96_fu_245_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten_fu_108 <= select_ln97_14_fu_290_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_108 <= 8'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            k_fu_96 <= 4'd0;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln96_reg_1268_pp0_iter1_reg == 1'd0))) begin
            k_fu_96 <= add_ln98_fu_359_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            r_fu_100 <= 5'd0;
        end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln96_reg_1268_pp0_iter2_reg == 1'd0))) begin
            r_fu_100 <= select_ln97_13_fu_420_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln96_reg_1268_pp0_iter3_reg == 1'd0))) begin
        add_ln113_reg_1373 <= add_ln113_fu_834_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln113_reg_1373_pp0_iter10_reg <= add_ln113_reg_1373_pp0_iter9_reg;
        add_ln113_reg_1373_pp0_iter11_reg <= add_ln113_reg_1373_pp0_iter10_reg;
        add_ln113_reg_1373_pp0_iter12_reg <= add_ln113_reg_1373_pp0_iter11_reg;
        add_ln113_reg_1373_pp0_iter13_reg <= add_ln113_reg_1373_pp0_iter12_reg;
        add_ln113_reg_1373_pp0_iter14_reg <= add_ln113_reg_1373_pp0_iter13_reg;
        add_ln113_reg_1373_pp0_iter15_reg <= add_ln113_reg_1373_pp0_iter14_reg;
        add_ln113_reg_1373_pp0_iter5_reg <= add_ln113_reg_1373;
        add_ln113_reg_1373_pp0_iter6_reg <= add_ln113_reg_1373_pp0_iter5_reg;
        add_ln113_reg_1373_pp0_iter7_reg <= add_ln113_reg_1373_pp0_iter6_reg;
        add_ln113_reg_1373_pp0_iter8_reg <= add_ln113_reg_1373_pp0_iter7_reg;
        add_ln113_reg_1373_pp0_iter9_reg <= add_ln113_reg_1373_pp0_iter8_reg;
        add_ln96_reg_1272_pp0_iter2_reg <= add_ln96_reg_1272_pp0_iter1_reg;
        add_ln96_reg_1272_pp0_iter3_reg <= add_ln96_reg_1272_pp0_iter2_reg;
        and_ln97_reg_1305_pp0_iter3_reg <= and_ln97_reg_1305;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        ch_1_reg_1262_pp0_iter2_reg <= ch_1_reg_1262_pp0_iter1_reg;
        ch_1_reg_1262_pp0_iter3_reg <= ch_1_reg_1262_pp0_iter2_reg;
        g_1_reg_1331 <= g_fu_104;
        icmp_ln96_reg_1268_pp0_iter2_reg <= icmp_ln96_reg_1268_pp0_iter1_reg;
        icmp_ln96_reg_1268_pp0_iter3_reg <= icmp_ln96_reg_1268_pp0_iter2_reg;
        icmp_ln97_reg_1278_pp0_iter2_reg <= icmp_ln97_reg_1278_pp0_iter1_reg;
        icmp_ln97_reg_1278_pp0_iter3_reg <= icmp_ln97_reg_1278_pp0_iter2_reg;
        in_data_load_1_reg_1385_pp0_iter6_reg <= in_data_load_1_reg_1385;
        in_data_load_1_reg_1385_pp0_iter7_reg <= in_data_load_1_reg_1385_pp0_iter6_reg;
        in_data_load_1_reg_1385_pp0_iter8_reg <= in_data_load_1_reg_1385_pp0_iter7_reg;
        in_data_load_2_reg_1392_pp0_iter10_reg <= in_data_load_2_reg_1392_pp0_iter9_reg;
        in_data_load_2_reg_1392_pp0_iter6_reg <= in_data_load_2_reg_1392;
        in_data_load_2_reg_1392_pp0_iter7_reg <= in_data_load_2_reg_1392_pp0_iter6_reg;
        in_data_load_2_reg_1392_pp0_iter8_reg <= in_data_load_2_reg_1392_pp0_iter7_reg;
        in_data_load_2_reg_1392_pp0_iter9_reg <= in_data_load_2_reg_1392_pp0_iter8_reg;
        in_data_load_3_reg_1399_pp0_iter10_reg <= in_data_load_3_reg_1399_pp0_iter9_reg;
        in_data_load_3_reg_1399_pp0_iter11_reg <= in_data_load_3_reg_1399_pp0_iter10_reg;
        in_data_load_3_reg_1399_pp0_iter12_reg <= in_data_load_3_reg_1399_pp0_iter11_reg;
        in_data_load_3_reg_1399_pp0_iter6_reg <= in_data_load_3_reg_1399;
        in_data_load_3_reg_1399_pp0_iter7_reg <= in_data_load_3_reg_1399_pp0_iter6_reg;
        in_data_load_3_reg_1399_pp0_iter8_reg <= in_data_load_3_reg_1399_pp0_iter7_reg;
        in_data_load_3_reg_1399_pp0_iter9_reg <= in_data_load_3_reg_1399_pp0_iter8_reg;
        in_data_load_reg_1378_pp0_iter6_reg <= in_data_load_reg_1378;
        r_1_reg_1324 <= r_fu_100;
        select_ln107_1_reg_1413 <= select_ln107_1_fu_970_p3;
        select_ln107_1_reg_1413_pp0_iter10_reg <= select_ln107_1_reg_1413;
        select_ln107_2_reg_1420 <= select_ln107_2_fu_1058_p3;
        select_ln107_2_reg_1420_pp0_iter12_reg <= select_ln107_2_reg_1420;
        select_ln107_3_reg_1427 <= select_ln107_3_fu_1146_p3;
        select_ln107_3_reg_1427_pp0_iter14_reg <= select_ln107_3_reg_1427;
        select_ln107_reg_1406 <= select_ln107_fu_881_p3;
        select_ln107_reg_1406_pp0_iter8_reg <= select_ln107_reg_1406;
        select_ln113_reg_1433 <= select_ln113_fu_1193_p3;
        select_ln97_7_reg_1314_pp0_iter3_reg <= select_ln97_7_reg_1314;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln96_fu_245_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln96_reg_1272 <= add_ln96_fu_260_p2;
        icmp_ln97_reg_1278 <= icmp_ln97_fu_266_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln96_reg_1272_pp0_iter1_reg <= add_ln96_reg_1272;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        ch_1_reg_1262 <= ap_sig_allocacmp_ch_1;
        ch_1_reg_1262_pp0_iter1_reg <= ch_1_reg_1262;
        icmp_ln96_reg_1268 <= icmp_ln96_fu_245_p2;
        icmp_ln96_reg_1268_pp0_iter1_reg <= icmp_ln96_reg_1268;
        icmp_ln97_reg_1278_pp0_iter1_reg <= icmp_ln97_reg_1278;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln96_reg_1268_pp0_iter2_reg == 1'd0))) begin
        add_ln97_1_reg_1341 <= add_ln97_1_fu_407_p2;
        add_ln97_reg_1336 <= add_ln97_fu_401_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln96_reg_1268_pp0_iter1_reg == 1'd0))) begin
        and_ln97_reg_1305 <= and_ln97_fu_330_p2;
        select_ln97_7_reg_1314 <= select_ln97_7_fu_340_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln96_reg_1268_pp0_iter2_reg == 1'd0))) begin
        empty_89_reg_1348 <= grp_fu_1205_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln96_reg_1268 == 1'd0))) begin
        icmp_ln98_reg_1300 <= icmp_ln98_fu_316_p2;
        k_load_reg_1295 <= ap_sig_allocacmp_k_load;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        in_data_load_1_reg_1385 <= in_data_q2;
        in_data_load_2_reg_1392 <= in_data_q1;
        in_data_load_3_reg_1399 <= in_data_q0;
        in_data_load_reg_1378 <= in_data_q3;
    end
end

always @ (*) begin
    if (((icmp_ln96_fu_245_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln96_reg_1268_pp0_iter3_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter4_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter4_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter15_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_ch_1 = 3'd0;
    end else begin
        ap_sig_allocacmp_ch_1 = ch_fu_112;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten75_load = 11'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten75_load = indvar_flatten75_fu_116;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 8'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_108;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln96_reg_1268_pp0_iter1_reg == 1'd0))) begin
        ap_sig_allocacmp_k_load = add_ln98_fu_359_p2;
    end else begin
        ap_sig_allocacmp_k_load = k_fu_96;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        in_data_ce0 = 1'b1;
    end else begin
        in_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        in_data_ce1 = 1'b1;
    end else begin
        in_data_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        in_data_ce2 = 1'b1;
    end else begin
        in_data_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        in_data_ce3 = 1'b1;
    end else begin
        in_data_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        p1_out_data_ce0 = 1'b1;
    end else begin
        p1_out_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        p1_out_data_we0 = 1'b1;
    end else begin
        p1_out_data_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln106_1_fu_809_p2 = ($signed(zext_ln106_fu_784_p1) + $signed(select_ln97_11_cast_fu_780_p1));

assign add_ln106_fu_787_p2 = ($signed(zext_ln106_fu_784_p1) + $signed(select_ln97_10_cast_fu_734_p1));

assign add_ln113_fu_834_p2 = (zext_ln113_fu_831_p1 + select_ln97_9_fu_692_p3);

assign add_ln96_1_fu_251_p2 = (ap_sig_allocacmp_indvar_flatten75_load + 11'd1);

assign add_ln96_fu_260_p2 = (ap_sig_allocacmp_ch_1 + 3'd1);

assign add_ln97_1_fu_407_p2 = (select_ln97_1_fu_394_p3 + 5'd2);

assign add_ln97_2_fu_284_p2 = (ap_sig_allocacmp_indvar_flatten_load + 8'd1);

assign add_ln97_fu_401_p2 = (select_ln97_fu_387_p3 + 4'd1);

assign add_ln98_1_fu_365_p2 = (select_ln97_8_fu_347_p3 + 5'd2);

assign add_ln98_fu_359_p2 = (select_ln97_7_fu_340_p3 + 4'd1);

assign and_ln107_1_fu_958_p2 = (or_ln107_2_fu_952_p2 & or_ln107_1_fu_934_p2);

assign and_ln107_2_fu_964_p2 = (grp_fu_252_p_dout0 & and_ln107_1_fu_958_p2);

assign and_ln107_3_fu_1046_p2 = (or_ln107_4_fu_1040_p2 & or_ln107_3_fu_1022_p2);

assign and_ln107_4_fu_1052_p2 = (grp_fu_256_p_dout0 & and_ln107_3_fu_1046_p2);

assign and_ln107_5_fu_1134_p2 = (or_ln107_6_fu_1128_p2 & or_ln107_5_fu_1110_p2);

assign and_ln107_6_fu_1140_p2 = (grp_fu_260_p_dout0 & and_ln107_5_fu_1134_p2);

assign and_ln107_fu_875_p2 = (or_ln107_fu_869_p2 & grp_fu_248_p_dout0);

assign and_ln113_fu_1187_p2 = (or_ln113_fu_1181_p2 & grp_fu_264_p_dout0);

assign and_ln97_fu_330_p2 = (xor_ln97_fu_325_p2 & icmp_ln98_reg_1300);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign bitcast_ln107_1_fu_888_p1 = select_ln107_reg_1406_pp0_iter8_reg;

assign bitcast_ln107_2_fu_905_p1 = in_data_load_1_reg_1385_pp0_iter8_reg;

assign bitcast_ln107_3_fu_976_p1 = select_ln107_1_reg_1413_pp0_iter10_reg;

assign bitcast_ln107_4_fu_993_p1 = in_data_load_2_reg_1392_pp0_iter10_reg;

assign bitcast_ln107_5_fu_1064_p1 = select_ln107_2_reg_1420_pp0_iter12_reg;

assign bitcast_ln107_6_fu_1081_p1 = in_data_load_3_reg_1399_pp0_iter12_reg;

assign bitcast_ln107_fu_840_p1 = in_data_load_reg_1378_pp0_iter6_reg;

assign bitcast_ln113_fu_1152_p1 = select_ln107_3_reg_1427_pp0_iter14_reg;

assign empty_81_fu_468_p2 = (zext_ln97_fu_465_p1 + empty_fu_459_p2);

assign empty_82_fu_474_p1 = empty_81_fu_468_p2[6:0];

assign empty_83_fu_526_p2 = (p_shl7_0_cast_fu_511_p1 - p_shl8_0_cast_fu_522_p1);

assign empty_84_fu_532_p2 = (r_1_reg_1324 | 5'd1);

assign empty_85_fu_561_p2 = (p_shl7_1_cast_fu_545_p1 - p_shl8_1_cast_fu_557_p1);

assign empty_87_fu_602_p1 = p_mid121_fu_589_p2[6:0];

assign empty_88_fu_662_p1 = p_mid1_fu_656_p2[6:0];

assign empty_fu_459_p2 = (p_shl_cast_fu_444_p1 - p_shl4_cast_fu_455_p1);

assign grp_fu_1205_p0 = grp_fu_1205_p00;

assign grp_fu_1205_p00 = select_ln97_3_fu_272_p3;

assign grp_fu_1205_p1 = 12'd784;

assign grp_fu_1205_p2 = grp_fu_1205_p20;

assign grp_fu_1205_p20 = select_ln97_8_fu_347_p3;

assign grp_fu_248_p_ce = 1'b1;

assign grp_fu_248_p_din0 = in_data_load_reg_1378;

assign grp_fu_248_p_din1 = 32'd3279880192;

assign grp_fu_248_p_opcode = 5'd2;

assign grp_fu_252_p_ce = 1'b1;

assign grp_fu_252_p_din0 = select_ln107_reg_1406;

assign grp_fu_252_p_din1 = in_data_load_1_reg_1385_pp0_iter7_reg;

assign grp_fu_252_p_opcode = 5'd4;

assign grp_fu_256_p_ce = 1'b1;

assign grp_fu_256_p_din0 = select_ln107_1_reg_1413;

assign grp_fu_256_p_din1 = in_data_load_2_reg_1392_pp0_iter9_reg;

assign grp_fu_256_p_opcode = 5'd4;

assign grp_fu_260_p_ce = 1'b1;

assign grp_fu_260_p_din0 = select_ln107_2_reg_1420;

assign grp_fu_260_p_din1 = in_data_load_3_reg_1399_pp0_iter11_reg;

assign grp_fu_260_p_opcode = 5'd4;

assign grp_fu_264_p_ce = 1'b1;

assign grp_fu_264_p_din0 = select_ln107_3_reg_1427;

assign grp_fu_264_p_din1 = 32'd0;

assign grp_fu_264_p_opcode = 5'd5;

assign icmp_ln107_10_fu_1098_p2 = ((tmp_1_fu_1067_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln107_11_fu_1104_p2 = ((trunc_ln107_5_fu_1077_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln107_12_fu_1116_p2 = ((tmp_2_fu_1084_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln107_13_fu_1122_p2 = ((trunc_ln107_6_fu_1094_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln107_1_fu_863_p2 = ((trunc_ln107_fu_853_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln107_2_fu_922_p2 = ((tmp_5_fu_891_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln107_3_fu_928_p2 = ((trunc_ln107_1_fu_901_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln107_4_fu_940_p2 = ((tmp_6_fu_908_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln107_5_fu_946_p2 = ((trunc_ln107_2_fu_918_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln107_6_fu_1010_p2 = ((tmp_8_fu_979_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln107_7_fu_1016_p2 = ((trunc_ln107_3_fu_989_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln107_8_fu_1028_p2 = ((tmp_9_fu_996_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln107_9_fu_1034_p2 = ((trunc_ln107_4_fu_1006_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln107_fu_857_p2 = ((tmp_fu_843_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln113_1_fu_1175_p2 = ((trunc_ln113_fu_1165_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln113_fu_1169_p2 = ((tmp_10_fu_1155_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln96_fu_245_p2 = ((ap_sig_allocacmp_indvar_flatten75_load == 11'd1176) ? 1'b1 : 1'b0);

assign icmp_ln97_fu_266_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 8'd196) ? 1'b1 : 1'b0);

assign icmp_ln98_fu_316_p2 = ((ap_sig_allocacmp_k_load == 4'd14) ? 1'b1 : 1'b0);

assign in_data_address0 = zext_ln106_4_fu_826_p1;

assign in_data_address1 = zext_ln106_3_fu_815_p1;

assign in_data_address2 = zext_ln106_2_fu_804_p1;

assign in_data_address3 = zext_ln106_1_fu_793_p1;

assign or_ln106_1_fu_820_p2 = (13'd1 | add_ln106_1_fu_809_p2);

assign or_ln106_fu_798_p2 = (13'd1 | add_ln106_fu_787_p2);

assign or_ln107_1_fu_934_p2 = (icmp_ln107_3_fu_928_p2 | icmp_ln107_2_fu_922_p2);

assign or_ln107_2_fu_952_p2 = (icmp_ln107_5_fu_946_p2 | icmp_ln107_4_fu_940_p2);

assign or_ln107_3_fu_1022_p2 = (icmp_ln107_7_fu_1016_p2 | icmp_ln107_6_fu_1010_p2);

assign or_ln107_4_fu_1040_p2 = (icmp_ln107_9_fu_1034_p2 | icmp_ln107_8_fu_1028_p2);

assign or_ln107_5_fu_1110_p2 = (icmp_ln107_11_fu_1104_p2 | icmp_ln107_10_fu_1098_p2);

assign or_ln107_6_fu_1128_p2 = (icmp_ln107_13_fu_1122_p2 | icmp_ln107_12_fu_1116_p2);

assign or_ln107_fu_869_p2 = (icmp_ln107_fu_857_p2 | icmp_ln107_1_fu_863_p2);

assign or_ln113_fu_1181_p2 = (icmp_ln113_fu_1169_p2 | icmp_ln113_1_fu_1175_p2);

assign or_ln97_fu_335_p2 = (icmp_ln97_reg_1278_pp0_iter1_reg | and_ln97_fu_330_p2);

assign p1_out_data_address0 = zext_ln113_1_fu_1201_p1;

assign p1_out_data_d0 = select_ln113_reg_1433;

assign p_mid121_fu_589_p2 = (p_shl_cast_mid1_fu_574_p1 - p_shl4_cast_mid1_fu_585_p1);

assign p_mid15_fu_721_p2 = (p_shl7_0_cast_mid1_fu_706_p1 - p_shl8_0_cast_mid1_fu_717_p1);

assign p_mid17_fu_738_p2 = (5'd1 | add_ln97_1_reg_1341);

assign p_mid19_fu_767_p2 = (p_shl7_1_cast_mid1_fu_751_p1 - p_shl8_1_cast_mid1_fu_763_p1);

assign p_mid1_fu_656_p2 = (zext_ln97_2_fu_653_p1 + select_ln97_2_fu_595_p3);

assign p_shl4_cast_fu_455_p1 = p_shl4_fu_448_p3;

assign p_shl4_cast_mid1_fu_585_p1 = p_shl4_mid1_fu_578_p3;

assign p_shl4_fu_448_p3 = {{ch_1_reg_1262_pp0_iter3_reg}, {1'd0}};

assign p_shl4_mid1_fu_578_p3 = {{add_ln96_reg_1272_pp0_iter3_reg}, {1'd0}};

assign p_shl5_fu_478_p3 = {{empty_82_fu_474_p1}, {4'd0}};

assign p_shl5_mid1_fu_666_p3 = {{empty_88_fu_662_p1}, {4'd0}};

assign p_shl5_mid_fu_606_p3 = {{empty_87_fu_602_p1}, {4'd0}};

assign p_shl6_cast_fu_494_p1 = $signed(p_shl6_fu_486_p3);

assign p_shl6_cast_mid139_fu_622_p1 = $signed(p_shl6_mid_fu_614_p3);

assign p_shl6_cast_mid1_fu_682_p1 = $signed(p_shl6_mid1_fu_674_p3);

assign p_shl6_fu_486_p3 = {{empty_81_fu_468_p2}, {1'd0}};

assign p_shl6_mid1_fu_674_p3 = {{p_mid1_fu_656_p2}, {1'd0}};

assign p_shl6_mid_fu_614_p3 = {{p_mid121_fu_589_p2}, {1'd0}};

assign p_shl7_0_cast_fu_511_p1 = p_shl7_fu_504_p3;

assign p_shl7_0_cast_mid1_fu_706_p1 = p_shl7_0_mid1_fu_699_p3;

assign p_shl7_0_mid1_fu_699_p3 = {{add_ln97_1_reg_1341}, {5'd0}};

assign p_shl7_1_cast_fu_545_p1 = p_shl7_1_fu_537_p3;

assign p_shl7_1_cast_mid1_fu_751_p1 = p_shl7_1_mid1_fu_743_p3;

assign p_shl7_1_fu_537_p3 = {{empty_84_fu_532_p2}, {5'd0}};

assign p_shl7_1_mid1_fu_743_p3 = {{p_mid17_fu_738_p2}, {5'd0}};

assign p_shl7_fu_504_p3 = {{r_1_reg_1324}, {5'd0}};

assign p_shl8_0_cast_fu_522_p1 = p_shl8_fu_515_p3;

assign p_shl8_0_cast_mid1_fu_717_p1 = p_shl8_0_mid1_fu_710_p3;

assign p_shl8_0_mid1_fu_710_p3 = {{add_ln97_1_reg_1341}, {2'd0}};

assign p_shl8_1_cast_fu_557_p1 = p_shl8_1_fu_549_p3;

assign p_shl8_1_cast_mid1_fu_763_p1 = p_shl8_1_mid1_fu_755_p3;

assign p_shl8_1_fu_549_p3 = {{empty_84_fu_532_p2}, {2'd0}};

assign p_shl8_1_mid1_fu_755_p3 = {{p_mid17_fu_738_p2}, {2'd0}};

assign p_shl8_fu_515_p3 = {{r_1_reg_1324}, {2'd0}};

assign p_shl_cast_fu_444_p1 = p_shl_fu_437_p3;

assign p_shl_cast_mid1_fu_574_p1 = p_shl_mid1_fu_567_p3;

assign p_shl_fu_437_p3 = {{ch_1_reg_1262_pp0_iter3_reg}, {4'd0}};

assign p_shl_mid1_fu_567_p3 = {{add_ln96_reg_1272_pp0_iter3_reg}, {4'd0}};

assign select_ln107_1_fu_970_p3 = ((and_ln107_2_fu_964_p2[0:0] == 1'b1) ? in_data_load_1_reg_1385_pp0_iter8_reg : select_ln107_reg_1406_pp0_iter8_reg);

assign select_ln107_2_fu_1058_p3 = ((and_ln107_4_fu_1052_p2[0:0] == 1'b1) ? in_data_load_2_reg_1392_pp0_iter10_reg : select_ln107_1_reg_1413_pp0_iter10_reg);

assign select_ln107_3_fu_1146_p3 = ((and_ln107_6_fu_1140_p2[0:0] == 1'b1) ? in_data_load_3_reg_1399_pp0_iter12_reg : select_ln107_2_reg_1420_pp0_iter12_reg);

assign select_ln107_fu_881_p3 = ((and_ln107_fu_875_p2[0:0] == 1'b1) ? in_data_load_reg_1378_pp0_iter6_reg : 32'd3279880192);

assign select_ln113_fu_1193_p3 = ((and_ln113_fu_1187_p2[0:0] == 1'b1) ? 32'd0 : bitcast_ln113_fu_1152_p1);

assign select_ln97_10_cast_fu_734_p1 = $signed(select_ln97_10_fu_727_p3);

assign select_ln97_10_fu_727_p3 = ((and_ln97_reg_1305_pp0_iter3_reg[0:0] == 1'b1) ? p_mid15_fu_721_p2 : select_ln97_5_fu_639_p3);

assign select_ln97_11_cast_fu_780_p1 = $signed(select_ln97_11_fu_773_p3);

assign select_ln97_11_fu_773_p3 = ((and_ln97_reg_1305_pp0_iter3_reg[0:0] == 1'b1) ? p_mid19_fu_767_p2 : select_ln97_6_fu_646_p3);

assign select_ln97_12_fu_413_p3 = ((and_ln97_reg_1305[0:0] == 1'b1) ? add_ln97_fu_401_p2 : select_ln97_fu_387_p3);

assign select_ln97_13_fu_420_p3 = ((and_ln97_reg_1305[0:0] == 1'b1) ? add_ln97_1_fu_407_p2 : select_ln97_1_fu_394_p3);

assign select_ln97_14_fu_290_p3 = ((icmp_ln97_fu_266_p2[0:0] == 1'b1) ? 8'd1 : add_ln97_2_fu_284_p2);

assign select_ln97_1_fu_394_p3 = ((icmp_ln97_reg_1278_pp0_iter2_reg[0:0] == 1'b1) ? 5'd0 : r_fu_100);

assign select_ln97_2_fu_595_p3 = ((icmp_ln97_reg_1278_pp0_iter3_reg[0:0] == 1'b1) ? p_mid121_fu_589_p2 : empty_fu_459_p2);

assign select_ln97_3_fu_272_p3 = ((icmp_ln97_fu_266_p2[0:0] == 1'b1) ? add_ln96_fu_260_p2 : ap_sig_allocacmp_ch_1);

assign select_ln97_4_fu_632_p3 = ((icmp_ln97_reg_1278_pp0_iter3_reg[0:0] == 1'b1) ? sub_ln100_1_fu_626_p2 : sub_ln100_fu_498_p2);

assign select_ln97_5_fu_639_p3 = ((icmp_ln97_reg_1278_pp0_iter3_reg[0:0] == 1'b1) ? 11'd0 : empty_83_fu_526_p2);

assign select_ln97_6_fu_646_p3 = ((icmp_ln97_reg_1278_pp0_iter3_reg[0:0] == 1'b1) ? 11'd28 : empty_85_fu_561_p2);

assign select_ln97_7_fu_340_p3 = ((or_ln97_fu_335_p2[0:0] == 1'b1) ? 4'd0 : k_load_reg_1295);

assign select_ln97_8_fu_347_p3 = ((or_ln97_fu_335_p2[0:0] == 1'b1) ? 5'd0 : c_fu_92);

assign select_ln97_9_fu_692_p3 = ((and_ln97_reg_1305_pp0_iter3_reg[0:0] == 1'b1) ? sub_ln100_2_fu_686_p2 : select_ln97_4_fu_632_p3);

assign select_ln97_fu_387_p3 = ((icmp_ln97_reg_1278_pp0_iter2_reg[0:0] == 1'b1) ? 4'd0 : g_fu_104);

assign sub_ln100_1_fu_626_p2 = ($signed(p_shl5_mid_fu_606_p3) - $signed(p_shl6_cast_mid139_fu_622_p1));

assign sub_ln100_2_fu_686_p2 = ($signed(p_shl5_mid1_fu_666_p3) - $signed(p_shl6_cast_mid1_fu_682_p1));

assign sub_ln100_fu_498_p2 = ($signed(p_shl5_fu_478_p3) - $signed(p_shl6_cast_fu_494_p1));

assign tmp_10_fu_1155_p4 = {{bitcast_ln113_fu_1152_p1[30:23]}};

assign tmp_1_fu_1067_p4 = {{bitcast_ln107_5_fu_1064_p1[30:23]}};

assign tmp_2_fu_1084_p4 = {{bitcast_ln107_6_fu_1081_p1[30:23]}};

assign tmp_5_fu_891_p4 = {{bitcast_ln107_1_fu_888_p1[30:23]}};

assign tmp_6_fu_908_p4 = {{bitcast_ln107_2_fu_905_p1[30:23]}};

assign tmp_8_fu_979_p4 = {{bitcast_ln107_3_fu_976_p1[30:23]}};

assign tmp_9_fu_996_p4 = {{bitcast_ln107_4_fu_993_p1[30:23]}};

assign tmp_fu_843_p4 = {{bitcast_ln107_fu_840_p1[30:23]}};

assign trunc_ln107_1_fu_901_p1 = bitcast_ln107_1_fu_888_p1[22:0];

assign trunc_ln107_2_fu_918_p1 = bitcast_ln107_2_fu_905_p1[22:0];

assign trunc_ln107_3_fu_989_p1 = bitcast_ln107_3_fu_976_p1[22:0];

assign trunc_ln107_4_fu_1006_p1 = bitcast_ln107_4_fu_993_p1[22:0];

assign trunc_ln107_5_fu_1077_p1 = bitcast_ln107_5_fu_1064_p1[22:0];

assign trunc_ln107_6_fu_1094_p1 = bitcast_ln107_6_fu_1081_p1[22:0];

assign trunc_ln107_fu_853_p1 = bitcast_ln107_fu_840_p1[22:0];

assign trunc_ln113_fu_1165_p1 = bitcast_ln113_fu_1152_p1[22:0];

assign xor_ln97_fu_325_p2 = (icmp_ln97_reg_1278_pp0_iter1_reg ^ 1'd1);

assign zext_ln106_1_fu_793_p1 = add_ln106_fu_787_p2;

assign zext_ln106_2_fu_804_p1 = or_ln106_fu_798_p2;

assign zext_ln106_3_fu_815_p1 = add_ln106_1_fu_809_p2;

assign zext_ln106_4_fu_826_p1 = or_ln106_1_fu_820_p2;

assign zext_ln106_fu_784_p1 = empty_89_reg_1348;

assign zext_ln113_1_fu_1201_p1 = add_ln113_reg_1373_pp0_iter15_reg;

assign zext_ln113_fu_831_p1 = select_ln97_7_reg_1314_pp0_iter3_reg;

assign zext_ln97_2_fu_653_p1 = add_ln97_reg_1336;

assign zext_ln97_fu_465_p1 = g_1_reg_1331;

endmodule //lenet5_Pooling2dMax_float_1_0_1036831949u_1
