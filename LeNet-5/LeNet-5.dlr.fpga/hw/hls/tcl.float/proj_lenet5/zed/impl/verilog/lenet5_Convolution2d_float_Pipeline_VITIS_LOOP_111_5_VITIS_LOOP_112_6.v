// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module lenet5_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_data_AWVALID,
        m_axi_data_AWREADY,
        m_axi_data_AWADDR,
        m_axi_data_AWID,
        m_axi_data_AWLEN,
        m_axi_data_AWSIZE,
        m_axi_data_AWBURST,
        m_axi_data_AWLOCK,
        m_axi_data_AWCACHE,
        m_axi_data_AWPROT,
        m_axi_data_AWQOS,
        m_axi_data_AWREGION,
        m_axi_data_AWUSER,
        m_axi_data_WVALID,
        m_axi_data_WREADY,
        m_axi_data_WDATA,
        m_axi_data_WSTRB,
        m_axi_data_WLAST,
        m_axi_data_WID,
        m_axi_data_WUSER,
        m_axi_data_ARVALID,
        m_axi_data_ARREADY,
        m_axi_data_ARADDR,
        m_axi_data_ARID,
        m_axi_data_ARLEN,
        m_axi_data_ARSIZE,
        m_axi_data_ARBURST,
        m_axi_data_ARLOCK,
        m_axi_data_ARCACHE,
        m_axi_data_ARPROT,
        m_axi_data_ARQOS,
        m_axi_data_ARREGION,
        m_axi_data_ARUSER,
        m_axi_data_RVALID,
        m_axi_data_RREADY,
        m_axi_data_RDATA,
        m_axi_data_RLAST,
        m_axi_data_RID,
        m_axi_data_RFIFONUM,
        m_axi_data_RUSER,
        m_axi_data_RRESP,
        m_axi_data_BVALID,
        m_axi_data_BREADY,
        m_axi_data_BRESP,
        m_axi_data_BID,
        m_axi_data_BUSER,
        in_data,
        conv1_weight_load,
        conv1_weight_load_1,
        conv1_weight_load_2,
        conv1_weight_load_3,
        conv1_weight_load_4,
        conv1_weight_load_5,
        conv1_weight_load_6,
        conv1_weight_load_7,
        conv1_weight_load_8,
        conv1_weight_load_9,
        conv1_weight_load_10,
        conv1_weight_load_11,
        conv1_weight_load_12,
        conv1_weight_load_13,
        conv1_weight_load_14,
        conv1_weight_load_15,
        conv1_weight_load_16,
        conv1_weight_load_17,
        conv1_weight_load_18,
        conv1_weight_load_19,
        conv1_weight_load_20,
        conv1_weight_load_21,
        conv1_weight_load_22,
        conv1_weight_load_23,
        conv1_weight_load_24,
        phi_mul186,
        out_data_address0,
        out_data_ce0,
        out_data_we0,
        out_data_d0,
        out_data_q0,
        grp_fu_1145_p_din0,
        grp_fu_1145_p_din1,
        grp_fu_1145_p_opcode,
        grp_fu_1145_p_dout0,
        grp_fu_1145_p_ce,
        grp_fu_1149_p_din0,
        grp_fu_1149_p_din1,
        grp_fu_1149_p_opcode,
        grp_fu_1149_p_dout0,
        grp_fu_1149_p_ce,
        grp_fu_1153_p_din0,
        grp_fu_1153_p_din1,
        grp_fu_1153_p_dout0,
        grp_fu_1153_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 25'd1;
parameter    ap_ST_fsm_pp0_stage1 = 25'd2;
parameter    ap_ST_fsm_pp0_stage2 = 25'd4;
parameter    ap_ST_fsm_pp0_stage3 = 25'd8;
parameter    ap_ST_fsm_pp0_stage4 = 25'd16;
parameter    ap_ST_fsm_pp0_stage5 = 25'd32;
parameter    ap_ST_fsm_pp0_stage6 = 25'd64;
parameter    ap_ST_fsm_pp0_stage7 = 25'd128;
parameter    ap_ST_fsm_pp0_stage8 = 25'd256;
parameter    ap_ST_fsm_pp0_stage9 = 25'd512;
parameter    ap_ST_fsm_pp0_stage10 = 25'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 25'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 25'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 25'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 25'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 25'd32768;
parameter    ap_ST_fsm_pp0_stage16 = 25'd65536;
parameter    ap_ST_fsm_pp0_stage17 = 25'd131072;
parameter    ap_ST_fsm_pp0_stage18 = 25'd262144;
parameter    ap_ST_fsm_pp0_stage19 = 25'd524288;
parameter    ap_ST_fsm_pp0_stage20 = 25'd1048576;
parameter    ap_ST_fsm_pp0_stage21 = 25'd2097152;
parameter    ap_ST_fsm_pp0_stage22 = 25'd4194304;
parameter    ap_ST_fsm_pp0_stage23 = 25'd8388608;
parameter    ap_ST_fsm_pp0_stage24 = 25'd16777216;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_data_AWVALID;
input   m_axi_data_AWREADY;
output  [31:0] m_axi_data_AWADDR;
output  [0:0] m_axi_data_AWID;
output  [31:0] m_axi_data_AWLEN;
output  [2:0] m_axi_data_AWSIZE;
output  [1:0] m_axi_data_AWBURST;
output  [1:0] m_axi_data_AWLOCK;
output  [3:0] m_axi_data_AWCACHE;
output  [2:0] m_axi_data_AWPROT;
output  [3:0] m_axi_data_AWQOS;
output  [3:0] m_axi_data_AWREGION;
output  [0:0] m_axi_data_AWUSER;
output   m_axi_data_WVALID;
input   m_axi_data_WREADY;
output  [31:0] m_axi_data_WDATA;
output  [3:0] m_axi_data_WSTRB;
output   m_axi_data_WLAST;
output  [0:0] m_axi_data_WID;
output  [0:0] m_axi_data_WUSER;
output   m_axi_data_ARVALID;
input   m_axi_data_ARREADY;
output  [31:0] m_axi_data_ARADDR;
output  [0:0] m_axi_data_ARID;
output  [31:0] m_axi_data_ARLEN;
output  [2:0] m_axi_data_ARSIZE;
output  [1:0] m_axi_data_ARBURST;
output  [1:0] m_axi_data_ARLOCK;
output  [3:0] m_axi_data_ARCACHE;
output  [2:0] m_axi_data_ARPROT;
output  [3:0] m_axi_data_ARQOS;
output  [3:0] m_axi_data_ARREGION;
output  [0:0] m_axi_data_ARUSER;
input   m_axi_data_RVALID;
output   m_axi_data_RREADY;
input  [31:0] m_axi_data_RDATA;
input   m_axi_data_RLAST;
input  [0:0] m_axi_data_RID;
input  [8:0] m_axi_data_RFIFONUM;
input  [0:0] m_axi_data_RUSER;
input  [1:0] m_axi_data_RRESP;
input   m_axi_data_BVALID;
output   m_axi_data_BREADY;
input  [1:0] m_axi_data_BRESP;
input  [0:0] m_axi_data_BID;
input  [0:0] m_axi_data_BUSER;
input  [31:0] in_data;
input  [31:0] conv1_weight_load;
input  [31:0] conv1_weight_load_1;
input  [31:0] conv1_weight_load_2;
input  [31:0] conv1_weight_load_3;
input  [31:0] conv1_weight_load_4;
input  [31:0] conv1_weight_load_5;
input  [31:0] conv1_weight_load_6;
input  [31:0] conv1_weight_load_7;
input  [31:0] conv1_weight_load_8;
input  [31:0] conv1_weight_load_9;
input  [31:0] conv1_weight_load_10;
input  [31:0] conv1_weight_load_11;
input  [31:0] conv1_weight_load_12;
input  [31:0] conv1_weight_load_13;
input  [31:0] conv1_weight_load_14;
input  [31:0] conv1_weight_load_15;
input  [31:0] conv1_weight_load_16;
input  [31:0] conv1_weight_load_17;
input  [31:0] conv1_weight_load_18;
input  [31:0] conv1_weight_load_19;
input  [31:0] conv1_weight_load_20;
input  [31:0] conv1_weight_load_21;
input  [31:0] conv1_weight_load_22;
input  [31:0] conv1_weight_load_23;
input  [31:0] conv1_weight_load_24;
input  [11:0] phi_mul186;
output  [12:0] out_data_address0;
output   out_data_ce0;
output   out_data_we0;
output  [31:0] out_data_d0;
input  [31:0] out_data_q0;
output  [31:0] grp_fu_1145_p_din0;
output  [31:0] grp_fu_1145_p_din1;
output  [1:0] grp_fu_1145_p_opcode;
input  [31:0] grp_fu_1145_p_dout0;
output   grp_fu_1145_p_ce;
output  [31:0] grp_fu_1149_p_din0;
output  [31:0] grp_fu_1149_p_din1;
output  [1:0] grp_fu_1149_p_opcode;
input  [31:0] grp_fu_1149_p_dout0;
output   grp_fu_1149_p_ce;
output  [31:0] grp_fu_1153_p_din0;
output  [31:0] grp_fu_1153_p_din1;
input  [31:0] grp_fu_1153_p_dout0;
output   grp_fu_1153_p_ce;

reg ap_idle;
reg m_axi_data_ARVALID;
reg[31:0] m_axi_data_ARADDR;
reg m_axi_data_RREADY;
reg[12:0] out_data_address0;
reg out_data_ce0;
reg out_data_we0;

(* fsm_encoding = "none" *) reg   [24:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage24;
reg   [0:0] icmp_ln111_reg_1240;
reg    ap_block_state25_pp0_stage24_iter0;
wire    ap_block_state50_pp0_stage24_iter1;
wire    ap_block_state75_pp0_stage24_iter2;
wire    ap_block_state100_pp0_stage24_iter3;
wire    ap_block_state125_pp0_stage24_iter4;
reg    ap_block_pp0_stage24_subdone;
reg    ap_condition_exit_pp0_iter0_stage24;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    data_blk_n_AR;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg    data_blk_n_R;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_pp0_stage15;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_pp0_stage16;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_pp0_stage17;
wire    ap_CS_fsm_pp0_stage18;
wire    ap_block_pp0_stage18;
wire    ap_CS_fsm_pp0_stage19;
wire    ap_block_pp0_stage19;
wire    ap_CS_fsm_pp0_stage20;
wire    ap_block_pp0_stage20;
wire    ap_CS_fsm_pp0_stage21;
wire    ap_block_pp0_stage21;
wire    ap_CS_fsm_pp0_stage22;
wire    ap_block_pp0_stage22;
wire    ap_CS_fsm_pp0_stage23;
wire    ap_block_pp0_stage23;
wire    ap_block_pp0_stage24;
wire    ap_block_pp0_stage0;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
reg   [31:0] reg_414;
reg    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_state34_pp0_stage8_iter1;
wire    ap_block_state59_pp0_stage8_iter2;
wire    ap_block_state84_pp0_stage8_iter3;
wire    ap_block_state109_pp0_stage8_iter4;
wire    ap_block_state134_pp0_stage8_iter5;
reg    ap_block_pp0_stage8_11001;
reg    ap_block_state10_pp0_stage9_iter0;
wire    ap_block_state35_pp0_stage9_iter1;
wire    ap_block_state60_pp0_stage9_iter2;
wire    ap_block_state85_pp0_stage9_iter3;
wire    ap_block_state110_pp0_stage9_iter4;
wire    ap_block_state135_pp0_stage9_iter5;
reg    ap_block_pp0_stage9_11001;
reg    ap_block_state11_pp0_stage10_iter0;
wire    ap_block_state36_pp0_stage10_iter1;
wire    ap_block_state61_pp0_stage10_iter2;
wire    ap_block_state86_pp0_stage10_iter3;
wire    ap_block_state111_pp0_stage10_iter4;
wire    ap_block_state136_pp0_stage10_iter5;
reg    ap_block_pp0_stage10_11001;
reg    ap_block_state12_pp0_stage11_iter0;
reg    ap_block_state12_io;
wire    ap_block_state37_pp0_stage11_iter1;
wire    ap_block_state62_pp0_stage11_iter2;
wire    ap_block_state87_pp0_stage11_iter3;
wire    ap_block_state112_pp0_stage11_iter4;
wire    ap_block_state137_pp0_stage11_iter5;
reg    ap_block_pp0_stage11_11001;
reg    ap_block_state13_pp0_stage12_iter0;
wire    ap_block_state38_pp0_stage12_iter1;
wire    ap_block_state63_pp0_stage12_iter2;
wire    ap_block_state88_pp0_stage12_iter3;
wire    ap_block_state113_pp0_stage12_iter4;
wire    ap_block_state138_pp0_stage12_iter5;
reg    ap_block_pp0_stage12_11001;
reg   [31:0] reg_418;
reg    ap_block_state14_pp0_stage13_iter0;
wire    ap_block_state39_pp0_stage13_iter1;
wire    ap_block_state64_pp0_stage13_iter2;
wire    ap_block_state89_pp0_stage13_iter3;
wire    ap_block_state114_pp0_stage13_iter4;
wire    ap_block_state139_pp0_stage13_iter5;
reg    ap_block_pp0_stage13_11001;
reg    ap_block_state15_pp0_stage14_iter0;
wire    ap_block_state40_pp0_stage14_iter1;
wire    ap_block_state65_pp0_stage14_iter2;
wire    ap_block_state90_pp0_stage14_iter3;
wire    ap_block_state115_pp0_stage14_iter4;
wire    ap_block_state140_pp0_stage14_iter5;
reg    ap_block_pp0_stage14_11001;
reg    ap_block_state16_pp0_stage15_iter0;
wire    ap_block_state41_pp0_stage15_iter1;
wire    ap_block_state66_pp0_stage15_iter2;
wire    ap_block_state91_pp0_stage15_iter3;
wire    ap_block_state116_pp0_stage15_iter4;
wire    ap_block_state141_pp0_stage15_iter5;
reg    ap_block_pp0_stage15_11001;
reg    ap_block_state17_pp0_stage16_iter0;
reg    ap_block_state17_io;
wire    ap_block_state42_pp0_stage16_iter1;
wire    ap_block_state67_pp0_stage16_iter2;
wire    ap_block_state92_pp0_stage16_iter3;
wire    ap_block_state117_pp0_stage16_iter4;
wire    ap_block_state142_pp0_stage16_iter5;
reg    ap_block_pp0_stage16_11001;
reg    ap_block_state18_pp0_stage17_iter0;
wire    ap_block_state43_pp0_stage17_iter1;
wire    ap_block_state68_pp0_stage17_iter2;
wire    ap_block_state93_pp0_stage17_iter3;
wire    ap_block_state118_pp0_stage17_iter4;
wire    ap_block_state143_pp0_stage17_iter5;
reg    ap_block_pp0_stage17_11001;
reg   [31:0] reg_422;
reg    ap_block_state23_pp0_stage22_iter0;
wire    ap_block_state48_pp0_stage22_iter1;
wire    ap_block_state73_pp0_stage22_iter2;
wire    ap_block_state98_pp0_stage22_iter3;
wire    ap_block_state123_pp0_stage22_iter4;
reg    ap_block_pp0_stage22_11001;
wire    ap_block_state3_pp0_stage2_iter0;
reg    ap_block_state28_pp0_stage2_iter1;
wire    ap_block_state53_pp0_stage2_iter2;
wire    ap_block_state78_pp0_stage2_iter3;
wire    ap_block_state103_pp0_stage2_iter4;
wire    ap_block_state128_pp0_stage2_iter5;
reg    ap_block_pp0_stage2_11001;
wire    ap_block_state8_pp0_stage7_iter0;
reg    ap_block_state33_pp0_stage7_iter1;
wire    ap_block_state58_pp0_stage7_iter2;
wire    ap_block_state83_pp0_stage7_iter3;
wire    ap_block_state108_pp0_stage7_iter4;
wire    ap_block_state133_pp0_stage7_iter5;
reg    ap_block_pp0_stage7_11001;
reg   [31:0] reg_428;
reg    ap_block_state19_pp0_stage18_iter0;
wire    ap_block_state44_pp0_stage18_iter1;
wire    ap_block_state69_pp0_stage18_iter2;
wire    ap_block_state94_pp0_stage18_iter3;
wire    ap_block_state119_pp0_stage18_iter4;
wire    ap_block_state144_pp0_stage18_iter5;
reg    ap_block_pp0_stage18_11001;
reg    ap_block_state20_pp0_stage19_iter0;
wire    ap_block_state45_pp0_stage19_iter1;
wire    ap_block_state70_pp0_stage19_iter2;
wire    ap_block_state95_pp0_stage19_iter3;
wire    ap_block_state120_pp0_stage19_iter4;
wire    ap_block_state145_pp0_stage19_iter5;
reg    ap_block_pp0_stage19_11001;
reg    ap_block_state21_pp0_stage20_iter0;
wire    ap_block_state46_pp0_stage20_iter1;
wire    ap_block_state71_pp0_stage20_iter2;
wire    ap_block_state96_pp0_stage20_iter3;
wire    ap_block_state121_pp0_stage20_iter4;
wire    ap_block_state146_pp0_stage20_iter5;
reg    ap_block_pp0_stage20_11001;
reg    ap_block_state22_pp0_stage21_iter0;
reg    ap_block_state22_io;
wire    ap_block_state47_pp0_stage21_iter1;
wire    ap_block_state72_pp0_stage21_iter2;
wire    ap_block_state97_pp0_stage21_iter3;
wire    ap_block_state122_pp0_stage21_iter4;
reg    ap_block_pp0_stage21_11001;
reg   [31:0] reg_432;
reg    ap_block_state24_pp0_stage23_iter0;
wire    ap_block_state49_pp0_stage23_iter1;
wire    ap_block_state74_pp0_stage23_iter2;
wire    ap_block_state99_pp0_stage23_iter3;
wire    ap_block_state124_pp0_stage23_iter4;
reg    ap_block_pp0_stage23_11001;
reg    ap_block_pp0_stage24_11001;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state26_pp0_stage0_iter1;
wire    ap_block_state51_pp0_stage0_iter2;
wire    ap_block_state76_pp0_stage0_iter3;
wire    ap_block_state101_pp0_stage0_iter4;
wire    ap_block_state126_pp0_stage0_iter5;
reg    ap_block_pp0_stage0_11001;
wire    ap_block_state2_pp0_stage1_iter0;
reg    ap_block_state2_io;
reg    ap_block_state27_pp0_stage1_iter1;
wire    ap_block_state52_pp0_stage1_iter2;
wire    ap_block_state77_pp0_stage1_iter3;
wire    ap_block_state102_pp0_stage1_iter4;
wire    ap_block_state127_pp0_stage1_iter5;
reg    ap_block_pp0_stage1_11001;
reg   [31:0] reg_436;
wire    ap_block_state4_pp0_stage3_iter0;
reg    ap_block_state29_pp0_stage3_iter1;
wire    ap_block_state54_pp0_stage3_iter2;
wire    ap_block_state79_pp0_stage3_iter3;
wire    ap_block_state104_pp0_stage3_iter4;
wire    ap_block_state129_pp0_stage3_iter5;
reg    ap_block_pp0_stage3_11001;
wire    ap_block_state5_pp0_stage4_iter0;
reg    ap_block_state30_pp0_stage4_iter1;
wire    ap_block_state55_pp0_stage4_iter2;
wire    ap_block_state80_pp0_stage4_iter3;
wire    ap_block_state105_pp0_stage4_iter4;
wire    ap_block_state130_pp0_stage4_iter5;
reg    ap_block_pp0_stage4_11001;
wire    ap_block_state6_pp0_stage5_iter0;
reg    ap_block_state31_pp0_stage5_iter1;
wire    ap_block_state56_pp0_stage5_iter2;
wire    ap_block_state81_pp0_stage5_iter3;
wire    ap_block_state106_pp0_stage5_iter4;
wire    ap_block_state131_pp0_stage5_iter5;
reg    ap_block_pp0_stage5_11001;
wire    ap_block_state7_pp0_stage6_iter0;
reg    ap_block_state7_io;
reg    ap_block_state32_pp0_stage6_iter1;
wire    ap_block_state57_pp0_stage6_iter2;
wire    ap_block_state82_pp0_stage6_iter3;
wire    ap_block_state107_pp0_stage6_iter4;
wire    ap_block_state132_pp0_stage6_iter5;
reg    ap_block_pp0_stage6_11001;
reg   [31:0] reg_440;
reg   [31:0] reg_445;
reg   [31:0] reg_451;
reg   [31:0] reg_457;
reg   [31:0] reg_464;
reg   [4:0] g_0_load_reg_1234;
wire   [0:0] icmp_ln111_fu_501_p2;
reg   [0:0] icmp_ln111_reg_1240_pp0_iter1_reg;
reg   [0:0] icmp_ln111_reg_1240_pp0_iter2_reg;
reg   [0:0] icmp_ln111_reg_1240_pp0_iter3_reg;
reg   [0:0] icmp_ln111_reg_1240_pp0_iter4_reg;
wire   [4:0] add_ln111_fu_516_p2;
reg   [4:0] add_ln111_reg_1244;
wire   [0:0] icmp_ln112_fu_522_p2;
reg   [0:0] icmp_ln112_reg_1250;
wire   [4:0] phi_ln114_mid2_fu_528_p3;
reg   [4:0] phi_ln114_mid2_reg_1256;
reg   [29:0] trunc_ln4_reg_1264;
wire   [9:0] tmp1_0_0_mid2_fu_672_p3;
reg   [9:0] tmp1_0_0_mid2_reg_1275;
wire  signed [5:0] tmp1_fu_679_p3;
reg  signed [5:0] tmp1_reg_1282;
reg   [29:0] trunc_ln116_1_reg_1287;
wire   [12:0] add_ln114_1_fu_735_p2;
reg   [12:0] add_ln114_1_reg_1292;
reg   [12:0] add_ln114_1_reg_1292_pp0_iter1_reg;
reg   [12:0] add_ln114_1_reg_1292_pp0_iter2_reg;
reg   [12:0] add_ln114_1_reg_1292_pp0_iter3_reg;
wire   [31:0] bitcast_ln127_fu_751_p1;
wire   [31:0] bitcast_ln127_1_fu_756_p1;
reg   [29:0] trunc_ln116_2_reg_1313;
wire   [9:0] empty_103_fu_811_p2;
reg   [9:0] empty_103_reg_1318;
wire   [9:0] empty_106_fu_827_p2;
reg   [9:0] empty_106_reg_1323;
wire   [31:0] bitcast_ln127_2_fu_832_p1;
reg   [31:0] mul_reg_1339;
wire   [31:0] bitcast_ln127_3_fu_847_p1;
reg   [31:0] mul_0_0_1_reg_1349;
wire   [31:0] bitcast_ln127_4_fu_852_p1;
reg   [31:0] mul_0_0_2_reg_1359;
wire   [31:0] bitcast_ln127_5_fu_857_p1;
reg   [31:0] mul_0_0_3_reg_1369;
wire   [31:0] bitcast_ln127_6_fu_862_p1;
reg   [29:0] trunc_ln116_3_reg_1379;
reg   [31:0] mul_0_0_4_reg_1384;
wire   [31:0] bitcast_ln127_7_fu_893_p1;
reg   [31:0] mul_0_1_reg_1400;
wire   [31:0] bitcast_ln127_8_fu_908_p1;
reg   [31:0] mul_0_1_1_reg_1410;
wire   [31:0] bitcast_ln127_9_fu_913_p1;
reg   [31:0] mul_0_1_2_reg_1420;
reg   [31:0] mul_0_1_2_reg_1420_pp0_iter1_reg;
wire   [31:0] bitcast_ln127_10_fu_918_p1;
reg   [31:0] mul_0_1_3_reg_1430;
reg   [31:0] mul_0_1_3_reg_1430_pp0_iter1_reg;
wire   [31:0] bitcast_ln127_11_fu_923_p1;
reg   [29:0] trunc_ln116_4_reg_1440;
reg   [31:0] mul_0_1_4_reg_1445;
reg   [31:0] mul_0_1_4_reg_1445_pp0_iter1_reg;
wire   [31:0] bitcast_ln127_12_fu_954_p1;
reg   [31:0] mul_0_2_reg_1461;
reg   [31:0] mul_0_2_reg_1461_pp0_iter1_reg;
wire   [31:0] bitcast_ln127_13_fu_969_p1;
reg   [31:0] mul_0_2_1_reg_1471;
reg   [31:0] mul_0_2_1_reg_1471_pp0_iter1_reg;
wire   [31:0] bitcast_ln127_14_fu_974_p1;
reg   [31:0] mul_0_2_2_reg_1481;
reg   [31:0] mul_0_2_2_reg_1481_pp0_iter1_reg;
wire   [31:0] bitcast_ln127_15_fu_979_p1;
reg   [31:0] mul_0_2_3_reg_1491;
reg   [31:0] mul_0_2_3_reg_1491_pp0_iter2_reg;
reg   [31:0] mul_0_2_3_reg_1491_pp0_iter3_reg;
wire   [31:0] bitcast_ln127_16_fu_984_p1;
reg   [31:0] mul_0_2_4_reg_1501;
reg   [31:0] mul_0_2_4_reg_1501_pp0_iter2_reg;
reg   [31:0] mul_0_2_4_reg_1501_pp0_iter3_reg;
wire   [31:0] bitcast_ln127_17_fu_989_p1;
reg   [31:0] mul_0_3_reg_1511;
reg   [31:0] mul_0_3_reg_1511_pp0_iter2_reg;
reg   [31:0] mul_0_3_reg_1511_pp0_iter3_reg;
wire   [31:0] bitcast_ln127_18_fu_994_p1;
reg   [31:0] mul_0_3_1_reg_1521;
reg   [31:0] mul_0_3_1_reg_1521_pp0_iter2_reg;
reg   [31:0] mul_0_3_1_reg_1521_pp0_iter3_reg;
wire   [31:0] bitcast_ln127_19_fu_999_p1;
reg   [31:0] mul_0_3_2_reg_1531;
reg   [31:0] mul_0_3_2_reg_1531_pp0_iter2_reg;
reg   [31:0] mul_0_3_2_reg_1531_pp0_iter3_reg;
wire   [31:0] bitcast_ln127_20_fu_1004_p1;
reg   [31:0] mul_0_3_3_reg_1541;
reg   [31:0] mul_0_3_3_reg_1541_pp0_iter2_reg;
reg   [31:0] mul_0_3_3_reg_1541_pp0_iter3_reg;
wire   [31:0] bitcast_ln127_21_fu_1009_p1;
reg   [31:0] mul_0_3_4_reg_1551;
reg   [31:0] mul_0_3_4_reg_1551_pp0_iter2_reg;
reg   [31:0] mul_0_3_4_reg_1551_pp0_iter3_reg;
reg   [31:0] mul_0_3_4_reg_1551_pp0_iter4_reg;
wire   [31:0] bitcast_ln127_22_fu_1014_p1;
reg   [31:0] mul_0_4_reg_1561;
reg   [31:0] mul_0_4_reg_1561_pp0_iter2_reg;
reg   [31:0] mul_0_4_reg_1561_pp0_iter3_reg;
reg   [31:0] mul_0_4_reg_1561_pp0_iter4_reg;
wire   [31:0] bitcast_ln127_23_fu_1019_p1;
reg   [31:0] mul_0_4_1_reg_1571;
reg   [31:0] mul_0_4_1_reg_1571_pp0_iter2_reg;
reg   [31:0] mul_0_4_1_reg_1571_pp0_iter3_reg;
reg   [31:0] mul_0_4_1_reg_1571_pp0_iter4_reg;
wire   [31:0] bitcast_ln127_24_fu_1024_p1;
reg   [31:0] mul_0_4_2_reg_1581;
reg   [31:0] mul_0_4_2_reg_1581_pp0_iter2_reg;
reg   [31:0] mul_0_4_2_reg_1581_pp0_iter3_reg;
reg   [31:0] mul_0_4_2_reg_1581_pp0_iter4_reg;
reg   [31:0] mul_0_4_3_reg_1586;
reg   [31:0] mul_0_4_3_reg_1586_pp0_iter2_reg;
reg   [31:0] mul_0_4_3_reg_1586_pp0_iter3_reg;
reg   [31:0] mul_0_4_3_reg_1586_pp0_iter4_reg;
reg   [31:0] mul_0_4_4_reg_1591;
reg   [31:0] mul_0_4_4_reg_1591_pp0_iter2_reg;
reg   [31:0] mul_0_4_4_reg_1591_pp0_iter3_reg;
reg   [31:0] mul_0_4_4_reg_1591_pp0_iter4_reg;
reg   [12:0] out_data_addr_reg_1596;
reg   [12:0] out_data_addr_reg_1596_pp0_iter4_reg;
wire   [0:0] addr_cmp_fu_1036_p2;
reg   [0:0] addr_cmp_reg_1601;
reg   [31:0] out_data_load_reg_1606;
wire   [31:0] reuse_select_fu_1050_p3;
reg   [31:0] reuse_select_reg_1611;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage20_subdone;
wire   [31:0] zext_ln114_2_fu_1029_p1;
wire  signed [31:0] sext_ln116_fu_595_p1;
wire  signed [31:0] sext_ln116_1_fu_741_p1;
wire  signed [31:0] sext_ln116_2_fu_837_p1;
wire  signed [31:0] sext_ln116_3_fu_898_p1;
wire  signed [31:0] sext_ln116_4_fu_959_p1;
reg   [31:0] reuse_addr_reg_fu_146;
wire    ap_loop_init;
reg   [31:0] reuse_reg_fu_150;
reg   [4:0] phi_ln114_fu_154;
wire   [4:0] add_ln112_fu_574_p2;
reg   [4:0] ap_sig_allocacmp_phi_ln114_load;
reg   [4:0] g_0_fu_158;
wire   [4:0] select_ln111_fu_536_p3;
reg   [4:0] ap_sig_allocacmp_g_0_load;
reg   [9:0] indvar_flatten7_fu_162;
wire   [9:0] add_ln111_1_fu_507_p2;
reg   [9:0] ap_sig_allocacmp_indvar_flatten7_load;
reg   [31:0] grp_fu_401_p0;
reg   [31:0] grp_fu_401_p1;
reg   [31:0] grp_fu_406_p0;
reg   [31:0] grp_fu_406_p1;
reg   [31:0] grp_fu_410_p0;
reg   [31:0] grp_fu_410_p1;
wire   [11:0] tmp_fu_544_p4;
wire   [31:0] p_cast18_fu_554_p1;
wire   [31:0] empty_95_fu_558_p2;
wire   [9:0] p_shl_fu_605_p3;
wire   [6:0] p_shl6_fu_616_p3;
wire   [10:0] p_shl_0_cast_fu_612_p1;
wire   [10:0] p_shl6_0_cast_fu_623_p1;
wire   [9:0] p_shl_0_mid1_fu_633_p3;
wire   [6:0] p_shl6_0_mid1_fu_644_p3;
wire   [10:0] p_shl_0_cast_mid1_fu_640_p1;
wire   [10:0] p_shl6_0_cast_mid1_fu_651_p1;
wire   [10:0] mul46_0_mid1_fu_655_p2;
wire   [10:0] mul46_0_fu_627_p2;
wire   [10:0] mul46_0_cast_mid2_v_fu_661_p3;
wire   [9:0] tmp1_cast_fu_686_p1;
wire   [9:0] empty_97_fu_690_p2;
wire   [11:0] tmp_12_fu_696_p3;
wire   [31:0] p_cast19_fu_704_p1;
wire   [31:0] empty_98_fu_708_p2;
wire   [11:0] zext_ln114_fu_723_p1;
wire   [11:0] add_ln114_fu_726_p2;
wire   [12:0] zext_ln114_1_fu_731_p1;
wire  signed [12:0] mul46_0_cast_mid2_fu_668_p1;
wire   [6:0] tmp2_fu_761_p3;
wire   [9:0] tmp2_cast_fu_768_p1;
wire   [9:0] empty_100_fu_772_p2;
wire   [11:0] tmp_14_fu_777_p3;
wire   [31:0] p_cast20_fu_785_p1;
wire   [31:0] empty_101_fu_789_p2;
wire  signed [6:0] tmp3_cast_cast_cast_fu_804_p1;
wire   [9:0] tmp3_cast_cast_cast_cast_fu_807_p1;
wire   [7:0] tmp3_fu_816_p3;
wire   [9:0] tmp4_cast_fu_823_p1;
wire   [11:0] tmp_15_fu_867_p3;
wire   [31:0] p_cast21_fu_874_p1;
wire   [31:0] empty_104_fu_878_p2;
wire   [11:0] tmp_17_fu_928_p3;
wire   [31:0] p_cast22_fu_935_p1;
wire   [31:0] empty_107_fu_939_p2;
reg    grp_fu_401_ce;
reg    grp_fu_406_ce;
reg    grp_fu_410_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter4_stage20;
reg    ap_idle_pp0_0to3;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg   [24:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to5;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
reg    ap_block_pp0_stage7_subdone;
reg    ap_block_pp0_stage8_subdone;
reg    ap_block_pp0_stage9_subdone;
reg    ap_block_pp0_stage10_subdone;
reg    ap_block_pp0_stage11_subdone;
reg    ap_block_pp0_stage12_subdone;
reg    ap_block_pp0_stage13_subdone;
reg    ap_block_pp0_stage14_subdone;
reg    ap_block_pp0_stage15_subdone;
reg    ap_block_pp0_stage16_subdone;
reg    ap_block_pp0_stage17_subdone;
reg    ap_block_pp0_stage18_subdone;
reg    ap_block_pp0_stage19_subdone;
reg    ap_block_pp0_stage21_subdone;
reg    ap_block_pp0_stage22_subdone;
reg    ap_block_pp0_stage23_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_block_pp0_stage13_00001;
reg    ap_block_pp0_stage18_00001;
reg    ap_block_pp0_stage23_00001;
reg    ap_block_pp0_stage3_00001;
reg    ap_block_pp0_stage8_00001;
reg    ap_block_pp0_stage14_00001;
reg    ap_block_pp0_stage19_00001;
reg    ap_block_pp0_stage24_00001;
reg    ap_block_pp0_stage4_00001;
reg    ap_block_pp0_stage9_00001;
reg    ap_block_pp0_stage15_00001;
reg    ap_block_pp0_stage20_00001;
reg    ap_block_pp0_stage0_00001;
reg    ap_block_pp0_stage5_00001;
reg    ap_block_pp0_stage10_00001;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 25'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

lenet5_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage24),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage20) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b1) & (1'b0 == ap_block_pp0_stage20_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage24)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_subdone))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_subdone))) begin
            ap_enable_reg_pp0_iter5 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_subdone))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter4_stage20) & (ap_idle_pp0_0to3 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter4_stage20) & (ap_idle_pp0_0to3 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter4_stage20) & (ap_idle_pp0_0to3 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter4_stage20) & (ap_idle_pp0_0to3 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln111_fu_501_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            g_0_fu_158 <= select_ln111_fu_536_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            g_0_fu_158 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln111_fu_501_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten7_fu_162 <= add_ln111_1_fu_507_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten7_fu_162 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln111_fu_501_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            phi_ln114_fu_154 <= add_ln112_fu_574_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            phi_ln114_fu_154 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1))) begin
        reuse_addr_reg_fu_146 <= 32'd4294967295;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001))) begin
        reuse_addr_reg_fu_146 <= zext_ln114_2_fu_1029_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1))) begin
        reuse_reg_fu_150 <= 32'd0;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001))) begin
        reuse_reg_fu_150 <= reg_457;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln111_fu_501_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln111_reg_1244 <= add_ln111_fu_516_p2;
        icmp_ln112_reg_1250 <= icmp_ln112_fu_522_p2;
        phi_ln114_mid2_reg_1256 <= phi_ln114_mid2_fu_528_p3;
        trunc_ln4_reg_1264 <= {{empty_95_fu_558_p2[31:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln111_reg_1240 == 1'd0))) begin
        add_ln114_1_reg_1292 <= add_ln114_1_fu_735_p2;
        tmp1_0_0_mid2_reg_1275[9 : 5] <= tmp1_0_0_mid2_fu_672_p3[9 : 5];
        tmp1_reg_1282[4 : 0] <= tmp1_fu_679_p3[4 : 0];
        trunc_ln116_1_reg_1287 <= {{empty_98_fu_708_p2[31:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        add_ln114_1_reg_1292_pp0_iter1_reg <= add_ln114_1_reg_1292;
        add_ln114_1_reg_1292_pp0_iter2_reg <= add_ln114_1_reg_1292_pp0_iter1_reg;
        add_ln114_1_reg_1292_pp0_iter3_reg <= add_ln114_1_reg_1292_pp0_iter2_reg;
        mul_0_3_3_reg_1541_pp0_iter2_reg <= mul_0_3_3_reg_1541;
        mul_0_3_3_reg_1541_pp0_iter3_reg <= mul_0_3_3_reg_1541_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001))) begin
        addr_cmp_reg_1601 <= addr_cmp_fu_1036_p2;
        mul_0_1_4_reg_1445_pp0_iter1_reg <= mul_0_1_4_reg_1445;
        out_data_addr_reg_1596 <= zext_ln114_2_fu_1029_p1;
        out_data_addr_reg_1596_pp0_iter4_reg <= out_data_addr_reg_1596;
        reuse_select_reg_1611 <= reuse_select_fu_1050_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001) & (icmp_ln111_reg_1240 == 1'd0))) begin
        empty_103_reg_1318 <= empty_103_fu_811_p2;
        empty_106_reg_1323 <= empty_106_fu_827_p2;
        trunc_ln116_2_reg_1313 <= {{empty_101_fu_789_p2[31:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        g_0_load_reg_1234 <= ap_sig_allocacmp_g_0_load;
        icmp_ln111_reg_1240 <= icmp_ln111_fu_501_p2;
        icmp_ln111_reg_1240_pp0_iter1_reg <= icmp_ln111_reg_1240;
        icmp_ln111_reg_1240_pp0_iter2_reg <= icmp_ln111_reg_1240_pp0_iter1_reg;
        icmp_ln111_reg_1240_pp0_iter3_reg <= icmp_ln111_reg_1240_pp0_iter2_reg;
        icmp_ln111_reg_1240_pp0_iter4_reg <= icmp_ln111_reg_1240_pp0_iter3_reg;
        mul_0_2_3_reg_1491_pp0_iter2_reg <= mul_0_2_3_reg_1491;
        mul_0_2_3_reg_1491_pp0_iter3_reg <= mul_0_2_3_reg_1491_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001) & (icmp_ln111_reg_1240 == 1'd0))) begin
        mul_0_0_1_reg_1349 <= grp_fu_1153_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001) & (icmp_ln111_reg_1240 == 1'd0))) begin
        mul_0_0_2_reg_1359 <= grp_fu_1153_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001) & (icmp_ln111_reg_1240 == 1'd0))) begin
        mul_0_0_3_reg_1369 <= grp_fu_1153_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001) & (icmp_ln111_reg_1240 == 1'd0))) begin
        mul_0_0_4_reg_1384 <= grp_fu_1153_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001) & (icmp_ln111_reg_1240 == 1'd0))) begin
        mul_0_1_1_reg_1410 <= grp_fu_1153_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001) & (icmp_ln111_reg_1240 == 1'd0))) begin
        mul_0_1_2_reg_1420 <= grp_fu_1153_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001))) begin
        mul_0_1_2_reg_1420_pp0_iter1_reg <= mul_0_1_2_reg_1420;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001) & (icmp_ln111_reg_1240 == 1'd0))) begin
        mul_0_1_3_reg_1430 <= grp_fu_1153_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001))) begin
        mul_0_1_3_reg_1430_pp0_iter1_reg <= mul_0_1_3_reg_1430;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001) & (icmp_ln111_reg_1240 == 1'd0))) begin
        mul_0_1_4_reg_1445 <= grp_fu_1153_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001) & (icmp_ln111_reg_1240 == 1'd0))) begin
        mul_0_1_reg_1400 <= grp_fu_1153_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001) & (icmp_ln111_reg_1240 == 1'd0))) begin
        mul_0_2_1_reg_1471 <= grp_fu_1153_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
        mul_0_2_1_reg_1471_pp0_iter1_reg <= mul_0_2_1_reg_1471;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001) & (icmp_ln111_reg_1240 == 1'd0))) begin
        mul_0_2_2_reg_1481 <= grp_fu_1153_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001))) begin
        mul_0_2_2_reg_1481_pp0_iter1_reg <= mul_0_2_2_reg_1481;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_0_2_3_reg_1491 <= grp_fu_1153_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        mul_0_2_4_reg_1501 <= grp_fu_1153_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        mul_0_2_4_reg_1501_pp0_iter2_reg <= mul_0_2_4_reg_1501;
        mul_0_2_4_reg_1501_pp0_iter3_reg <= mul_0_2_4_reg_1501_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001) & (icmp_ln111_reg_1240 == 1'd0))) begin
        mul_0_2_reg_1461 <= grp_fu_1153_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001))) begin
        mul_0_2_reg_1461_pp0_iter1_reg <= mul_0_2_reg_1461;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        mul_0_3_1_reg_1521 <= grp_fu_1153_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        mul_0_3_1_reg_1521_pp0_iter2_reg <= mul_0_3_1_reg_1521;
        mul_0_3_1_reg_1521_pp0_iter3_reg <= mul_0_3_1_reg_1521_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        mul_0_3_2_reg_1531 <= grp_fu_1153_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        mul_0_3_2_reg_1531_pp0_iter2_reg <= mul_0_3_2_reg_1531;
        mul_0_3_2_reg_1531_pp0_iter3_reg <= mul_0_3_2_reg_1531_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        mul_0_3_3_reg_1541 <= grp_fu_1153_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        mul_0_3_4_reg_1551 <= grp_fu_1153_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        mul_0_3_4_reg_1551_pp0_iter2_reg <= mul_0_3_4_reg_1551;
        mul_0_3_4_reg_1551_pp0_iter3_reg <= mul_0_3_4_reg_1551_pp0_iter2_reg;
        mul_0_3_4_reg_1551_pp0_iter4_reg <= mul_0_3_4_reg_1551_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        mul_0_3_reg_1511 <= grp_fu_1153_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        mul_0_3_reg_1511_pp0_iter2_reg <= mul_0_3_reg_1511;
        mul_0_3_reg_1511_pp0_iter3_reg <= mul_0_3_reg_1511_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        mul_0_4_1_reg_1571 <= grp_fu_1153_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        mul_0_4_1_reg_1571_pp0_iter2_reg <= mul_0_4_1_reg_1571;
        mul_0_4_1_reg_1571_pp0_iter3_reg <= mul_0_4_1_reg_1571_pp0_iter2_reg;
        mul_0_4_1_reg_1571_pp0_iter4_reg <= mul_0_4_1_reg_1571_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001))) begin
        mul_0_4_2_reg_1581 <= grp_fu_1153_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001))) begin
        mul_0_4_2_reg_1581_pp0_iter2_reg <= mul_0_4_2_reg_1581;
        mul_0_4_2_reg_1581_pp0_iter3_reg <= mul_0_4_2_reg_1581_pp0_iter2_reg;
        mul_0_4_2_reg_1581_pp0_iter4_reg <= mul_0_4_2_reg_1581_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001))) begin
        mul_0_4_3_reg_1586 <= grp_fu_1153_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001))) begin
        mul_0_4_3_reg_1586_pp0_iter2_reg <= mul_0_4_3_reg_1586;
        mul_0_4_3_reg_1586_pp0_iter3_reg <= mul_0_4_3_reg_1586_pp0_iter2_reg;
        mul_0_4_3_reg_1586_pp0_iter4_reg <= mul_0_4_3_reg_1586_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001))) begin
        mul_0_4_4_reg_1591 <= grp_fu_1153_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001))) begin
        mul_0_4_4_reg_1591_pp0_iter2_reg <= mul_0_4_4_reg_1591;
        mul_0_4_4_reg_1591_pp0_iter3_reg <= mul_0_4_4_reg_1591_pp0_iter2_reg;
        mul_0_4_4_reg_1591_pp0_iter4_reg <= mul_0_4_4_reg_1591_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        mul_0_4_reg_1561 <= grp_fu_1153_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        mul_0_4_reg_1561_pp0_iter2_reg <= mul_0_4_reg_1561;
        mul_0_4_reg_1561_pp0_iter3_reg <= mul_0_4_reg_1561_pp0_iter2_reg;
        mul_0_4_reg_1561_pp0_iter4_reg <= mul_0_4_reg_1561_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001) & (icmp_ln111_reg_1240 == 1'd0))) begin
        mul_reg_1339 <= grp_fu_1153_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001))) begin
        out_data_load_reg_1606 <= out_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001) & (icmp_ln111_reg_1240 == 1'd0)))) begin
        reg_414 <= m_axi_data_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001) & (icmp_ln111_reg_1240 == 1'd0)))) begin
        reg_418 <= m_axi_data_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001) & (icmp_ln111_reg_1240 == 1'd0)))) begin
        reg_422 <= grp_fu_1145_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001) & (icmp_ln111_reg_1240 == 1'd0)))) begin
        reg_428 <= m_axi_data_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001) & (icmp_ln111_reg_1240 == 1'd0)))) begin
        reg_432 <= m_axi_data_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)))) begin
        reg_436 <= m_axi_data_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001)))) begin
        reg_440 <= grp_fu_1149_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001)))) begin
        reg_445 <= grp_fu_1149_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001)))) begin
        reg_451 <= grp_fu_1145_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)))) begin
        reg_457 <= grp_fu_1149_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001)))) begin
        reg_464 <= grp_fu_1145_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001) & (icmp_ln111_reg_1240 == 1'd0))) begin
        trunc_ln116_3_reg_1379 <= {{empty_104_fu_878_p2[31:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001) & (icmp_ln111_reg_1240 == 1'd0))) begin
        trunc_ln116_4_reg_1440 <= {{empty_107_fu_939_p2[31:2]}};
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_subdone) & (icmp_ln111_reg_1240 == 1'd1))) begin
        ap_condition_exit_pp0_iter0_stage24 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage24 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln111_reg_1240_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_subdone))) begin
        ap_condition_exit_pp0_iter4_stage20 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter4_stage20 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage20) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b1) & (1'b0 == ap_block_pp0_stage20_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to3 = 1'b1;
    end else begin
        ap_idle_pp0_0to3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to5 = 1'b1;
    end else begin
        ap_idle_pp0_1to5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_g_0_load = 5'd0;
    end else begin
        ap_sig_allocacmp_g_0_load = g_0_fu_158;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten7_load = 10'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten7_load = indvar_flatten7_fu_162;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_phi_ln114_load = 5'd0;
    end else begin
        ap_sig_allocacmp_phi_ln114_load = phi_ln114_fu_154;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (icmp_ln111_reg_1240 == 1'd0)))) begin
        data_blk_n_AR = m_axi_data_ARREADY;
    end else begin
        data_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8) & (icmp_ln111_reg_1240 == 1'd0)))) begin
        data_blk_n_R = m_axi_data_RVALID;
    end else begin
        data_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        grp_fu_401_ce = 1'b1;
    end else begin
        grp_fu_401_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20)))) begin
        grp_fu_401_p0 = reg_464;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15))) begin
        grp_fu_401_p0 = reg_457;
    end else if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19)))) begin
        grp_fu_401_p0 = reg_451;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14))) begin
        grp_fu_401_p0 = reg_445;
    end else if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18)))) begin
        grp_fu_401_p0 = reg_422;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13))) begin
        grp_fu_401_p0 = mul_reg_1339;
    end else begin
        grp_fu_401_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10))) begin
        grp_fu_401_p1 = mul_0_4_4_reg_1591_pp0_iter4_reg;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5))) begin
        grp_fu_401_p1 = mul_0_4_3_reg_1586_pp0_iter4_reg;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_401_p1 = mul_0_4_2_reg_1581_pp0_iter4_reg;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20))) begin
        grp_fu_401_p1 = mul_0_4_1_reg_1571_pp0_iter4_reg;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15))) begin
        grp_fu_401_p1 = mul_0_4_reg_1561_pp0_iter4_reg;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9))) begin
        grp_fu_401_p1 = mul_0_2_4_reg_1501_pp0_iter3_reg;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_401_p1 = mul_0_2_3_reg_1491_pp0_iter3_reg;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24))) begin
        grp_fu_401_p1 = mul_0_2_2_reg_1481_pp0_iter1_reg;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19))) begin
        grp_fu_401_p1 = mul_0_2_1_reg_1471_pp0_iter1_reg;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14))) begin
        grp_fu_401_p1 = mul_0_2_reg_1461_pp0_iter1_reg;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8))) begin
        grp_fu_401_p1 = mul_0_0_4_reg_1384;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_401_p1 = mul_0_0_3_reg_1369;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23))) begin
        grp_fu_401_p1 = mul_0_0_2_reg_1359;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18))) begin
        grp_fu_401_p1 = mul_0_0_1_reg_1349;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13))) begin
        grp_fu_401_p1 = 32'd0;
    end else begin
        grp_fu_401_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        grp_fu_406_ce = 1'b1;
    end else begin
        grp_fu_406_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15))) begin
        grp_fu_406_p0 = reuse_select_reg_1611;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9))) begin
        grp_fu_406_p0 = reg_457;
    end else if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19)))) begin
        grp_fu_406_p0 = reg_445;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14))) begin
        grp_fu_406_p0 = reg_451;
    end else if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18)))) begin
        grp_fu_406_p0 = reg_440;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13))) begin
        grp_fu_406_p0 = reg_422;
    end else begin
        grp_fu_406_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15))) begin
        grp_fu_406_p1 = reg_464;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9))) begin
        grp_fu_406_p1 = mul_0_3_4_reg_1551_pp0_iter4_reg;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_406_p1 = mul_0_3_3_reg_1541_pp0_iter3_reg;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24))) begin
        grp_fu_406_p1 = mul_0_3_2_reg_1531_pp0_iter3_reg;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19))) begin
        grp_fu_406_p1 = mul_0_3_1_reg_1521_pp0_iter3_reg;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14))) begin
        grp_fu_406_p1 = mul_0_3_reg_1511_pp0_iter3_reg;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8))) begin
        grp_fu_406_p1 = mul_0_1_4_reg_1445_pp0_iter1_reg;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_406_p1 = mul_0_1_3_reg_1430_pp0_iter1_reg;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23))) begin
        grp_fu_406_p1 = mul_0_1_2_reg_1420_pp0_iter1_reg;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18))) begin
        grp_fu_406_p1 = mul_0_1_1_reg_1410;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13))) begin
        grp_fu_406_p1 = mul_0_1_reg_1400;
    end else begin
        grp_fu_406_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        grp_fu_410_ce = 1'b1;
    end else begin
        grp_fu_410_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8))) begin
        grp_fu_410_p0 = bitcast_ln127_24_fu_1024_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7))) begin
        grp_fu_410_p0 = bitcast_ln127_23_fu_1019_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6))) begin
        grp_fu_410_p0 = bitcast_ln127_22_fu_1014_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5))) begin
        grp_fu_410_p0 = bitcast_ln127_21_fu_1009_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_410_p0 = bitcast_ln127_20_fu_1004_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_410_p0 = bitcast_ln127_19_fu_999_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_410_p0 = bitcast_ln127_18_fu_994_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_410_p0 = bitcast_ln127_17_fu_989_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_410_p0 = bitcast_ln127_16_fu_984_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24))) begin
        grp_fu_410_p0 = bitcast_ln127_15_fu_979_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23))) begin
        grp_fu_410_p0 = bitcast_ln127_14_fu_974_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22))) begin
        grp_fu_410_p0 = bitcast_ln127_13_fu_969_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21))) begin
        grp_fu_410_p0 = bitcast_ln127_12_fu_954_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20))) begin
        grp_fu_410_p0 = bitcast_ln127_11_fu_923_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19))) begin
        grp_fu_410_p0 = bitcast_ln127_10_fu_918_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18))) begin
        grp_fu_410_p0 = bitcast_ln127_9_fu_913_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17))) begin
        grp_fu_410_p0 = bitcast_ln127_8_fu_908_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16))) begin
        grp_fu_410_p0 = bitcast_ln127_7_fu_893_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15))) begin
        grp_fu_410_p0 = bitcast_ln127_6_fu_862_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14))) begin
        grp_fu_410_p0 = bitcast_ln127_5_fu_857_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13))) begin
        grp_fu_410_p0 = bitcast_ln127_4_fu_852_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12))) begin
        grp_fu_410_p0 = bitcast_ln127_3_fu_847_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11))) begin
        grp_fu_410_p0 = bitcast_ln127_2_fu_832_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10))) begin
        grp_fu_410_p0 = bitcast_ln127_1_fu_756_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9))) begin
        grp_fu_410_p0 = bitcast_ln127_fu_751_p1;
    end else begin
        grp_fu_410_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8))) begin
        grp_fu_410_p1 = conv1_weight_load_24;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7))) begin
        grp_fu_410_p1 = conv1_weight_load_23;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6))) begin
        grp_fu_410_p1 = conv1_weight_load_22;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5))) begin
        grp_fu_410_p1 = conv1_weight_load_21;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_410_p1 = conv1_weight_load_20;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_410_p1 = conv1_weight_load_19;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_410_p1 = conv1_weight_load_18;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_410_p1 = conv1_weight_load_17;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_410_p1 = conv1_weight_load_16;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24))) begin
        grp_fu_410_p1 = conv1_weight_load_15;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23))) begin
        grp_fu_410_p1 = conv1_weight_load_14;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22))) begin
        grp_fu_410_p1 = conv1_weight_load_13;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21))) begin
        grp_fu_410_p1 = conv1_weight_load_12;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20))) begin
        grp_fu_410_p1 = conv1_weight_load_11;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19))) begin
        grp_fu_410_p1 = conv1_weight_load_10;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18))) begin
        grp_fu_410_p1 = conv1_weight_load_9;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17))) begin
        grp_fu_410_p1 = conv1_weight_load_8;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16))) begin
        grp_fu_410_p1 = conv1_weight_load_7;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15))) begin
        grp_fu_410_p1 = conv1_weight_load_6;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14))) begin
        grp_fu_410_p1 = conv1_weight_load_5;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13))) begin
        grp_fu_410_p1 = conv1_weight_load_4;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12))) begin
        grp_fu_410_p1 = conv1_weight_load_3;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11))) begin
        grp_fu_410_p1 = conv1_weight_load_2;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10))) begin
        grp_fu_410_p1 = conv1_weight_load_1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9))) begin
        grp_fu_410_p1 = conv1_weight_load;
    end else begin
        grp_fu_410_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln111_reg_1240 == 1'd0))) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001))) begin
            m_axi_data_ARADDR = sext_ln116_4_fu_959_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001))) begin
            m_axi_data_ARADDR = sext_ln116_3_fu_898_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001))) begin
            m_axi_data_ARADDR = sext_ln116_2_fu_837_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
            m_axi_data_ARADDR = sext_ln116_1_fu_741_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            m_axi_data_ARADDR = sext_ln116_fu_595_p1;
        end else begin
            m_axi_data_ARADDR = 'bx;
        end
    end else begin
        m_axi_data_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln111_reg_1240 == 1'd0)))) begin
        m_axi_data_ARVALID = 1'b1;
    end else begin
        m_axi_data_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln111_reg_1240 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001) & (icmp_ln111_reg_1240 == 1'd0)))) begin
        m_axi_data_RREADY = 1'b1;
    end else begin
        m_axi_data_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20))) begin
        out_data_address0 = out_data_addr_reg_1596_pp0_iter4_reg;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21))) begin
        out_data_address0 = zext_ln114_2_fu_1029_p1;
    end else begin
        out_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001)))) begin
        out_data_ce0 = 1'b1;
    end else begin
        out_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001))) begin
        out_data_we0 = 1'b1;
    end else begin
        out_data_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to5 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if (((1'b1 == ap_condition_exit_pp0_iter4_stage20) & (ap_idle_pp0_0to3 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((1'b0 == ap_block_pp0_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((1'b0 == ap_block_pp0_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((1'b0 == ap_block_pp0_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if ((1'b0 == ap_block_pp0_stage24_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln111_1_fu_507_p2 = (ap_sig_allocacmp_indvar_flatten7_load + 10'd1);

assign add_ln111_fu_516_p2 = (ap_sig_allocacmp_g_0_load + 5'd1);

assign add_ln112_fu_574_p2 = (phi_ln114_mid2_fu_528_p3 + 5'd1);

assign add_ln114_1_fu_735_p2 = ($signed(zext_ln114_1_fu_731_p1) + $signed(mul46_0_cast_mid2_fu_668_p1));

assign add_ln114_fu_726_p2 = (phi_mul186 + zext_ln114_fu_723_p1);

assign addr_cmp_fu_1036_p2 = ((reuse_addr_reg_fu_146 == zext_ln114_2_fu_1029_p1) ? 1'b1 : 1'b0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage20 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage21 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage22 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp0_stage23 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp0_stage24 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_00001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_data_RVALID == 1'b0));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage10_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage10_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state12_io) | ((icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage11_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state12_io) | ((icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0))));
end

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage12_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage12_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage13_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage13_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage13_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage14_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage14_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage14_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage15_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage15_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage15_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage16_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state17_io) | ((icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage16_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state17_io) | ((icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0))));
end

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage17_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage17_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

assign ap_block_pp0_stage18 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage18_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage18_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage18_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

assign ap_block_pp0_stage19 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage19_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage19_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage19_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_data_RVALID == 1'b0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_io)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_data_RVALID == 1'b0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_io)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage20_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage20_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage20_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

assign ap_block_pp0_stage21 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage21_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state22_io) | ((icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage21_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state22_io) | ((icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0))));
end

assign ap_block_pp0_stage22 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage22_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage22_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

assign ap_block_pp0_stage23 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage23_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage23_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage23_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

assign ap_block_pp0_stage24 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage24_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage24_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage24_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_data_RVALID == 1'b0));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_00001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_data_RVALID == 1'b0));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_00001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_data_RVALID == 1'b0));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_00001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_data_RVALID == 1'b0));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_data_RVALID == 1'b0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state7_io)));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_data_RVALID == 1'b0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state7_io)));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_data_RVALID == 1'b0));
end

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage8_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage9_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

assign ap_block_state100_pp0_stage24_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state101_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state102_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state103_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state104_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state105_pp0_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state106_pp0_stage5_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state107_pp0_stage6_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state108_pp0_stage7_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state109_pp0_stage8_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state10_pp0_stage9_iter0 = ((icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

assign ap_block_state110_pp0_stage9_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state111_pp0_stage10_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state112_pp0_stage11_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state113_pp0_stage12_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state114_pp0_stage13_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state115_pp0_stage14_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state116_pp0_stage15_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state117_pp0_stage16_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state118_pp0_stage17_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state119_pp0_stage18_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_pp0_stage10_iter0 = ((icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

assign ap_block_state120_pp0_stage19_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state121_pp0_stage20_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state122_pp0_stage21_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state123_pp0_stage22_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state124_pp0_stage23_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state125_pp0_stage24_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state126_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state127_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state128_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state129_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state12_io = ((m_axi_data_ARREADY == 1'b0) & (icmp_ln111_reg_1240 == 1'd0));
end

always @ (*) begin
    ap_block_state12_pp0_stage11_iter0 = ((icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

assign ap_block_state130_pp0_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state131_pp0_stage5_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state132_pp0_stage6_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state133_pp0_stage7_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state134_pp0_stage8_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state135_pp0_stage9_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state136_pp0_stage10_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state137_pp0_stage11_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state138_pp0_stage12_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state139_pp0_stage13_iter5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state13_pp0_stage12_iter0 = ((icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

assign ap_block_state140_pp0_stage14_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state141_pp0_stage15_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state142_pp0_stage16_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state143_pp0_stage17_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state144_pp0_stage18_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state145_pp0_stage19_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state146_pp0_stage20_iter5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state14_pp0_stage13_iter0 = ((icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state15_pp0_stage14_iter0 = ((icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state16_pp0_stage15_iter0 = ((icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state17_io = ((m_axi_data_ARREADY == 1'b0) & (icmp_ln111_reg_1240 == 1'd0));
end

always @ (*) begin
    ap_block_state17_pp0_stage16_iter0 = ((icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state18_pp0_stage17_iter0 = ((icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state19_pp0_stage18_iter0 = ((icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state20_pp0_stage19_iter0 = ((icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state21_pp0_stage20_iter0 = ((icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state22_io = ((m_axi_data_ARREADY == 1'b0) & (icmp_ln111_reg_1240 == 1'd0));
end

always @ (*) begin
    ap_block_state22_pp0_stage21_iter0 = ((icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state23_pp0_stage22_iter0 = ((icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state24_pp0_stage23_iter0 = ((icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state25_pp0_stage24_iter0 = ((icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state26_pp0_stage0_iter1 = (m_axi_data_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state27_pp0_stage1_iter1 = (m_axi_data_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state28_pp0_stage2_iter1 = (m_axi_data_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state29_pp0_stage3_iter1 = (m_axi_data_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state2_io = ((m_axi_data_ARREADY == 1'b0) & (icmp_ln111_reg_1240 == 1'd0));
end

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state30_pp0_stage4_iter1 = (m_axi_data_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state31_pp0_stage5_iter1 = (m_axi_data_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state32_pp0_stage6_iter1 = (m_axi_data_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state33_pp0_stage7_iter1 = (m_axi_data_RVALID == 1'b0);
end

assign ap_block_state34_pp0_stage8_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage9_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage10_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage11_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage12_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage13_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage14_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage15_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage16_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage17_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage18_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage19_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage20_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage21_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage22_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage23_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage24_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage8_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage9_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage10_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage11_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage12_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage13_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage14_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage15_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage16_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage17_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage18_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage19_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage20_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage21_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage22_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp0_stage23_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp0_stage24_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_io = ((m_axi_data_ARREADY == 1'b0) & (icmp_ln111_reg_1240 == 1'd0));
end

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp0_stage5_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp0_stage6_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state83_pp0_stage7_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp0_stage8_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp0_stage9_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state86_pp0_stage10_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state87_pp0_stage11_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp0_stage12_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state89_pp0_stage13_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp0_stage14_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp0_stage15_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state92_pp0_stage16_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state93_pp0_stage17_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state94_pp0_stage18_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state95_pp0_stage19_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state96_pp0_stage20_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state97_pp0_stage21_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state98_pp0_stage22_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state99_pp0_stage23_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_pp0_stage8_iter0 = ((icmp_ln111_reg_1240 == 1'd0) & (m_axi_data_RVALID == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage24;

assign bitcast_ln127_10_fu_918_p1 = reg_428;

assign bitcast_ln127_11_fu_923_p1 = reg_428;

assign bitcast_ln127_12_fu_954_p1 = reg_428;

assign bitcast_ln127_13_fu_969_p1 = reg_428;

assign bitcast_ln127_14_fu_974_p1 = reg_428;

assign bitcast_ln127_15_fu_979_p1 = reg_432;

assign bitcast_ln127_16_fu_984_p1 = reg_432;

assign bitcast_ln127_17_fu_989_p1 = reg_432;

assign bitcast_ln127_18_fu_994_p1 = reg_432;

assign bitcast_ln127_19_fu_999_p1 = reg_432;

assign bitcast_ln127_1_fu_756_p1 = reg_414;

assign bitcast_ln127_20_fu_1004_p1 = reg_436;

assign bitcast_ln127_21_fu_1009_p1 = reg_436;

assign bitcast_ln127_22_fu_1014_p1 = reg_436;

assign bitcast_ln127_23_fu_1019_p1 = reg_436;

assign bitcast_ln127_24_fu_1024_p1 = reg_436;

assign bitcast_ln127_2_fu_832_p1 = reg_414;

assign bitcast_ln127_3_fu_847_p1 = reg_414;

assign bitcast_ln127_4_fu_852_p1 = reg_414;

assign bitcast_ln127_5_fu_857_p1 = reg_418;

assign bitcast_ln127_6_fu_862_p1 = reg_418;

assign bitcast_ln127_7_fu_893_p1 = reg_418;

assign bitcast_ln127_8_fu_908_p1 = reg_418;

assign bitcast_ln127_9_fu_913_p1 = reg_418;

assign bitcast_ln127_fu_751_p1 = reg_414;

assign empty_100_fu_772_p2 = (tmp2_cast_fu_768_p1 + tmp1_0_0_mid2_reg_1275);

assign empty_101_fu_789_p2 = (p_cast20_fu_785_p1 + in_data);

assign empty_103_fu_811_p2 = (tmp3_cast_cast_cast_cast_fu_807_p1 + tmp1_0_0_mid2_reg_1275);

assign empty_104_fu_878_p2 = (p_cast21_fu_874_p1 + in_data);

assign empty_106_fu_827_p2 = (tmp4_cast_fu_823_p1 + tmp1_0_0_mid2_reg_1275);

assign empty_107_fu_939_p2 = (p_cast22_fu_935_p1 + in_data);

assign empty_95_fu_558_p2 = (p_cast18_fu_554_p1 + in_data);

assign empty_97_fu_690_p2 = (tmp1_cast_fu_686_p1 + tmp1_0_0_mid2_fu_672_p3);

assign empty_98_fu_708_p2 = (p_cast19_fu_704_p1 + in_data);

assign grp_fu_1145_p_ce = grp_fu_401_ce;

assign grp_fu_1145_p_din0 = grp_fu_401_p0;

assign grp_fu_1145_p_din1 = grp_fu_401_p1;

assign grp_fu_1145_p_opcode = 2'd0;

assign grp_fu_1149_p_ce = grp_fu_406_ce;

assign grp_fu_1149_p_din0 = grp_fu_406_p0;

assign grp_fu_1149_p_din1 = grp_fu_406_p1;

assign grp_fu_1149_p_opcode = 2'd0;

assign grp_fu_1153_p_ce = grp_fu_410_ce;

assign grp_fu_1153_p_din0 = grp_fu_410_p0;

assign grp_fu_1153_p_din1 = grp_fu_410_p1;

assign icmp_ln111_fu_501_p2 = ((ap_sig_allocacmp_indvar_flatten7_load == 10'd784) ? 1'b1 : 1'b0);

assign icmp_ln112_fu_522_p2 = ((ap_sig_allocacmp_phi_ln114_load == 5'd28) ? 1'b1 : 1'b0);

assign m_axi_data_ARBURST = 2'd0;

assign m_axi_data_ARCACHE = 4'd0;

assign m_axi_data_ARID = 1'd0;

assign m_axi_data_ARLEN = 32'd5;

assign m_axi_data_ARLOCK = 2'd0;

assign m_axi_data_ARPROT = 3'd0;

assign m_axi_data_ARQOS = 4'd0;

assign m_axi_data_ARREGION = 4'd0;

assign m_axi_data_ARSIZE = 3'd0;

assign m_axi_data_ARUSER = 1'd0;

assign m_axi_data_AWADDR = 32'd0;

assign m_axi_data_AWBURST = 2'd0;

assign m_axi_data_AWCACHE = 4'd0;

assign m_axi_data_AWID = 1'd0;

assign m_axi_data_AWLEN = 32'd0;

assign m_axi_data_AWLOCK = 2'd0;

assign m_axi_data_AWPROT = 3'd0;

assign m_axi_data_AWQOS = 4'd0;

assign m_axi_data_AWREGION = 4'd0;

assign m_axi_data_AWSIZE = 3'd0;

assign m_axi_data_AWUSER = 1'd0;

assign m_axi_data_AWVALID = 1'b0;

assign m_axi_data_BREADY = 1'b0;

assign m_axi_data_WDATA = 32'd0;

assign m_axi_data_WID = 1'd0;

assign m_axi_data_WLAST = 1'b0;

assign m_axi_data_WSTRB = 4'd0;

assign m_axi_data_WUSER = 1'd0;

assign m_axi_data_WVALID = 1'b0;

assign mul46_0_cast_mid2_fu_668_p1 = $signed(mul46_0_cast_mid2_v_fu_661_p3);

assign mul46_0_cast_mid2_v_fu_661_p3 = ((icmp_ln112_reg_1250[0:0] == 1'b1) ? mul46_0_mid1_fu_655_p2 : mul46_0_fu_627_p2);

assign mul46_0_fu_627_p2 = (p_shl_0_cast_fu_612_p1 - p_shl6_0_cast_fu_623_p1);

assign mul46_0_mid1_fu_655_p2 = (p_shl_0_cast_mid1_fu_640_p1 - p_shl6_0_cast_mid1_fu_651_p1);

assign out_data_d0 = reg_457;

assign p_cast18_fu_554_p1 = tmp_fu_544_p4;

assign p_cast19_fu_704_p1 = tmp_12_fu_696_p3;

assign p_cast20_fu_785_p1 = tmp_14_fu_777_p3;

assign p_cast21_fu_874_p1 = tmp_15_fu_867_p3;

assign p_cast22_fu_935_p1 = tmp_17_fu_928_p3;

assign p_shl6_0_cast_fu_623_p1 = p_shl6_fu_616_p3;

assign p_shl6_0_cast_mid1_fu_651_p1 = p_shl6_0_mid1_fu_644_p3;

assign p_shl6_0_mid1_fu_644_p3 = {{add_ln111_reg_1244}, {2'd0}};

assign p_shl6_fu_616_p3 = {{g_0_load_reg_1234}, {2'd0}};

assign p_shl_0_cast_fu_612_p1 = p_shl_fu_605_p3;

assign p_shl_0_cast_mid1_fu_640_p1 = p_shl_0_mid1_fu_633_p3;

assign p_shl_0_mid1_fu_633_p3 = {{add_ln111_reg_1244}, {5'd0}};

assign p_shl_fu_605_p3 = {{g_0_load_reg_1234}, {5'd0}};

assign phi_ln114_mid2_fu_528_p3 = ((icmp_ln112_fu_522_p2[0:0] == 1'b1) ? 5'd0 : ap_sig_allocacmp_phi_ln114_load);

assign reuse_select_fu_1050_p3 = ((addr_cmp_reg_1601[0:0] == 1'b1) ? reuse_reg_fu_150 : out_data_load_reg_1606);

assign select_ln111_fu_536_p3 = ((icmp_ln112_fu_522_p2[0:0] == 1'b1) ? add_ln111_fu_516_p2 : ap_sig_allocacmp_g_0_load);

assign sext_ln116_1_fu_741_p1 = $signed(trunc_ln116_1_reg_1287);

assign sext_ln116_2_fu_837_p1 = $signed(trunc_ln116_2_reg_1313);

assign sext_ln116_3_fu_898_p1 = $signed(trunc_ln116_3_reg_1379);

assign sext_ln116_4_fu_959_p1 = $signed(trunc_ln116_4_reg_1440);

assign sext_ln116_fu_595_p1 = $signed(trunc_ln4_reg_1264);

assign tmp1_0_0_mid2_fu_672_p3 = ((icmp_ln112_reg_1250[0:0] == 1'b1) ? p_shl_0_mid1_fu_633_p3 : p_shl_fu_605_p3);

assign tmp1_cast_fu_686_p1 = $unsigned(tmp1_fu_679_p3);

assign tmp1_fu_679_p3 = {{1'd1}, {phi_ln114_mid2_reg_1256}};

assign tmp2_cast_fu_768_p1 = tmp2_fu_761_p3;

assign tmp2_fu_761_p3 = {{2'd2}, {phi_ln114_mid2_reg_1256}};

assign tmp3_cast_cast_cast_cast_fu_807_p1 = $unsigned(tmp3_cast_cast_cast_fu_804_p1);

assign tmp3_cast_cast_cast_fu_804_p1 = tmp1_reg_1282;

assign tmp3_fu_816_p3 = {{3'd4}, {phi_ln114_mid2_reg_1256}};

assign tmp4_cast_fu_823_p1 = tmp3_fu_816_p3;

assign tmp_12_fu_696_p3 = {{empty_97_fu_690_p2}, {2'd0}};

assign tmp_14_fu_777_p3 = {{empty_100_fu_772_p2}, {2'd0}};

assign tmp_15_fu_867_p3 = {{empty_103_reg_1318}, {2'd0}};

assign tmp_17_fu_928_p3 = {{empty_106_reg_1323}, {2'd0}};

assign tmp_fu_544_p4 = {{{select_ln111_fu_536_p3}, {phi_ln114_mid2_fu_528_p3}}, {2'd0}};

assign zext_ln114_1_fu_731_p1 = add_ln114_fu_726_p2;

assign zext_ln114_2_fu_1029_p1 = add_ln114_1_reg_1292_pp0_iter3_reg;

assign zext_ln114_fu_723_p1 = phi_ln114_mid2_reg_1256;

always @ (posedge ap_clk) begin
    tmp1_0_0_mid2_reg_1275[4:0] <= 5'b00000;
    tmp1_reg_1282[5] <= 1'b1;
end

endmodule //lenet5_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6
