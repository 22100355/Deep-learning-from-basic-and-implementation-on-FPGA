-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity lenet5_Convolution2d_float_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    out_data_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    out_data_ce0 : OUT STD_LOGIC;
    out_data_we0 : OUT STD_LOGIC;
    out_data_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_data_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_data_AWVALID : OUT STD_LOGIC;
    m_axi_data_AWREADY : IN STD_LOGIC;
    m_axi_data_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_data_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_data_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_data_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_data_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_data_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_data_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_data_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_data_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_data_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_data_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_data_WVALID : OUT STD_LOGIC;
    m_axi_data_WREADY : IN STD_LOGIC;
    m_axi_data_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_data_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_data_WLAST : OUT STD_LOGIC;
    m_axi_data_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_data_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_data_ARVALID : OUT STD_LOGIC;
    m_axi_data_ARREADY : IN STD_LOGIC;
    m_axi_data_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_data_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_data_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_data_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_data_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_data_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_data_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_data_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_data_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_data_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_data_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_data_RVALID : IN STD_LOGIC;
    m_axi_data_RREADY : OUT STD_LOGIC;
    m_axi_data_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_data_RLAST : IN STD_LOGIC;
    m_axi_data_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_data_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_data_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_data_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_data_BVALID : IN STD_LOGIC;
    m_axi_data_BREADY : OUT STD_LOGIC;
    m_axi_data_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_data_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_data_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    in_data : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_236_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_236_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_236_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_236_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_236_p_ce : OUT STD_LOGIC;
    grp_fu_240_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_240_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_240_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_240_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_240_p_ce : OUT STD_LOGIC;
    grp_fu_244_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_244_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_244_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_244_p_ce : OUT STD_LOGIC );
end;


architecture behav of lenet5_Convolution2d_float_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv12_310 : STD_LOGIC_VECTOR (11 downto 0) := "001100010000";
    constant ap_const_lv8_19 : STD_LOGIC_VECTOR (7 downto 0) := "00011001";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv7_2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv8_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_const_lv8_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000101";
    constant ap_const_lv8_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000110";
    constant ap_const_lv8_7 : STD_LOGIC_VECTOR (7 downto 0) := "00000111";
    constant ap_const_lv8_8 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_const_lv8_9 : STD_LOGIC_VECTOR (7 downto 0) := "00001001";
    constant ap_const_lv8_A : STD_LOGIC_VECTOR (7 downto 0) := "00001010";
    constant ap_const_lv8_B : STD_LOGIC_VECTOR (7 downto 0) := "00001011";
    constant ap_const_lv8_C : STD_LOGIC_VECTOR (7 downto 0) := "00001100";
    constant ap_const_lv8_D : STD_LOGIC_VECTOR (7 downto 0) := "00001101";
    constant ap_const_lv8_E : STD_LOGIC_VECTOR (7 downto 0) := "00001110";
    constant ap_const_lv8_F : STD_LOGIC_VECTOR (7 downto 0) := "00001111";
    constant ap_const_lv8_10 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_const_lv8_11 : STD_LOGIC_VECTOR (7 downto 0) := "00010001";
    constant ap_const_lv8_12 : STD_LOGIC_VECTOR (7 downto 0) := "00010010";
    constant ap_const_lv8_13 : STD_LOGIC_VECTOR (7 downto 0) := "00010011";
    constant ap_const_lv8_14 : STD_LOGIC_VECTOR (7 downto 0) := "00010100";
    constant ap_const_lv8_15 : STD_LOGIC_VECTOR (7 downto 0) := "00010101";
    constant ap_const_lv8_16 : STD_LOGIC_VECTOR (7 downto 0) := "00010110";
    constant ap_const_lv8_17 : STD_LOGIC_VECTOR (7 downto 0) := "00010111";
    constant ap_const_lv8_18 : STD_LOGIC_VECTOR (7 downto 0) := "00011000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal conv1_bias_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv1_bias_ce0 : STD_LOGIC;
    signal conv1_bias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_weight_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_weight_ce0 : STD_LOGIC;
    signal conv1_weight_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_weight_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_weight_ce1 : STD_LOGIC;
    signal conv1_weight_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_weight_address2 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_weight_ce2 : STD_LOGIC;
    signal conv1_weight_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_weight_address3 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_weight_ce3 : STD_LOGIC;
    signal conv1_weight_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_weight_address4 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_weight_ce4 : STD_LOGIC;
    signal conv1_weight_q4 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_weight_address5 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_weight_ce5 : STD_LOGIC;
    signal conv1_weight_q5 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_weight_address6 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_weight_ce6 : STD_LOGIC;
    signal conv1_weight_q6 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_weight_address7 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_weight_ce7 : STD_LOGIC;
    signal conv1_weight_q7 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_weight_address8 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_weight_ce8 : STD_LOGIC;
    signal conv1_weight_q8 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_weight_address9 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_weight_ce9 : STD_LOGIC;
    signal conv1_weight_q9 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_weight_address10 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_weight_ce10 : STD_LOGIC;
    signal conv1_weight_q10 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_weight_address11 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_weight_ce11 : STD_LOGIC;
    signal conv1_weight_q11 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_weight_address12 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_weight_ce12 : STD_LOGIC;
    signal conv1_weight_q12 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_weight_address13 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_weight_ce13 : STD_LOGIC;
    signal conv1_weight_q13 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_weight_address14 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_weight_ce14 : STD_LOGIC;
    signal conv1_weight_q14 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_weight_address15 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_weight_ce15 : STD_LOGIC;
    signal conv1_weight_q15 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_weight_address16 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_weight_ce16 : STD_LOGIC;
    signal conv1_weight_q16 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_weight_address17 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_weight_ce17 : STD_LOGIC;
    signal conv1_weight_q17 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_weight_address18 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_weight_ce18 : STD_LOGIC;
    signal conv1_weight_q18 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_weight_address19 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_weight_ce19 : STD_LOGIC;
    signal conv1_weight_q19 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_weight_address20 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_weight_ce20 : STD_LOGIC;
    signal conv1_weight_q20 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_weight_address21 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_weight_ce21 : STD_LOGIC;
    signal conv1_weight_q21 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_weight_address22 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_weight_ce22 : STD_LOGIC;
    signal conv1_weight_q22 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_weight_address23 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_weight_ce23 : STD_LOGIC;
    signal conv1_weight_q23 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_weight_address24 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_weight_ce24 : STD_LOGIC;
    signal conv1_weight_q24 : STD_LOGIC_VECTOR (31 downto 0);
    signal phi_mul186_load_reg_848 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal phi_mul_load_reg_854 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln94_fu_541_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal B_reg_890 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal conv1_weight_load_reg_1020 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal conv1_weight_load_1_reg_1025 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_weight_load_2_reg_1030 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_weight_load_3_reg_1035 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_weight_load_4_reg_1040 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_weight_load_5_reg_1045 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_weight_load_6_reg_1050 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_weight_load_7_reg_1055 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_weight_load_8_reg_1060 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_weight_load_9_reg_1065 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_weight_load_10_reg_1070 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_weight_load_11_reg_1075 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_weight_load_12_reg_1080 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_weight_load_13_reg_1085 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_weight_load_14_reg_1090 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_weight_load_15_reg_1095 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_weight_load_16_reg_1100 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_weight_load_17_reg_1105 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_weight_load_18_reg_1110 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_weight_load_19_reg_1115 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_weight_load_20_reg_1120 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_weight_load_21_reg_1125 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_weight_load_22_reg_1130 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_weight_load_23_reg_1135 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_weight_load_24_reg_1140 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_start : STD_LOGIC;
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done : STD_LOGIC;
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_idle : STD_LOGIC;
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_ready : STD_LOGIC;
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_out_data_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_out_data_ce0 : STD_LOGIC;
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_out_data_we0 : STD_LOGIC;
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_out_data_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_ap_start : STD_LOGIC;
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_ap_done : STD_LOGIC;
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_ap_idle : STD_LOGIC;
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_ap_ready : STD_LOGIC;
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_AWVALID : STD_LOGIC;
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_WVALID : STD_LOGIC;
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_WLAST : STD_LOGIC;
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_ARVALID : STD_LOGIC;
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_RREADY : STD_LOGIC;
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_BREADY : STD_LOGIC;
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_out_data_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_out_data_ce0 : STD_LOGIC;
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_out_data_we0 : STD_LOGIC;
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_out_data_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_grp_fu_1145_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_grp_fu_1145_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_grp_fu_1145_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_grp_fu_1145_p_ce : STD_LOGIC;
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_grp_fu_1149_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_grp_fu_1149_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_grp_fu_1149_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_grp_fu_1149_p_ce : STD_LOGIC;
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_grp_fu_1153_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_grp_fu_1153_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_grp_fu_1153_p_ce : STD_LOGIC;
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_start_reg : STD_LOGIC := '0';
    signal grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal zext_ln95_fu_553_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln123_fu_573_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln123_1_fu_586_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln123_2_fu_597_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln123_3_fu_607_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln123_4_fu_617_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln123_5_fu_627_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln123_6_fu_637_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln123_7_fu_647_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln123_8_fu_657_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln123_9_fu_667_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln123_10_fu_677_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln123_11_fu_687_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln123_12_fu_697_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln123_13_fu_707_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln123_14_fu_717_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln123_15_fu_727_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln123_16_fu_737_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln123_17_fu_747_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln123_18_fu_757_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln123_19_fu_767_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln123_20_fu_777_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln123_21_fu_787_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln123_22_fu_797_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln123_23_fu_807_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln123_24_fu_817_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal phi_mul186_fu_104 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln94_2_fu_529_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal phi_mul_fu_108 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln94_3_fu_535_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal f_fu_112 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln94_fu_547_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln123_fu_577_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln123_fu_580_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln123_1_fu_591_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln123_2_fu_602_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln123_3_fu_612_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln123_4_fu_622_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln123_5_fu_632_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln123_6_fu_642_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln123_7_fu_652_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln123_8_fu_662_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln123_9_fu_672_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln123_10_fu_682_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln123_11_fu_692_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln123_12_fu_702_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln123_13_fu_712_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln123_14_fu_722_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln123_15_fu_732_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln123_16_fu_742_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln123_17_fu_752_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln123_18_fu_762_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln123_19_fu_772_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln123_20_fu_782_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln123_21_fu_792_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln123_22_fu_802_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln123_23_fu_812_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1145_ce : STD_LOGIC;
    signal grp_fu_1149_ce : STD_LOGIC;
    signal grp_fu_1153_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component lenet5_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        phi_mul186 : IN STD_LOGIC_VECTOR (11 downto 0);
        out_data_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        out_data_ce0 : OUT STD_LOGIC;
        out_data_we0 : OUT STD_LOGIC;
        out_data_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        B : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component lenet5_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_data_AWVALID : OUT STD_LOGIC;
        m_axi_data_AWREADY : IN STD_LOGIC;
        m_axi_data_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_data_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_data_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_data_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_data_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_data_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_data_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_data_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_data_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_data_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_WVALID : OUT STD_LOGIC;
        m_axi_data_WREADY : IN STD_LOGIC;
        m_axi_data_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_data_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_data_WLAST : OUT STD_LOGIC;
        m_axi_data_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_ARVALID : OUT STD_LOGIC;
        m_axi_data_ARREADY : IN STD_LOGIC;
        m_axi_data_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_data_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_data_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_data_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_data_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_data_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_data_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_data_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_data_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_data_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_RVALID : IN STD_LOGIC;
        m_axi_data_RREADY : OUT STD_LOGIC;
        m_axi_data_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_data_RLAST : IN STD_LOGIC;
        m_axi_data_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_data_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_data_BVALID : IN STD_LOGIC;
        m_axi_data_BREADY : OUT STD_LOGIC;
        m_axi_data_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_data_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        in_data : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_weight_load : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_weight_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_weight_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_weight_load_3 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_weight_load_4 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_weight_load_5 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_weight_load_6 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_weight_load_7 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_weight_load_8 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_weight_load_9 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_weight_load_10 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_weight_load_11 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_weight_load_12 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_weight_load_13 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_weight_load_14 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_weight_load_15 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_weight_load_16 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_weight_load_17 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_weight_load_18 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_weight_load_19 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_weight_load_20 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_weight_load_21 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_weight_load_22 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_weight_load_23 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_weight_load_24 : IN STD_LOGIC_VECTOR (31 downto 0);
        phi_mul186 : IN STD_LOGIC_VECTOR (11 downto 0);
        out_data_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        out_data_ce0 : OUT STD_LOGIC;
        out_data_we0 : OUT STD_LOGIC;
        out_data_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_data_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1145_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1145_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1145_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_1145_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1145_p_ce : OUT STD_LOGIC;
        grp_fu_1149_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1149_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1149_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_1149_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1149_p_ce : OUT STD_LOGIC;
        grp_fu_1153_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1153_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1153_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1153_p_ce : OUT STD_LOGIC );
    end component;


    component lenet5_fadd_32ns_32ns_32_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component lenet5_fmul_32ns_32ns_32_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component lenet5_Convolution2d_float_s_conv1_bias_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component lenet5_Convolution2d_float_s_conv1_weight_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address2 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address3 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address4 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce4 : IN STD_LOGIC;
        q4 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address5 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce5 : IN STD_LOGIC;
        q5 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address6 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce6 : IN STD_LOGIC;
        q6 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address7 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce7 : IN STD_LOGIC;
        q7 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address8 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce8 : IN STD_LOGIC;
        q8 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address9 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce9 : IN STD_LOGIC;
        q9 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address10 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce10 : IN STD_LOGIC;
        q10 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address11 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce11 : IN STD_LOGIC;
        q11 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address12 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce12 : IN STD_LOGIC;
        q12 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address13 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce13 : IN STD_LOGIC;
        q13 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address14 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce14 : IN STD_LOGIC;
        q14 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address15 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce15 : IN STD_LOGIC;
        q15 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address16 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce16 : IN STD_LOGIC;
        q16 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address17 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce17 : IN STD_LOGIC;
        q17 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address18 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce18 : IN STD_LOGIC;
        q18 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address19 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce19 : IN STD_LOGIC;
        q19 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address20 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce20 : IN STD_LOGIC;
        q20 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address21 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce21 : IN STD_LOGIC;
        q21 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address22 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce22 : IN STD_LOGIC;
        q22 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address23 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce23 : IN STD_LOGIC;
        q23 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address24 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce24 : IN STD_LOGIC;
        q24 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    conv1_bias_U : component lenet5_Convolution2d_float_s_conv1_bias_ROM_AUTO_1R
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_bias_address0,
        ce0 => conv1_bias_ce0,
        q0 => conv1_bias_q0);

    conv1_weight_U : component lenet5_Convolution2d_float_s_conv1_weight_ROM_AUTO_1R
    generic map (
        DataWidth => 32,
        AddressRange => 150,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_weight_address0,
        ce0 => conv1_weight_ce0,
        q0 => conv1_weight_q0,
        address1 => conv1_weight_address1,
        ce1 => conv1_weight_ce1,
        q1 => conv1_weight_q1,
        address2 => conv1_weight_address2,
        ce2 => conv1_weight_ce2,
        q2 => conv1_weight_q2,
        address3 => conv1_weight_address3,
        ce3 => conv1_weight_ce3,
        q3 => conv1_weight_q3,
        address4 => conv1_weight_address4,
        ce4 => conv1_weight_ce4,
        q4 => conv1_weight_q4,
        address5 => conv1_weight_address5,
        ce5 => conv1_weight_ce5,
        q5 => conv1_weight_q5,
        address6 => conv1_weight_address6,
        ce6 => conv1_weight_ce6,
        q6 => conv1_weight_q6,
        address7 => conv1_weight_address7,
        ce7 => conv1_weight_ce7,
        q7 => conv1_weight_q7,
        address8 => conv1_weight_address8,
        ce8 => conv1_weight_ce8,
        q8 => conv1_weight_q8,
        address9 => conv1_weight_address9,
        ce9 => conv1_weight_ce9,
        q9 => conv1_weight_q9,
        address10 => conv1_weight_address10,
        ce10 => conv1_weight_ce10,
        q10 => conv1_weight_q10,
        address11 => conv1_weight_address11,
        ce11 => conv1_weight_ce11,
        q11 => conv1_weight_q11,
        address12 => conv1_weight_address12,
        ce12 => conv1_weight_ce12,
        q12 => conv1_weight_q12,
        address13 => conv1_weight_address13,
        ce13 => conv1_weight_ce13,
        q13 => conv1_weight_q13,
        address14 => conv1_weight_address14,
        ce14 => conv1_weight_ce14,
        q14 => conv1_weight_q14,
        address15 => conv1_weight_address15,
        ce15 => conv1_weight_ce15,
        q15 => conv1_weight_q15,
        address16 => conv1_weight_address16,
        ce16 => conv1_weight_ce16,
        q16 => conv1_weight_q16,
        address17 => conv1_weight_address17,
        ce17 => conv1_weight_ce17,
        q17 => conv1_weight_q17,
        address18 => conv1_weight_address18,
        ce18 => conv1_weight_ce18,
        q18 => conv1_weight_q18,
        address19 => conv1_weight_address19,
        ce19 => conv1_weight_ce19,
        q19 => conv1_weight_q19,
        address20 => conv1_weight_address20,
        ce20 => conv1_weight_ce20,
        q20 => conv1_weight_q20,
        address21 => conv1_weight_address21,
        ce21 => conv1_weight_ce21,
        q21 => conv1_weight_q21,
        address22 => conv1_weight_address22,
        ce22 => conv1_weight_ce22,
        q22 => conv1_weight_q22,
        address23 => conv1_weight_address23,
        ce23 => conv1_weight_ce23,
        q23 => conv1_weight_q23,
        address24 => conv1_weight_address24,
        ce24 => conv1_weight_ce24,
        q24 => conv1_weight_q24);

    grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436 : component lenet5_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_start,
        ap_done => grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done,
        ap_idle => grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_idle,
        ap_ready => grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_ready,
        phi_mul186 => phi_mul186_load_reg_848,
        out_data_address0 => grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_out_data_address0,
        out_data_ce0 => grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_out_data_ce0,
        out_data_we0 => grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_out_data_we0,
        out_data_d0 => grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_out_data_d0,
        B => B_reg_890);

    grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445 : component lenet5_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_ap_start,
        ap_done => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_ap_done,
        ap_idle => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_ap_idle,
        ap_ready => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_ap_ready,
        m_axi_data_AWVALID => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_AWVALID,
        m_axi_data_AWREADY => ap_const_logic_0,
        m_axi_data_AWADDR => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_AWADDR,
        m_axi_data_AWID => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_AWID,
        m_axi_data_AWLEN => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_AWLEN,
        m_axi_data_AWSIZE => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_AWSIZE,
        m_axi_data_AWBURST => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_AWBURST,
        m_axi_data_AWLOCK => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_AWLOCK,
        m_axi_data_AWCACHE => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_AWCACHE,
        m_axi_data_AWPROT => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_AWPROT,
        m_axi_data_AWQOS => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_AWQOS,
        m_axi_data_AWREGION => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_AWREGION,
        m_axi_data_AWUSER => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_AWUSER,
        m_axi_data_WVALID => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_WVALID,
        m_axi_data_WREADY => ap_const_logic_0,
        m_axi_data_WDATA => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_WDATA,
        m_axi_data_WSTRB => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_WSTRB,
        m_axi_data_WLAST => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_WLAST,
        m_axi_data_WID => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_WID,
        m_axi_data_WUSER => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_WUSER,
        m_axi_data_ARVALID => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_ARVALID,
        m_axi_data_ARREADY => m_axi_data_ARREADY,
        m_axi_data_ARADDR => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_ARADDR,
        m_axi_data_ARID => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_ARID,
        m_axi_data_ARLEN => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_ARLEN,
        m_axi_data_ARSIZE => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_ARSIZE,
        m_axi_data_ARBURST => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_ARBURST,
        m_axi_data_ARLOCK => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_ARLOCK,
        m_axi_data_ARCACHE => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_ARCACHE,
        m_axi_data_ARPROT => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_ARPROT,
        m_axi_data_ARQOS => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_ARQOS,
        m_axi_data_ARREGION => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_ARREGION,
        m_axi_data_ARUSER => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_ARUSER,
        m_axi_data_RVALID => m_axi_data_RVALID,
        m_axi_data_RREADY => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_RREADY,
        m_axi_data_RDATA => m_axi_data_RDATA,
        m_axi_data_RLAST => m_axi_data_RLAST,
        m_axi_data_RID => m_axi_data_RID,
        m_axi_data_RFIFONUM => m_axi_data_RFIFONUM,
        m_axi_data_RUSER => m_axi_data_RUSER,
        m_axi_data_RRESP => m_axi_data_RRESP,
        m_axi_data_BVALID => ap_const_logic_0,
        m_axi_data_BREADY => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_BREADY,
        m_axi_data_BRESP => ap_const_lv2_0,
        m_axi_data_BID => ap_const_lv1_0,
        m_axi_data_BUSER => ap_const_lv1_0,
        in_data => in_data,
        conv1_weight_load => conv1_weight_load_reg_1020,
        conv1_weight_load_1 => conv1_weight_load_1_reg_1025,
        conv1_weight_load_2 => conv1_weight_load_2_reg_1030,
        conv1_weight_load_3 => conv1_weight_load_3_reg_1035,
        conv1_weight_load_4 => conv1_weight_load_4_reg_1040,
        conv1_weight_load_5 => conv1_weight_load_5_reg_1045,
        conv1_weight_load_6 => conv1_weight_load_6_reg_1050,
        conv1_weight_load_7 => conv1_weight_load_7_reg_1055,
        conv1_weight_load_8 => conv1_weight_load_8_reg_1060,
        conv1_weight_load_9 => conv1_weight_load_9_reg_1065,
        conv1_weight_load_10 => conv1_weight_load_10_reg_1070,
        conv1_weight_load_11 => conv1_weight_load_11_reg_1075,
        conv1_weight_load_12 => conv1_weight_load_12_reg_1080,
        conv1_weight_load_13 => conv1_weight_load_13_reg_1085,
        conv1_weight_load_14 => conv1_weight_load_14_reg_1090,
        conv1_weight_load_15 => conv1_weight_load_15_reg_1095,
        conv1_weight_load_16 => conv1_weight_load_16_reg_1100,
        conv1_weight_load_17 => conv1_weight_load_17_reg_1105,
        conv1_weight_load_18 => conv1_weight_load_18_reg_1110,
        conv1_weight_load_19 => conv1_weight_load_19_reg_1115,
        conv1_weight_load_20 => conv1_weight_load_20_reg_1120,
        conv1_weight_load_21 => conv1_weight_load_21_reg_1125,
        conv1_weight_load_22 => conv1_weight_load_22_reg_1130,
        conv1_weight_load_23 => conv1_weight_load_23_reg_1135,
        conv1_weight_load_24 => conv1_weight_load_24_reg_1140,
        phi_mul186 => phi_mul186_load_reg_848,
        out_data_address0 => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_out_data_address0,
        out_data_ce0 => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_out_data_ce0,
        out_data_we0 => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_out_data_we0,
        out_data_d0 => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_out_data_d0,
        out_data_q0 => out_data_q0,
        grp_fu_1145_p_din0 => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_grp_fu_1145_p_din0,
        grp_fu_1145_p_din1 => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_grp_fu_1145_p_din1,
        grp_fu_1145_p_opcode => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_grp_fu_1145_p_opcode,
        grp_fu_1145_p_dout0 => grp_fu_236_p_dout0,
        grp_fu_1145_p_ce => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_grp_fu_1145_p_ce,
        grp_fu_1149_p_din0 => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_grp_fu_1149_p_din0,
        grp_fu_1149_p_din1 => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_grp_fu_1149_p_din1,
        grp_fu_1149_p_opcode => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_grp_fu_1149_p_opcode,
        grp_fu_1149_p_dout0 => grp_fu_240_p_dout0,
        grp_fu_1149_p_ce => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_grp_fu_1149_p_ce,
        grp_fu_1153_p_din0 => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_grp_fu_1153_p_din0,
        grp_fu_1153_p_din1 => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_grp_fu_1153_p_din1,
        grp_fu_1153_p_dout0 => grp_fu_244_p_dout0,
        grp_fu_1153_p_ce => grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_grp_fu_1153_p_ce);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_ap_ready = ap_const_logic_1)) then 
                    grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_ready = ap_const_logic_1)) then 
                    grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    f_fu_112_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                f_fu_112 <= ap_const_lv3_0;
            elsif (((icmp_ln94_fu_541_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                f_fu_112 <= add_ln94_fu_547_p2;
            end if; 
        end if;
    end process;

    phi_mul186_fu_104_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                phi_mul186_fu_104 <= ap_const_lv12_0;
            elsif (((icmp_ln94_fu_541_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                phi_mul186_fu_104 <= add_ln94_2_fu_529_p2;
            end if; 
        end if;
    end process;

    phi_mul_fu_108_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                phi_mul_fu_108 <= ap_const_lv8_0;
            elsif (((icmp_ln94_fu_541_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                phi_mul_fu_108 <= add_ln94_3_fu_535_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                B_reg_890 <= conv1_bias_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                conv1_weight_load_10_reg_1070 <= conv1_weight_q14;
                conv1_weight_load_11_reg_1075 <= conv1_weight_q13;
                conv1_weight_load_12_reg_1080 <= conv1_weight_q12;
                conv1_weight_load_13_reg_1085 <= conv1_weight_q11;
                conv1_weight_load_14_reg_1090 <= conv1_weight_q10;
                conv1_weight_load_15_reg_1095 <= conv1_weight_q9;
                conv1_weight_load_16_reg_1100 <= conv1_weight_q8;
                conv1_weight_load_17_reg_1105 <= conv1_weight_q7;
                conv1_weight_load_18_reg_1110 <= conv1_weight_q6;
                conv1_weight_load_19_reg_1115 <= conv1_weight_q5;
                conv1_weight_load_1_reg_1025 <= conv1_weight_q23;
                conv1_weight_load_20_reg_1120 <= conv1_weight_q4;
                conv1_weight_load_21_reg_1125 <= conv1_weight_q3;
                conv1_weight_load_22_reg_1130 <= conv1_weight_q2;
                conv1_weight_load_23_reg_1135 <= conv1_weight_q1;
                conv1_weight_load_24_reg_1140 <= conv1_weight_q0;
                conv1_weight_load_2_reg_1030 <= conv1_weight_q22;
                conv1_weight_load_3_reg_1035 <= conv1_weight_q21;
                conv1_weight_load_4_reg_1040 <= conv1_weight_q20;
                conv1_weight_load_5_reg_1045 <= conv1_weight_q19;
                conv1_weight_load_6_reg_1050 <= conv1_weight_q18;
                conv1_weight_load_7_reg_1055 <= conv1_weight_q17;
                conv1_weight_load_8_reg_1060 <= conv1_weight_q16;
                conv1_weight_load_9_reg_1065 <= conv1_weight_q15;
                conv1_weight_load_reg_1020 <= conv1_weight_q24;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                phi_mul186_load_reg_848 <= phi_mul186_fu_104;
                phi_mul_load_reg_854 <= phi_mul_fu_108;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln94_fu_541_p2, ap_CS_fsm_state4, grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done, grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_ap_done, ap_CS_fsm_state6)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln94_fu_541_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    add_ln123_10_fu_682_p2 <= std_logic_vector(unsigned(phi_mul_load_reg_854) + unsigned(ap_const_lv8_B));
    add_ln123_11_fu_692_p2 <= std_logic_vector(unsigned(phi_mul_load_reg_854) + unsigned(ap_const_lv8_C));
    add_ln123_12_fu_702_p2 <= std_logic_vector(unsigned(phi_mul_load_reg_854) + unsigned(ap_const_lv8_D));
    add_ln123_13_fu_712_p2 <= std_logic_vector(unsigned(phi_mul_load_reg_854) + unsigned(ap_const_lv8_E));
    add_ln123_14_fu_722_p2 <= std_logic_vector(unsigned(phi_mul_load_reg_854) + unsigned(ap_const_lv8_F));
    add_ln123_15_fu_732_p2 <= std_logic_vector(unsigned(phi_mul_load_reg_854) + unsigned(ap_const_lv8_10));
    add_ln123_16_fu_742_p2 <= std_logic_vector(unsigned(phi_mul_load_reg_854) + unsigned(ap_const_lv8_11));
    add_ln123_17_fu_752_p2 <= std_logic_vector(unsigned(phi_mul_load_reg_854) + unsigned(ap_const_lv8_12));
    add_ln123_18_fu_762_p2 <= std_logic_vector(unsigned(phi_mul_load_reg_854) + unsigned(ap_const_lv8_13));
    add_ln123_19_fu_772_p2 <= std_logic_vector(unsigned(phi_mul_load_reg_854) + unsigned(ap_const_lv8_14));
    add_ln123_1_fu_591_p2 <= std_logic_vector(unsigned(trunc_ln123_fu_577_p1) + unsigned(ap_const_lv7_2));
    add_ln123_20_fu_782_p2 <= std_logic_vector(unsigned(phi_mul_load_reg_854) + unsigned(ap_const_lv8_15));
    add_ln123_21_fu_792_p2 <= std_logic_vector(unsigned(phi_mul_load_reg_854) + unsigned(ap_const_lv8_16));
    add_ln123_22_fu_802_p2 <= std_logic_vector(unsigned(phi_mul_load_reg_854) + unsigned(ap_const_lv8_17));
    add_ln123_23_fu_812_p2 <= std_logic_vector(unsigned(phi_mul_load_reg_854) + unsigned(ap_const_lv8_18));
    add_ln123_2_fu_602_p2 <= std_logic_vector(unsigned(phi_mul_load_reg_854) + unsigned(ap_const_lv8_3));
    add_ln123_3_fu_612_p2 <= std_logic_vector(unsigned(phi_mul_load_reg_854) + unsigned(ap_const_lv8_4));
    add_ln123_4_fu_622_p2 <= std_logic_vector(unsigned(phi_mul_load_reg_854) + unsigned(ap_const_lv8_5));
    add_ln123_5_fu_632_p2 <= std_logic_vector(unsigned(phi_mul_load_reg_854) + unsigned(ap_const_lv8_6));
    add_ln123_6_fu_642_p2 <= std_logic_vector(unsigned(phi_mul_load_reg_854) + unsigned(ap_const_lv8_7));
    add_ln123_7_fu_652_p2 <= std_logic_vector(unsigned(phi_mul_load_reg_854) + unsigned(ap_const_lv8_8));
    add_ln123_8_fu_662_p2 <= std_logic_vector(unsigned(phi_mul_load_reg_854) + unsigned(ap_const_lv8_9));
    add_ln123_9_fu_672_p2 <= std_logic_vector(unsigned(phi_mul_load_reg_854) + unsigned(ap_const_lv8_A));
    add_ln123_fu_580_p2 <= std_logic_vector(unsigned(trunc_ln123_fu_577_p1) + unsigned(ap_const_lv7_1));
    add_ln94_2_fu_529_p2 <= std_logic_vector(unsigned(phi_mul186_fu_104) + unsigned(ap_const_lv12_310));
    add_ln94_3_fu_535_p2 <= std_logic_vector(unsigned(phi_mul_fu_108) + unsigned(ap_const_lv8_19));
    add_ln94_fu_547_p2 <= std_logic_vector(unsigned(f_fu_112) + unsigned(ap_const_lv3_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done)
    begin
        if ((grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_ap_done)
    begin
        if ((grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln94_fu_541_p2)
    begin
        if ((((icmp_ln94_fu_541_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln94_fu_541_p2)
    begin
        if (((icmp_ln94_fu_541_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    conv1_bias_address0 <= zext_ln95_fu_553_p1(3 - 1 downto 0);

    conv1_bias_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            conv1_bias_ce0 <= ap_const_logic_1;
        else 
            conv1_bias_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv1_weight_address0 <= zext_ln123_24_fu_817_p1(8 - 1 downto 0);
    conv1_weight_address1 <= zext_ln123_23_fu_807_p1(8 - 1 downto 0);
    conv1_weight_address10 <= zext_ln123_14_fu_717_p1(8 - 1 downto 0);
    conv1_weight_address11 <= zext_ln123_13_fu_707_p1(8 - 1 downto 0);
    conv1_weight_address12 <= zext_ln123_12_fu_697_p1(8 - 1 downto 0);
    conv1_weight_address13 <= zext_ln123_11_fu_687_p1(8 - 1 downto 0);
    conv1_weight_address14 <= zext_ln123_10_fu_677_p1(8 - 1 downto 0);
    conv1_weight_address15 <= zext_ln123_9_fu_667_p1(8 - 1 downto 0);
    conv1_weight_address16 <= zext_ln123_8_fu_657_p1(8 - 1 downto 0);
    conv1_weight_address17 <= zext_ln123_7_fu_647_p1(8 - 1 downto 0);
    conv1_weight_address18 <= zext_ln123_6_fu_637_p1(8 - 1 downto 0);
    conv1_weight_address19 <= zext_ln123_5_fu_627_p1(8 - 1 downto 0);
    conv1_weight_address2 <= zext_ln123_22_fu_797_p1(8 - 1 downto 0);
    conv1_weight_address20 <= zext_ln123_4_fu_617_p1(8 - 1 downto 0);
    conv1_weight_address21 <= zext_ln123_3_fu_607_p1(8 - 1 downto 0);
    conv1_weight_address22 <= zext_ln123_2_fu_597_p1(8 - 1 downto 0);
    conv1_weight_address23 <= zext_ln123_1_fu_586_p1(8 - 1 downto 0);
    conv1_weight_address24 <= zext_ln123_fu_573_p1(8 - 1 downto 0);
    conv1_weight_address3 <= zext_ln123_21_fu_787_p1(8 - 1 downto 0);
    conv1_weight_address4 <= zext_ln123_20_fu_777_p1(8 - 1 downto 0);
    conv1_weight_address5 <= zext_ln123_19_fu_767_p1(8 - 1 downto 0);
    conv1_weight_address6 <= zext_ln123_18_fu_757_p1(8 - 1 downto 0);
    conv1_weight_address7 <= zext_ln123_17_fu_747_p1(8 - 1 downto 0);
    conv1_weight_address8 <= zext_ln123_16_fu_737_p1(8 - 1 downto 0);
    conv1_weight_address9 <= zext_ln123_15_fu_727_p1(8 - 1 downto 0);

    conv1_weight_ce0_assign_proc : process(ap_CS_fsm_state4, grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done)
    begin
        if (((grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            conv1_weight_ce0 <= ap_const_logic_1;
        else 
            conv1_weight_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_weight_ce1_assign_proc : process(ap_CS_fsm_state4, grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done)
    begin
        if (((grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            conv1_weight_ce1 <= ap_const_logic_1;
        else 
            conv1_weight_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_weight_ce10_assign_proc : process(ap_CS_fsm_state4, grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done)
    begin
        if (((grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            conv1_weight_ce10 <= ap_const_logic_1;
        else 
            conv1_weight_ce10 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_weight_ce11_assign_proc : process(ap_CS_fsm_state4, grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done)
    begin
        if (((grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            conv1_weight_ce11 <= ap_const_logic_1;
        else 
            conv1_weight_ce11 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_weight_ce12_assign_proc : process(ap_CS_fsm_state4, grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done)
    begin
        if (((grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            conv1_weight_ce12 <= ap_const_logic_1;
        else 
            conv1_weight_ce12 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_weight_ce13_assign_proc : process(ap_CS_fsm_state4, grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done)
    begin
        if (((grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            conv1_weight_ce13 <= ap_const_logic_1;
        else 
            conv1_weight_ce13 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_weight_ce14_assign_proc : process(ap_CS_fsm_state4, grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done)
    begin
        if (((grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            conv1_weight_ce14 <= ap_const_logic_1;
        else 
            conv1_weight_ce14 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_weight_ce15_assign_proc : process(ap_CS_fsm_state4, grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done)
    begin
        if (((grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            conv1_weight_ce15 <= ap_const_logic_1;
        else 
            conv1_weight_ce15 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_weight_ce16_assign_proc : process(ap_CS_fsm_state4, grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done)
    begin
        if (((grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            conv1_weight_ce16 <= ap_const_logic_1;
        else 
            conv1_weight_ce16 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_weight_ce17_assign_proc : process(ap_CS_fsm_state4, grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done)
    begin
        if (((grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            conv1_weight_ce17 <= ap_const_logic_1;
        else 
            conv1_weight_ce17 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_weight_ce18_assign_proc : process(ap_CS_fsm_state4, grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done)
    begin
        if (((grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            conv1_weight_ce18 <= ap_const_logic_1;
        else 
            conv1_weight_ce18 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_weight_ce19_assign_proc : process(ap_CS_fsm_state4, grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done)
    begin
        if (((grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            conv1_weight_ce19 <= ap_const_logic_1;
        else 
            conv1_weight_ce19 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_weight_ce2_assign_proc : process(ap_CS_fsm_state4, grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done)
    begin
        if (((grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            conv1_weight_ce2 <= ap_const_logic_1;
        else 
            conv1_weight_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_weight_ce20_assign_proc : process(ap_CS_fsm_state4, grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done)
    begin
        if (((grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            conv1_weight_ce20 <= ap_const_logic_1;
        else 
            conv1_weight_ce20 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_weight_ce21_assign_proc : process(ap_CS_fsm_state4, grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done)
    begin
        if (((grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            conv1_weight_ce21 <= ap_const_logic_1;
        else 
            conv1_weight_ce21 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_weight_ce22_assign_proc : process(ap_CS_fsm_state4, grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done)
    begin
        if (((grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            conv1_weight_ce22 <= ap_const_logic_1;
        else 
            conv1_weight_ce22 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_weight_ce23_assign_proc : process(ap_CS_fsm_state4, grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done)
    begin
        if (((grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            conv1_weight_ce23 <= ap_const_logic_1;
        else 
            conv1_weight_ce23 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_weight_ce24_assign_proc : process(ap_CS_fsm_state4, grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done)
    begin
        if (((grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            conv1_weight_ce24 <= ap_const_logic_1;
        else 
            conv1_weight_ce24 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_weight_ce3_assign_proc : process(ap_CS_fsm_state4, grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done)
    begin
        if (((grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            conv1_weight_ce3 <= ap_const_logic_1;
        else 
            conv1_weight_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_weight_ce4_assign_proc : process(ap_CS_fsm_state4, grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done)
    begin
        if (((grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            conv1_weight_ce4 <= ap_const_logic_1;
        else 
            conv1_weight_ce4 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_weight_ce5_assign_proc : process(ap_CS_fsm_state4, grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done)
    begin
        if (((grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            conv1_weight_ce5 <= ap_const_logic_1;
        else 
            conv1_weight_ce5 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_weight_ce6_assign_proc : process(ap_CS_fsm_state4, grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done)
    begin
        if (((grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            conv1_weight_ce6 <= ap_const_logic_1;
        else 
            conv1_weight_ce6 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_weight_ce7_assign_proc : process(ap_CS_fsm_state4, grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done)
    begin
        if (((grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            conv1_weight_ce7 <= ap_const_logic_1;
        else 
            conv1_weight_ce7 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_weight_ce8_assign_proc : process(ap_CS_fsm_state4, grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done)
    begin
        if (((grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            conv1_weight_ce8 <= ap_const_logic_1;
        else 
            conv1_weight_ce8 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_weight_ce9_assign_proc : process(ap_CS_fsm_state4, grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done)
    begin
        if (((grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            conv1_weight_ce9 <= ap_const_logic_1;
        else 
            conv1_weight_ce9 <= ap_const_logic_0;
        end if; 
    end process;

    grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_ap_start <= grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_ap_start_reg;
    grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_start <= grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_ap_start_reg;

    grp_fu_1145_ce_assign_proc : process(grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_grp_fu_1145_p_ce, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_1145_ce <= grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_grp_fu_1145_p_ce;
        else 
            grp_fu_1145_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_1149_ce_assign_proc : process(grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_grp_fu_1149_p_ce, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_1149_ce <= grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_grp_fu_1149_p_ce;
        else 
            grp_fu_1149_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_1153_ce_assign_proc : process(grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_grp_fu_1153_p_ce, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_1153_ce <= grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_grp_fu_1153_p_ce;
        else 
            grp_fu_1153_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_236_p_ce <= grp_fu_1145_ce;
    grp_fu_236_p_din0 <= grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_grp_fu_1145_p_din0;
    grp_fu_236_p_din1 <= grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_grp_fu_1145_p_din1;
    grp_fu_236_p_opcode <= ap_const_lv2_0;
    grp_fu_240_p_ce <= grp_fu_1149_ce;
    grp_fu_240_p_din0 <= grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_grp_fu_1149_p_din0;
    grp_fu_240_p_din1 <= grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_grp_fu_1149_p_din1;
    grp_fu_240_p_opcode <= ap_const_lv2_0;
    grp_fu_244_p_ce <= grp_fu_1153_ce;
    grp_fu_244_p_din0 <= grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_grp_fu_1153_p_din0;
    grp_fu_244_p_din1 <= grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_grp_fu_1153_p_din1;
    icmp_ln94_fu_541_p2 <= "1" when (f_fu_112 = ap_const_lv3_6) else "0";
    m_axi_data_ARADDR <= grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_ARADDR;
    m_axi_data_ARBURST <= grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_ARBURST;
    m_axi_data_ARCACHE <= grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_ARCACHE;
    m_axi_data_ARID <= grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_ARID;
    m_axi_data_ARLEN <= grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_ARLEN;
    m_axi_data_ARLOCK <= grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_ARLOCK;
    m_axi_data_ARPROT <= grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_ARPROT;
    m_axi_data_ARQOS <= grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_ARQOS;
    m_axi_data_ARREGION <= grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_ARREGION;
    m_axi_data_ARSIZE <= grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_ARSIZE;
    m_axi_data_ARUSER <= grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_ARUSER;

    m_axi_data_ARVALID_assign_proc : process(ap_CS_fsm_state5, grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_ARVALID, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            m_axi_data_ARVALID <= grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_ARVALID;
        else 
            m_axi_data_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_data_AWADDR <= ap_const_lv32_0;
    m_axi_data_AWBURST <= ap_const_lv2_0;
    m_axi_data_AWCACHE <= ap_const_lv4_0;
    m_axi_data_AWID <= ap_const_lv1_0;
    m_axi_data_AWLEN <= ap_const_lv32_0;
    m_axi_data_AWLOCK <= ap_const_lv2_0;
    m_axi_data_AWPROT <= ap_const_lv3_0;
    m_axi_data_AWQOS <= ap_const_lv4_0;
    m_axi_data_AWREGION <= ap_const_lv4_0;
    m_axi_data_AWSIZE <= ap_const_lv3_0;
    m_axi_data_AWUSER <= ap_const_lv1_0;
    m_axi_data_AWVALID <= ap_const_logic_0;
    m_axi_data_BREADY <= ap_const_logic_0;

    m_axi_data_RREADY_assign_proc : process(ap_CS_fsm_state5, grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_RREADY, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            m_axi_data_RREADY <= grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_m_axi_data_RREADY;
        else 
            m_axi_data_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_data_WDATA <= ap_const_lv32_0;
    m_axi_data_WID <= ap_const_lv1_0;
    m_axi_data_WLAST <= ap_const_logic_0;
    m_axi_data_WSTRB <= ap_const_lv4_0;
    m_axi_data_WUSER <= ap_const_lv1_0;
    m_axi_data_WVALID <= ap_const_logic_0;

    out_data_address0_assign_proc : process(ap_CS_fsm_state4, grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_out_data_address0, grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_out_data_address0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            out_data_address0 <= grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_out_data_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            out_data_address0 <= grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_out_data_address0;
        else 
            out_data_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    out_data_ce0_assign_proc : process(ap_CS_fsm_state4, grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_out_data_ce0, grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_out_data_ce0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            out_data_ce0 <= grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_out_data_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            out_data_ce0 <= grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_out_data_ce0;
        else 
            out_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_data_d0_assign_proc : process(ap_CS_fsm_state4, grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_out_data_d0, grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_out_data_d0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            out_data_d0 <= grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_out_data_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            out_data_d0 <= grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_out_data_d0;
        else 
            out_data_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    out_data_we0_assign_proc : process(ap_CS_fsm_state4, grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_out_data_we0, grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_out_data_we0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            out_data_we0 <= grp_Convolution2d_float_Pipeline_VITIS_LOOP_111_5_VITIS_LOOP_112_6_fu_445_out_data_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            out_data_we0 <= grp_Convolution2d_float_Pipeline_VITIS_LOOP_97_2_VITIS_LOOP_98_3_fu_436_out_data_we0;
        else 
            out_data_we0 <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln123_fu_577_p1 <= phi_mul_load_reg_854(7 - 1 downto 0);
    zext_ln123_10_fu_677_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln123_9_fu_672_p2),32));
    zext_ln123_11_fu_687_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln123_10_fu_682_p2),32));
    zext_ln123_12_fu_697_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln123_11_fu_692_p2),32));
    zext_ln123_13_fu_707_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln123_12_fu_702_p2),32));
    zext_ln123_14_fu_717_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln123_13_fu_712_p2),32));
    zext_ln123_15_fu_727_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln123_14_fu_722_p2),32));
    zext_ln123_16_fu_737_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln123_15_fu_732_p2),32));
    zext_ln123_17_fu_747_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln123_16_fu_742_p2),32));
    zext_ln123_18_fu_757_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln123_17_fu_752_p2),32));
    zext_ln123_19_fu_767_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln123_18_fu_762_p2),32));
    zext_ln123_1_fu_586_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln123_fu_580_p2),32));
    zext_ln123_20_fu_777_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln123_19_fu_772_p2),32));
    zext_ln123_21_fu_787_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln123_20_fu_782_p2),32));
    zext_ln123_22_fu_797_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln123_21_fu_792_p2),32));
    zext_ln123_23_fu_807_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln123_22_fu_802_p2),32));
    zext_ln123_24_fu_817_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln123_23_fu_812_p2),32));
    zext_ln123_2_fu_597_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln123_1_fu_591_p2),32));
    zext_ln123_3_fu_607_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln123_2_fu_602_p2),32));
    zext_ln123_4_fu_617_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln123_3_fu_612_p2),32));
    zext_ln123_5_fu_627_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln123_4_fu_622_p2),32));
    zext_ln123_6_fu_637_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln123_5_fu_632_p2),32));
    zext_ln123_7_fu_647_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln123_6_fu_642_p2),32));
    zext_ln123_8_fu_657_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln123_7_fu_652_p2),32));
    zext_ln123_9_fu_667_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln123_8_fu_662_p2),32));
    zext_ln123_fu_573_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phi_mul_load_reg_854),32));
    zext_ln95_fu_553_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(f_fu_112),32));
end behav;
