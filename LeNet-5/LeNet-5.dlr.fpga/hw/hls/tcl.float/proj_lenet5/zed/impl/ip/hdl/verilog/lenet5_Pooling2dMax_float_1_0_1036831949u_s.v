// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module lenet5_Pooling2dMax_float_1_0_1036831949u_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        out_data_address0,
        out_data_ce0,
        out_data_we0,
        out_data_d0,
        in_data_address0,
        in_data_ce0,
        in_data_q0,
        in_data_address1,
        in_data_ce1,
        in_data_q1,
        in_data_address2,
        in_data_ce2,
        in_data_q2,
        in_data_address3,
        in_data_ce3,
        in_data_q3,
        grp_fu_248_p_din0,
        grp_fu_248_p_din1,
        grp_fu_248_p_opcode,
        grp_fu_248_p_dout0,
        grp_fu_248_p_ce,
        grp_fu_252_p_din0,
        grp_fu_252_p_din1,
        grp_fu_252_p_opcode,
        grp_fu_252_p_dout0,
        grp_fu_252_p_ce,
        grp_fu_256_p_din0,
        grp_fu_256_p_din1,
        grp_fu_256_p_opcode,
        grp_fu_256_p_dout0,
        grp_fu_256_p_ce,
        grp_fu_260_p_din0,
        grp_fu_260_p_din1,
        grp_fu_260_p_opcode,
        grp_fu_260_p_dout0,
        grp_fu_260_p_ce,
        grp_fu_264_p_din0,
        grp_fu_264_p_din1,
        grp_fu_264_p_opcode,
        grp_fu_264_p_dout0,
        grp_fu_264_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [8:0] out_data_address0;
output   out_data_ce0;
output   out_data_we0;
output  [31:0] out_data_d0;
output  [10:0] in_data_address0;
output   in_data_ce0;
input  [31:0] in_data_q0;
output  [10:0] in_data_address1;
output   in_data_ce1;
input  [31:0] in_data_q1;
output  [10:0] in_data_address2;
output   in_data_ce2;
input  [31:0] in_data_q2;
output  [10:0] in_data_address3;
output   in_data_ce3;
input  [31:0] in_data_q3;
output  [31:0] grp_fu_248_p_din0;
output  [31:0] grp_fu_248_p_din1;
output  [4:0] grp_fu_248_p_opcode;
input  [0:0] grp_fu_248_p_dout0;
output   grp_fu_248_p_ce;
output  [31:0] grp_fu_252_p_din0;
output  [31:0] grp_fu_252_p_din1;
output  [4:0] grp_fu_252_p_opcode;
input  [0:0] grp_fu_252_p_dout0;
output   grp_fu_252_p_ce;
output  [31:0] grp_fu_256_p_din0;
output  [31:0] grp_fu_256_p_din1;
output  [4:0] grp_fu_256_p_opcode;
input  [0:0] grp_fu_256_p_dout0;
output   grp_fu_256_p_ce;
output  [31:0] grp_fu_260_p_din0;
output  [31:0] grp_fu_260_p_din1;
output  [4:0] grp_fu_260_p_opcode;
input  [0:0] grp_fu_260_p_dout0;
output   grp_fu_260_p_ce;
output  [31:0] grp_fu_264_p_din0;
output  [31:0] grp_fu_264_p_din1;
output  [4:0] grp_fu_264_p_opcode;
input  [0:0] grp_fu_264_p_dout0;
output   grp_fu_264_p_ce;

reg ap_idle;
reg out_data_ce0;
reg out_data_we0;
reg in_data_ce0;
reg in_data_ce1;
reg in_data_ce2;
reg in_data_ce3;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln96_fu_249_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [3:0] empty_fu_245_p1;
reg   [3:0] empty_reg_1196;
reg   [0:0] icmp_ln96_reg_1203;
reg   [0:0] icmp_ln96_reg_1203_pp0_iter1_reg;
reg   [0:0] icmp_ln96_reg_1203_pp0_iter2_reg;
wire   [0:0] icmp_ln97_fu_270_p2;
reg   [0:0] icmp_ln97_reg_1207;
reg   [0:0] icmp_ln97_reg_1207_pp0_iter1_reg;
reg   [0:0] icmp_ln97_reg_1207_pp0_iter2_reg;
wire   [3:0] empty_93_fu_276_p1;
reg   [3:0] empty_93_reg_1222;
reg   [2:0] k_load_reg_1234;
wire   [0:0] and_ln97_fu_426_p2;
reg   [0:0] and_ln97_reg_1239;
reg   [0:0] and_ln97_reg_1239_pp0_iter2_reg;
wire   [6:0] select_ln85_2_fu_458_p3;
reg   [6:0] select_ln85_2_reg_1249;
reg   [3:0] r_2_reg_1255;
wire   [3:0] add_ln97_2_fu_492_p2;
reg   [3:0] add_ln97_2_reg_1262;
wire   [8:0] add_ln100_1_fu_548_p2;
reg   [8:0] add_ln100_1_reg_1274;
reg   [8:0] add_ln100_1_reg_1274_pp0_iter3_reg;
reg   [8:0] add_ln100_1_reg_1274_pp0_iter4_reg;
reg   [8:0] add_ln100_1_reg_1274_pp0_iter5_reg;
reg   [8:0] add_ln100_1_reg_1274_pp0_iter6_reg;
reg   [8:0] add_ln100_1_reg_1274_pp0_iter7_reg;
reg   [8:0] add_ln100_1_reg_1274_pp0_iter8_reg;
reg   [8:0] add_ln100_1_reg_1274_pp0_iter9_reg;
reg   [8:0] add_ln100_1_reg_1274_pp0_iter10_reg;
reg   [8:0] add_ln100_1_reg_1274_pp0_iter11_reg;
reg   [8:0] add_ln100_1_reg_1274_pp0_iter12_reg;
reg   [8:0] add_ln100_1_reg_1274_pp0_iter13_reg;
reg   [8:0] add_ln100_1_reg_1274_pp0_iter14_reg;
reg   [8:0] add_ln100_1_reg_1274_pp0_iter15_reg;
wire   [10:0] add_ln106_fu_728_p2;
reg   [10:0] add_ln106_reg_1279;
wire   [10:0] add_ln106_2_fu_739_p2;
reg   [10:0] add_ln106_2_reg_1285;
reg   [31:0] in_data_load_reg_1311;
reg   [31:0] in_data_load_reg_1311_pp0_iter6_reg;
reg   [31:0] in_data_load_4_reg_1318;
reg   [31:0] in_data_load_4_reg_1318_pp0_iter6_reg;
reg   [31:0] in_data_load_4_reg_1318_pp0_iter7_reg;
reg   [31:0] in_data_load_4_reg_1318_pp0_iter8_reg;
reg   [31:0] in_data_load_5_reg_1325;
reg   [31:0] in_data_load_5_reg_1325_pp0_iter6_reg;
reg   [31:0] in_data_load_5_reg_1325_pp0_iter7_reg;
reg   [31:0] in_data_load_5_reg_1325_pp0_iter8_reg;
reg   [31:0] in_data_load_5_reg_1325_pp0_iter9_reg;
reg   [31:0] in_data_load_5_reg_1325_pp0_iter10_reg;
reg   [31:0] in_data_load_6_reg_1332;
reg   [31:0] in_data_load_6_reg_1332_pp0_iter6_reg;
reg   [31:0] in_data_load_6_reg_1332_pp0_iter7_reg;
reg   [31:0] in_data_load_6_reg_1332_pp0_iter8_reg;
reg   [31:0] in_data_load_6_reg_1332_pp0_iter9_reg;
reg   [31:0] in_data_load_6_reg_1332_pp0_iter10_reg;
reg   [31:0] in_data_load_6_reg_1332_pp0_iter11_reg;
reg   [31:0] in_data_load_6_reg_1332_pp0_iter12_reg;
wire   [31:0] select_ln107_fu_814_p3;
reg   [31:0] select_ln107_reg_1339;
reg   [31:0] select_ln107_reg_1339_pp0_iter8_reg;
wire   [31:0] select_ln107_4_fu_903_p3;
reg   [31:0] select_ln107_4_reg_1346;
reg   [31:0] select_ln107_4_reg_1346_pp0_iter10_reg;
wire   [31:0] select_ln107_5_fu_991_p3;
reg   [31:0] select_ln107_5_reg_1353;
reg   [31:0] select_ln107_5_reg_1353_pp0_iter12_reg;
wire   [31:0] select_ln107_6_fu_1079_p3;
reg   [31:0] select_ln107_6_reg_1360;
reg   [31:0] select_ln107_6_reg_1360_pp0_iter14_reg;
wire   [31:0] select_ln113_fu_1126_p3;
reg   [31:0] select_ln113_reg_1367;
reg    ap_condition_exit_pp0_iter3_stage0;
wire   [31:0] zext_ln106_fu_745_p1;
wire    ap_block_pp0_stage0;
wire   [31:0] zext_ln106_5_fu_754_p1;
wire   [31:0] zext_ln106_6_fu_759_p1;
wire   [31:0] zext_ln106_7_fu_768_p1;
wire   [31:0] zext_ln100_2_fu_1133_p1;
reg   [3:0] c_fu_92;
wire   [3:0] add_ln98_2_fu_560_p2;
wire    ap_loop_init;
reg   [2:0] k_fu_96;
wire   [2:0] add_ln98_fu_554_p2;
reg   [2:0] ap_sig_allocacmp_k_load;
reg   [3:0] r_fu_100;
wire   [3:0] select_ln97_25_fu_524_p3;
reg   [2:0] g_fu_104;
wire   [2:0] select_ln97_24_fu_466_p3;
reg   [5:0] indvar_flatten_fu_108;
wire   [5:0] select_ln97_26_fu_298_p3;
reg   [5:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [4:0] ch_fu_112;
wire   [4:0] select_ln97_18_fu_280_p3;
reg   [4:0] ap_sig_allocacmp_ch_2;
reg   [8:0] indvar_flatten72_fu_116;
wire   [8:0] add_ln96_2_fu_255_p2;
reg   [8:0] ap_sig_allocacmp_indvar_flatten72_load;
wire   [4:0] add_ln96_fu_264_p2;
wire   [5:0] add_ln97_3_fu_292_p2;
wire   [5:0] tmp_5_fu_327_p3;
wire   [4:0] ch_cast_cast5_fu_324_p1;
wire   [4:0] g_cast_fu_338_p1;
wire   [4:0] tmp_fu_342_p2;
wire   [6:0] tmp_cast_fu_348_p1;
wire   [6:0] p_cast_fu_334_p1;
wire   [3:0] select_ln97_16_fu_368_p3;
wire   [5:0] p_mid_fu_377_p3;
wire   [5:0] select_ln97_17_fu_388_p3;
wire   [6:0] tmp_cast_mid136_fu_399_p1;
wire   [6:0] p_cast_mid1_fu_384_p1;
wire   [6:0] p_mid138_fu_402_p2;
wire   [6:0] empty_90_fu_352_p2;
wire   [0:0] icmp_ln98_fu_420_p2;
wire   [0:0] xor_ln97_fu_415_p2;
wire   [2:0] select_ln97_fu_361_p3;
wire   [2:0] add_ln97_fu_432_p2;
wire   [4:0] select_ln97_16_cast_fu_373_p1;
wire   [4:0] g_cast_mid1_fu_438_p1;
wire   [4:0] tmp_mid1_fu_442_p2;
wire   [6:0] tmp_cast_mid1_fu_448_p1;
wire   [6:0] zext_ln97_3_fu_395_p1;
wire   [6:0] p_mid1_fu_452_p2;
wire   [6:0] select_ln97_19_fu_408_p3;
wire   [3:0] select_ln97_15_fu_485_p3;
wire   [0:0] or_ln85_fu_498_p2;
wire   [3:0] select_ln85_1_fu_509_p3;
wire   [2:0] select_ln85_fu_502_p3;
wire   [6:0] zext_ln100_fu_535_p1;
wire   [6:0] add_ln100_fu_539_p2;
wire   [8:0] zext_ln100_1_fu_544_p1;
wire   [8:0] p_mid2_fu_517_p3;
wire   [3:0] empty_91_fu_595_p2;
wire   [4:0] tmp_6_fu_581_p3;
wire   [6:0] tmp_7_fu_588_p3;
wire   [4:0] tmp_8_fu_600_p3;
wire   [6:0] tmp_9_fu_608_p3;
wire   [4:0] p_mid3_fu_644_p3;
wire   [4:0] select_ln97_20_fu_616_p3;
wire   [4:0] select_ln85_3_fu_651_p3;
wire   [6:0] p_mid4_fu_662_p3;
wire   [6:0] select_ln97_21_fu_623_p3;
wire   [6:0] select_ln85_4_fu_669_p3;
wire   [3:0] p_mid114_fu_680_p2;
wire   [4:0] p_mid5_fu_685_p3;
wire   [4:0] select_ln97_22_fu_630_p3;
wire   [4:0] select_ln85_5_fu_693_p3;
wire   [6:0] p_mid6_fu_704_p3;
wire   [6:0] select_ln97_23_fu_637_p3;
wire   [6:0] select_ln85_6_fu_712_p3;
wire   [10:0] select_ln85_3_cast_fu_658_p1;
wire   [10:0] grp_fu_1137_p3;
(* use_dsp48 = "no" *) wire   [10:0] add_ln106_3_fu_723_p2;
wire   [10:0] select_ln85_4_cast_fu_676_p1;
wire   [10:0] select_ln85_5_cast_fu_700_p1;
(* use_dsp48 = "no" *) wire   [10:0] add_ln106_4_fu_734_p2;
wire   [10:0] select_ln85_6_cast_fu_719_p1;
wire   [10:0] or_ln106_fu_749_p2;
wire   [10:0] or_ln106_2_fu_763_p2;
wire   [31:0] bitcast_ln107_fu_773_p1;
wire   [7:0] tmp_s_fu_776_p4;
wire   [22:0] trunc_ln107_fu_786_p1;
wire   [0:0] icmp_ln107_14_fu_796_p2;
wire   [0:0] icmp_ln107_fu_790_p2;
wire   [0:0] or_ln107_fu_802_p2;
wire   [0:0] and_ln107_fu_808_p2;
wire   [31:0] bitcast_ln107_7_fu_821_p1;
wire   [31:0] bitcast_ln107_8_fu_838_p1;
wire   [7:0] tmp_13_fu_824_p4;
wire   [22:0] trunc_ln107_7_fu_834_p1;
wire   [0:0] icmp_ln107_16_fu_861_p2;
wire   [0:0] icmp_ln107_15_fu_855_p2;
wire   [7:0] tmp_14_fu_841_p4;
wire   [22:0] trunc_ln107_8_fu_851_p1;
wire   [0:0] icmp_ln107_18_fu_879_p2;
wire   [0:0] icmp_ln107_17_fu_873_p2;
wire   [0:0] or_ln107_7_fu_867_p2;
wire   [0:0] or_ln107_8_fu_885_p2;
wire   [0:0] and_ln107_7_fu_891_p2;
wire   [0:0] and_ln107_8_fu_897_p2;
wire   [31:0] bitcast_ln107_9_fu_909_p1;
wire   [31:0] bitcast_ln107_10_fu_926_p1;
wire   [7:0] tmp_16_fu_912_p4;
wire   [22:0] trunc_ln107_9_fu_922_p1;
wire   [0:0] icmp_ln107_20_fu_949_p2;
wire   [0:0] icmp_ln107_19_fu_943_p2;
wire   [7:0] tmp_17_fu_929_p4;
wire   [22:0] trunc_ln107_10_fu_939_p1;
wire   [0:0] icmp_ln107_22_fu_967_p2;
wire   [0:0] icmp_ln107_21_fu_961_p2;
wire   [0:0] or_ln107_9_fu_955_p2;
wire   [0:0] or_ln107_10_fu_973_p2;
wire   [0:0] and_ln107_9_fu_979_p2;
wire   [0:0] and_ln107_10_fu_985_p2;
wire   [31:0] bitcast_ln107_11_fu_997_p1;
wire   [31:0] bitcast_ln107_12_fu_1014_p1;
wire   [7:0] tmp_19_fu_1000_p4;
wire   [22:0] trunc_ln107_11_fu_1010_p1;
wire   [0:0] icmp_ln107_24_fu_1037_p2;
wire   [0:0] icmp_ln107_23_fu_1031_p2;
wire   [7:0] tmp_20_fu_1017_p4;
wire   [22:0] trunc_ln107_12_fu_1027_p1;
wire   [0:0] icmp_ln107_26_fu_1055_p2;
wire   [0:0] icmp_ln107_25_fu_1049_p2;
wire   [0:0] or_ln107_11_fu_1043_p2;
wire   [0:0] or_ln107_12_fu_1061_p2;
wire   [0:0] and_ln107_11_fu_1067_p2;
wire   [0:0] and_ln107_12_fu_1073_p2;
wire   [31:0] bitcast_ln113_fu_1085_p1;
wire   [7:0] tmp_22_fu_1088_p4;
wire   [22:0] trunc_ln113_fu_1098_p1;
wire   [0:0] icmp_ln113_2_fu_1108_p2;
wire   [0:0] icmp_ln113_fu_1102_p2;
wire   [0:0] or_ln113_fu_1114_p2;
wire   [0:0] and_ln113_fu_1120_p2;
wire   [4:0] grp_fu_1137_p0;
wire   [6:0] grp_fu_1137_p1;
wire   [3:0] grp_fu_1137_p2;
wire    ap_block_pp0_stage0_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [10:0] grp_fu_1137_p00;
wire   [10:0] grp_fu_1137_p20;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_done_reg = 1'b0;
end

lenet5_mac_muladd_5ns_7ns_4ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 4 ),
    .dout_WIDTH( 11 ))
mac_muladd_5ns_7ns_4ns_11_4_1_U104(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1137_p0),
    .din1(grp_fu_1137_p1),
    .din2(grp_fu_1137_p2),
    .ce(1'b1),
    .dout(grp_fu_1137_p3)
);

lenet5_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter15_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter3_stage0)) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            c_fu_92 <= 4'd0;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln96_reg_1203_pp0_iter1_reg == 1'd0))) begin
            c_fu_92 <= add_ln98_2_fu_560_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln96_fu_249_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            ch_fu_112 <= select_ln97_18_fu_280_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            ch_fu_112 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            g_fu_104 <= 3'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln96_reg_1203 == 1'd0))) begin
            g_fu_104 <= select_ln97_24_fu_466_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln96_fu_249_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten72_fu_116 <= add_ln96_2_fu_255_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten72_fu_116 <= 9'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln96_fu_249_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten_fu_108 <= select_ln97_26_fu_298_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_108 <= 6'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            k_fu_96 <= 3'd0;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln96_reg_1203_pp0_iter1_reg == 1'd0))) begin
            k_fu_96 <= add_ln98_fu_554_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            r_fu_100 <= 4'd0;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln96_reg_1203_pp0_iter1_reg == 1'd0))) begin
            r_fu_100 <= select_ln97_25_fu_524_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln96_reg_1203_pp0_iter1_reg == 1'd0))) begin
        add_ln100_1_reg_1274 <= add_ln100_1_fu_548_p2;
        add_ln97_2_reg_1262 <= add_ln97_2_fu_492_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln100_1_reg_1274_pp0_iter10_reg <= add_ln100_1_reg_1274_pp0_iter9_reg;
        add_ln100_1_reg_1274_pp0_iter11_reg <= add_ln100_1_reg_1274_pp0_iter10_reg;
        add_ln100_1_reg_1274_pp0_iter12_reg <= add_ln100_1_reg_1274_pp0_iter11_reg;
        add_ln100_1_reg_1274_pp0_iter13_reg <= add_ln100_1_reg_1274_pp0_iter12_reg;
        add_ln100_1_reg_1274_pp0_iter14_reg <= add_ln100_1_reg_1274_pp0_iter13_reg;
        add_ln100_1_reg_1274_pp0_iter15_reg <= add_ln100_1_reg_1274_pp0_iter14_reg;
        add_ln100_1_reg_1274_pp0_iter3_reg <= add_ln100_1_reg_1274;
        add_ln100_1_reg_1274_pp0_iter4_reg <= add_ln100_1_reg_1274_pp0_iter3_reg;
        add_ln100_1_reg_1274_pp0_iter5_reg <= add_ln100_1_reg_1274_pp0_iter4_reg;
        add_ln100_1_reg_1274_pp0_iter6_reg <= add_ln100_1_reg_1274_pp0_iter5_reg;
        add_ln100_1_reg_1274_pp0_iter7_reg <= add_ln100_1_reg_1274_pp0_iter6_reg;
        add_ln100_1_reg_1274_pp0_iter8_reg <= add_ln100_1_reg_1274_pp0_iter7_reg;
        add_ln100_1_reg_1274_pp0_iter9_reg <= add_ln100_1_reg_1274_pp0_iter8_reg;
        and_ln97_reg_1239_pp0_iter2_reg <= and_ln97_reg_1239;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        icmp_ln96_reg_1203_pp0_iter2_reg <= icmp_ln96_reg_1203_pp0_iter1_reg;
        icmp_ln97_reg_1207_pp0_iter2_reg <= icmp_ln97_reg_1207_pp0_iter1_reg;
        in_data_load_4_reg_1318_pp0_iter6_reg <= in_data_load_4_reg_1318;
        in_data_load_4_reg_1318_pp0_iter7_reg <= in_data_load_4_reg_1318_pp0_iter6_reg;
        in_data_load_4_reg_1318_pp0_iter8_reg <= in_data_load_4_reg_1318_pp0_iter7_reg;
        in_data_load_5_reg_1325_pp0_iter10_reg <= in_data_load_5_reg_1325_pp0_iter9_reg;
        in_data_load_5_reg_1325_pp0_iter6_reg <= in_data_load_5_reg_1325;
        in_data_load_5_reg_1325_pp0_iter7_reg <= in_data_load_5_reg_1325_pp0_iter6_reg;
        in_data_load_5_reg_1325_pp0_iter8_reg <= in_data_load_5_reg_1325_pp0_iter7_reg;
        in_data_load_5_reg_1325_pp0_iter9_reg <= in_data_load_5_reg_1325_pp0_iter8_reg;
        in_data_load_6_reg_1332_pp0_iter10_reg <= in_data_load_6_reg_1332_pp0_iter9_reg;
        in_data_load_6_reg_1332_pp0_iter11_reg <= in_data_load_6_reg_1332_pp0_iter10_reg;
        in_data_load_6_reg_1332_pp0_iter12_reg <= in_data_load_6_reg_1332_pp0_iter11_reg;
        in_data_load_6_reg_1332_pp0_iter6_reg <= in_data_load_6_reg_1332;
        in_data_load_6_reg_1332_pp0_iter7_reg <= in_data_load_6_reg_1332_pp0_iter6_reg;
        in_data_load_6_reg_1332_pp0_iter8_reg <= in_data_load_6_reg_1332_pp0_iter7_reg;
        in_data_load_6_reg_1332_pp0_iter9_reg <= in_data_load_6_reg_1332_pp0_iter8_reg;
        in_data_load_reg_1311_pp0_iter6_reg <= in_data_load_reg_1311;
        r_2_reg_1255 <= r_fu_100;
        select_ln107_4_reg_1346 <= select_ln107_4_fu_903_p3;
        select_ln107_4_reg_1346_pp0_iter10_reg <= select_ln107_4_reg_1346;
        select_ln107_5_reg_1353 <= select_ln107_5_fu_991_p3;
        select_ln107_5_reg_1353_pp0_iter12_reg <= select_ln107_5_reg_1353;
        select_ln107_6_reg_1360 <= select_ln107_6_fu_1079_p3;
        select_ln107_6_reg_1360_pp0_iter14_reg <= select_ln107_6_reg_1360;
        select_ln107_reg_1339 <= select_ln107_fu_814_p3;
        select_ln107_reg_1339_pp0_iter8_reg <= select_ln107_reg_1339;
        select_ln113_reg_1367 <= select_ln113_fu_1126_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln96_reg_1203_pp0_iter2_reg == 1'd0))) begin
        add_ln106_2_reg_1285 <= add_ln106_2_fu_739_p2;
        add_ln106_reg_1279 <= add_ln106_fu_728_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln96_reg_1203 == 1'd0))) begin
        and_ln97_reg_1239 <= and_ln97_fu_426_p2;
        k_load_reg_1234 <= ap_sig_allocacmp_k_load;
        select_ln85_2_reg_1249 <= select_ln85_2_fu_458_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        empty_reg_1196 <= empty_fu_245_p1;
        icmp_ln96_reg_1203 <= icmp_ln96_fu_249_p2;
        icmp_ln96_reg_1203_pp0_iter1_reg <= icmp_ln96_reg_1203;
        icmp_ln97_reg_1207_pp0_iter1_reg <= icmp_ln97_reg_1207;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln96_fu_249_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_93_reg_1222 <= empty_93_fu_276_p1;
        icmp_ln97_reg_1207 <= icmp_ln97_fu_270_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        in_data_load_4_reg_1318 <= in_data_q2;
        in_data_load_5_reg_1325 <= in_data_q1;
        in_data_load_6_reg_1332 <= in_data_q0;
        in_data_load_reg_1311 <= in_data_q3;
    end
end

always @ (*) begin
    if (((icmp_ln96_fu_249_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln96_reg_1203_pp0_iter2_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter3_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter3_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter15_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_ch_2 = 5'd0;
    end else begin
        ap_sig_allocacmp_ch_2 = ch_fu_112;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten72_load = 9'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten72_load = indvar_flatten72_fu_116;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 6'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_108;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln96_reg_1203_pp0_iter1_reg == 1'd0))) begin
        ap_sig_allocacmp_k_load = add_ln98_fu_554_p2;
    end else begin
        ap_sig_allocacmp_k_load = k_fu_96;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        in_data_ce0 = 1'b1;
    end else begin
        in_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        in_data_ce1 = 1'b1;
    end else begin
        in_data_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        in_data_ce2 = 1'b1;
    end else begin
        in_data_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        in_data_ce3 = 1'b1;
    end else begin
        in_data_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        out_data_ce0 = 1'b1;
    end else begin
        out_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        out_data_we0 = 1'b1;
    end else begin
        out_data_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln100_1_fu_548_p2 = (zext_ln100_1_fu_544_p1 + p_mid2_fu_517_p3);

assign add_ln100_fu_539_p2 = (select_ln85_2_reg_1249 + zext_ln100_fu_535_p1);

assign add_ln106_2_fu_739_p2 = (add_ln106_4_fu_734_p2 + select_ln85_6_cast_fu_719_p1);

assign add_ln106_3_fu_723_p2 = (select_ln85_3_cast_fu_658_p1 + grp_fu_1137_p3);

assign add_ln106_4_fu_734_p2 = (select_ln85_5_cast_fu_700_p1 + grp_fu_1137_p3);

assign add_ln106_fu_728_p2 = (add_ln106_3_fu_723_p2 + select_ln85_4_cast_fu_676_p1);

assign add_ln96_2_fu_255_p2 = (ap_sig_allocacmp_indvar_flatten72_load + 9'd1);

assign add_ln96_fu_264_p2 = (ap_sig_allocacmp_ch_2 + 5'd1);

assign add_ln97_2_fu_492_p2 = (select_ln97_15_fu_485_p3 + 4'd2);

assign add_ln97_3_fu_292_p2 = (ap_sig_allocacmp_indvar_flatten_load + 6'd1);

assign add_ln97_fu_432_p2 = (select_ln97_fu_361_p3 + 3'd1);

assign add_ln98_2_fu_560_p2 = (select_ln85_1_fu_509_p3 + 4'd2);

assign add_ln98_fu_554_p2 = (select_ln85_fu_502_p3 + 3'd1);

assign and_ln107_10_fu_985_p2 = (grp_fu_256_p_dout0 & and_ln107_9_fu_979_p2);

assign and_ln107_11_fu_1067_p2 = (or_ln107_12_fu_1061_p2 & or_ln107_11_fu_1043_p2);

assign and_ln107_12_fu_1073_p2 = (grp_fu_260_p_dout0 & and_ln107_11_fu_1067_p2);

assign and_ln107_7_fu_891_p2 = (or_ln107_8_fu_885_p2 & or_ln107_7_fu_867_p2);

assign and_ln107_8_fu_897_p2 = (grp_fu_252_p_dout0 & and_ln107_7_fu_891_p2);

assign and_ln107_9_fu_979_p2 = (or_ln107_9_fu_955_p2 & or_ln107_10_fu_973_p2);

assign and_ln107_fu_808_p2 = (or_ln107_fu_802_p2 & grp_fu_248_p_dout0);

assign and_ln113_fu_1120_p2 = (or_ln113_fu_1114_p2 & grp_fu_264_p_dout0);

assign and_ln97_fu_426_p2 = (xor_ln97_fu_415_p2 & icmp_ln98_fu_420_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign bitcast_ln107_10_fu_926_p1 = in_data_load_5_reg_1325_pp0_iter10_reg;

assign bitcast_ln107_11_fu_997_p1 = select_ln107_5_reg_1353_pp0_iter12_reg;

assign bitcast_ln107_12_fu_1014_p1 = in_data_load_6_reg_1332_pp0_iter12_reg;

assign bitcast_ln107_7_fu_821_p1 = select_ln107_reg_1339_pp0_iter8_reg;

assign bitcast_ln107_8_fu_838_p1 = in_data_load_4_reg_1318_pp0_iter8_reg;

assign bitcast_ln107_9_fu_909_p1 = select_ln107_4_reg_1346_pp0_iter10_reg;

assign bitcast_ln107_fu_773_p1 = in_data_load_reg_1311_pp0_iter6_reg;

assign bitcast_ln113_fu_1085_p1 = select_ln107_6_reg_1360_pp0_iter14_reg;

assign ch_cast_cast5_fu_324_p1 = empty_reg_1196;

assign empty_90_fu_352_p2 = (tmp_cast_fu_348_p1 + p_cast_fu_334_p1);

assign empty_91_fu_595_p2 = (r_2_reg_1255 | 4'd1);

assign empty_93_fu_276_p1 = add_ln96_fu_264_p2[3:0];

assign empty_fu_245_p1 = ap_sig_allocacmp_ch_2[3:0];

assign g_cast_fu_338_p1 = g_fu_104;

assign g_cast_mid1_fu_438_p1 = add_ln97_fu_432_p2;

assign grp_fu_1137_p0 = grp_fu_1137_p00;

assign grp_fu_1137_p00 = select_ln97_18_fu_280_p3;

assign grp_fu_1137_p1 = 11'd100;

assign grp_fu_1137_p2 = grp_fu_1137_p20;

assign grp_fu_1137_p20 = select_ln85_1_fu_509_p3;

assign grp_fu_248_p_ce = 1'b1;

assign grp_fu_248_p_din0 = in_data_load_reg_1311;

assign grp_fu_248_p_din1 = 32'd3279880192;

assign grp_fu_248_p_opcode = 5'd2;

assign grp_fu_252_p_ce = 1'b1;

assign grp_fu_252_p_din0 = select_ln107_reg_1339;

assign grp_fu_252_p_din1 = in_data_load_4_reg_1318_pp0_iter7_reg;

assign grp_fu_252_p_opcode = 5'd4;

assign grp_fu_256_p_ce = 1'b1;

assign grp_fu_256_p_din0 = select_ln107_4_reg_1346;

assign grp_fu_256_p_din1 = in_data_load_5_reg_1325_pp0_iter9_reg;

assign grp_fu_256_p_opcode = 5'd4;

assign grp_fu_260_p_ce = 1'b1;

assign grp_fu_260_p_din0 = select_ln107_5_reg_1353;

assign grp_fu_260_p_din1 = in_data_load_6_reg_1332_pp0_iter11_reg;

assign grp_fu_260_p_opcode = 5'd4;

assign grp_fu_264_p_ce = 1'b1;

assign grp_fu_264_p_din0 = select_ln107_6_reg_1360;

assign grp_fu_264_p_din1 = 32'd0;

assign grp_fu_264_p_opcode = 5'd5;

assign icmp_ln107_14_fu_796_p2 = ((trunc_ln107_fu_786_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln107_15_fu_855_p2 = ((tmp_13_fu_824_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln107_16_fu_861_p2 = ((trunc_ln107_7_fu_834_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln107_17_fu_873_p2 = ((tmp_14_fu_841_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln107_18_fu_879_p2 = ((trunc_ln107_8_fu_851_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln107_19_fu_943_p2 = ((tmp_16_fu_912_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln107_20_fu_949_p2 = ((trunc_ln107_9_fu_922_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln107_21_fu_961_p2 = ((tmp_17_fu_929_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln107_22_fu_967_p2 = ((trunc_ln107_10_fu_939_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln107_23_fu_1031_p2 = ((tmp_19_fu_1000_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln107_24_fu_1037_p2 = ((trunc_ln107_11_fu_1010_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln107_25_fu_1049_p2 = ((tmp_20_fu_1017_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln107_26_fu_1055_p2 = ((trunc_ln107_12_fu_1027_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln107_fu_790_p2 = ((tmp_s_fu_776_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln113_2_fu_1108_p2 = ((trunc_ln113_fu_1098_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln113_fu_1102_p2 = ((tmp_22_fu_1088_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln96_fu_249_p2 = ((ap_sig_allocacmp_indvar_flatten72_load == 9'd400) ? 1'b1 : 1'b0);

assign icmp_ln97_fu_270_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 6'd25) ? 1'b1 : 1'b0);

assign icmp_ln98_fu_420_p2 = ((ap_sig_allocacmp_k_load == 3'd5) ? 1'b1 : 1'b0);

assign in_data_address0 = zext_ln106_7_fu_768_p1;

assign in_data_address1 = zext_ln106_6_fu_759_p1;

assign in_data_address2 = zext_ln106_5_fu_754_p1;

assign in_data_address3 = zext_ln106_fu_745_p1;

assign or_ln106_2_fu_763_p2 = (11'd1 | add_ln106_2_reg_1285);

assign or_ln106_fu_749_p2 = (11'd1 | add_ln106_reg_1279);

assign or_ln107_10_fu_973_p2 = (icmp_ln107_22_fu_967_p2 | icmp_ln107_21_fu_961_p2);

assign or_ln107_11_fu_1043_p2 = (icmp_ln107_24_fu_1037_p2 | icmp_ln107_23_fu_1031_p2);

assign or_ln107_12_fu_1061_p2 = (icmp_ln107_26_fu_1055_p2 | icmp_ln107_25_fu_1049_p2);

assign or_ln107_7_fu_867_p2 = (icmp_ln107_16_fu_861_p2 | icmp_ln107_15_fu_855_p2);

assign or_ln107_8_fu_885_p2 = (icmp_ln107_18_fu_879_p2 | icmp_ln107_17_fu_873_p2);

assign or_ln107_9_fu_955_p2 = (icmp_ln107_20_fu_949_p2 | icmp_ln107_19_fu_943_p2);

assign or_ln107_fu_802_p2 = (icmp_ln107_fu_790_p2 | icmp_ln107_14_fu_796_p2);

assign or_ln113_fu_1114_p2 = (icmp_ln113_fu_1102_p2 | icmp_ln113_2_fu_1108_p2);

assign or_ln85_fu_498_p2 = (icmp_ln97_reg_1207_pp0_iter1_reg | and_ln97_reg_1239);

assign out_data_address0 = zext_ln100_2_fu_1133_p1;

assign out_data_d0 = select_ln113_reg_1367;

assign p_cast_fu_334_p1 = tmp_5_fu_327_p3;

assign p_cast_mid1_fu_384_p1 = p_mid_fu_377_p3;

assign p_mid114_fu_680_p2 = (4'd1 | add_ln97_2_reg_1262);

assign p_mid138_fu_402_p2 = (tmp_cast_mid136_fu_399_p1 + p_cast_mid1_fu_384_p1);

assign p_mid1_fu_452_p2 = (tmp_cast_mid1_fu_448_p1 + zext_ln97_3_fu_395_p1);

assign p_mid2_fu_517_p3 = {{select_ln85_2_reg_1249}, {2'd0}};

assign p_mid3_fu_644_p3 = {{add_ln97_2_reg_1262}, {1'd0}};

assign p_mid4_fu_662_p3 = {{add_ln97_2_reg_1262}, {3'd0}};

assign p_mid5_fu_685_p3 = {{p_mid114_fu_680_p2}, {1'd0}};

assign p_mid6_fu_704_p3 = {{p_mid114_fu_680_p2}, {3'd0}};

assign p_mid_fu_377_p3 = {{empty_93_reg_1222}, {2'd0}};

assign select_ln107_4_fu_903_p3 = ((and_ln107_8_fu_897_p2[0:0] == 1'b1) ? in_data_load_4_reg_1318_pp0_iter8_reg : select_ln107_reg_1339_pp0_iter8_reg);

assign select_ln107_5_fu_991_p3 = ((and_ln107_10_fu_985_p2[0:0] == 1'b1) ? in_data_load_5_reg_1325_pp0_iter10_reg : select_ln107_4_reg_1346_pp0_iter10_reg);

assign select_ln107_6_fu_1079_p3 = ((and_ln107_12_fu_1073_p2[0:0] == 1'b1) ? in_data_load_6_reg_1332_pp0_iter12_reg : select_ln107_5_reg_1353_pp0_iter12_reg);

assign select_ln107_fu_814_p3 = ((and_ln107_fu_808_p2[0:0] == 1'b1) ? in_data_load_reg_1311_pp0_iter6_reg : 32'd3279880192);

assign select_ln113_fu_1126_p3 = ((and_ln113_fu_1120_p2[0:0] == 1'b1) ? 32'd0 : select_ln107_6_reg_1360_pp0_iter14_reg);

assign select_ln85_1_fu_509_p3 = ((or_ln85_fu_498_p2[0:0] == 1'b1) ? 4'd0 : c_fu_92);

assign select_ln85_2_fu_458_p3 = ((and_ln97_fu_426_p2[0:0] == 1'b1) ? p_mid1_fu_452_p2 : select_ln97_19_fu_408_p3);

assign select_ln85_3_cast_fu_658_p1 = select_ln85_3_fu_651_p3;

assign select_ln85_3_fu_651_p3 = ((and_ln97_reg_1239_pp0_iter2_reg[0:0] == 1'b1) ? p_mid3_fu_644_p3 : select_ln97_20_fu_616_p3);

assign select_ln85_4_cast_fu_676_p1 = select_ln85_4_fu_669_p3;

assign select_ln85_4_fu_669_p3 = ((and_ln97_reg_1239_pp0_iter2_reg[0:0] == 1'b1) ? p_mid4_fu_662_p3 : select_ln97_21_fu_623_p3);

assign select_ln85_5_cast_fu_700_p1 = select_ln85_5_fu_693_p3;

assign select_ln85_5_fu_693_p3 = ((and_ln97_reg_1239_pp0_iter2_reg[0:0] == 1'b1) ? p_mid5_fu_685_p3 : select_ln97_22_fu_630_p3);

assign select_ln85_6_cast_fu_719_p1 = select_ln85_6_fu_712_p3;

assign select_ln85_6_fu_712_p3 = ((and_ln97_reg_1239_pp0_iter2_reg[0:0] == 1'b1) ? p_mid6_fu_704_p3 : select_ln97_23_fu_637_p3);

assign select_ln85_fu_502_p3 = ((or_ln85_fu_498_p2[0:0] == 1'b1) ? 3'd0 : k_load_reg_1234);

assign select_ln97_15_fu_485_p3 = ((icmp_ln97_reg_1207_pp0_iter1_reg[0:0] == 1'b1) ? 4'd0 : r_fu_100);

assign select_ln97_16_cast_fu_373_p1 = select_ln97_16_fu_368_p3;

assign select_ln97_16_fu_368_p3 = ((icmp_ln97_reg_1207[0:0] == 1'b1) ? empty_93_reg_1222 : empty_reg_1196);

assign select_ln97_17_fu_388_p3 = ((icmp_ln97_reg_1207[0:0] == 1'b1) ? p_mid_fu_377_p3 : tmp_5_fu_327_p3);

assign select_ln97_18_fu_280_p3 = ((icmp_ln97_fu_270_p2[0:0] == 1'b1) ? add_ln96_fu_264_p2 : ap_sig_allocacmp_ch_2);

assign select_ln97_19_fu_408_p3 = ((icmp_ln97_reg_1207[0:0] == 1'b1) ? p_mid138_fu_402_p2 : empty_90_fu_352_p2);

assign select_ln97_20_fu_616_p3 = ((icmp_ln97_reg_1207_pp0_iter2_reg[0:0] == 1'b1) ? 5'd0 : tmp_6_fu_581_p3);

assign select_ln97_21_fu_623_p3 = ((icmp_ln97_reg_1207_pp0_iter2_reg[0:0] == 1'b1) ? 7'd0 : tmp_7_fu_588_p3);

assign select_ln97_22_fu_630_p3 = ((icmp_ln97_reg_1207_pp0_iter2_reg[0:0] == 1'b1) ? 5'd2 : tmp_8_fu_600_p3);

assign select_ln97_23_fu_637_p3 = ((icmp_ln97_reg_1207_pp0_iter2_reg[0:0] == 1'b1) ? 7'd8 : tmp_9_fu_608_p3);

assign select_ln97_24_fu_466_p3 = ((and_ln97_fu_426_p2[0:0] == 1'b1) ? add_ln97_fu_432_p2 : select_ln97_fu_361_p3);

assign select_ln97_25_fu_524_p3 = ((and_ln97_reg_1239[0:0] == 1'b1) ? add_ln97_2_fu_492_p2 : select_ln97_15_fu_485_p3);

assign select_ln97_26_fu_298_p3 = ((icmp_ln97_fu_270_p2[0:0] == 1'b1) ? 6'd1 : add_ln97_3_fu_292_p2);

assign select_ln97_fu_361_p3 = ((icmp_ln97_reg_1207[0:0] == 1'b1) ? 3'd0 : g_fu_104);

assign tmp_13_fu_824_p4 = {{bitcast_ln107_7_fu_821_p1[30:23]}};

assign tmp_14_fu_841_p4 = {{bitcast_ln107_8_fu_838_p1[30:23]}};

assign tmp_16_fu_912_p4 = {{bitcast_ln107_9_fu_909_p1[30:23]}};

assign tmp_17_fu_929_p4 = {{bitcast_ln107_10_fu_926_p1[30:23]}};

assign tmp_19_fu_1000_p4 = {{bitcast_ln107_11_fu_997_p1[30:23]}};

assign tmp_20_fu_1017_p4 = {{bitcast_ln107_12_fu_1014_p1[30:23]}};

assign tmp_22_fu_1088_p4 = {{bitcast_ln113_fu_1085_p1[30:23]}};

assign tmp_5_fu_327_p3 = {{empty_reg_1196}, {2'd0}};

assign tmp_6_fu_581_p3 = {{r_2_reg_1255}, {1'd0}};

assign tmp_7_fu_588_p3 = {{r_2_reg_1255}, {3'd0}};

assign tmp_8_fu_600_p3 = {{empty_91_fu_595_p2}, {1'd0}};

assign tmp_9_fu_608_p3 = {{empty_91_fu_595_p2}, {3'd0}};

assign tmp_cast_fu_348_p1 = tmp_fu_342_p2;

assign tmp_cast_mid136_fu_399_p1 = empty_93_reg_1222;

assign tmp_cast_mid1_fu_448_p1 = tmp_mid1_fu_442_p2;

assign tmp_fu_342_p2 = (ch_cast_cast5_fu_324_p1 + g_cast_fu_338_p1);

assign tmp_mid1_fu_442_p2 = (select_ln97_16_cast_fu_373_p1 + g_cast_mid1_fu_438_p1);

assign tmp_s_fu_776_p4 = {{bitcast_ln107_fu_773_p1[30:23]}};

assign trunc_ln107_10_fu_939_p1 = bitcast_ln107_10_fu_926_p1[22:0];

assign trunc_ln107_11_fu_1010_p1 = bitcast_ln107_11_fu_997_p1[22:0];

assign trunc_ln107_12_fu_1027_p1 = bitcast_ln107_12_fu_1014_p1[22:0];

assign trunc_ln107_7_fu_834_p1 = bitcast_ln107_7_fu_821_p1[22:0];

assign trunc_ln107_8_fu_851_p1 = bitcast_ln107_8_fu_838_p1[22:0];

assign trunc_ln107_9_fu_922_p1 = bitcast_ln107_9_fu_909_p1[22:0];

assign trunc_ln107_fu_786_p1 = bitcast_ln107_fu_773_p1[22:0];

assign trunc_ln113_fu_1098_p1 = bitcast_ln113_fu_1085_p1[22:0];

assign xor_ln97_fu_415_p2 = (icmp_ln97_reg_1207 ^ 1'd1);

assign zext_ln100_1_fu_544_p1 = add_ln100_fu_539_p2;

assign zext_ln100_2_fu_1133_p1 = add_ln100_1_reg_1274_pp0_iter15_reg;

assign zext_ln100_fu_535_p1 = select_ln85_fu_502_p3;

assign zext_ln106_5_fu_754_p1 = or_ln106_fu_749_p2;

assign zext_ln106_6_fu_759_p1 = add_ln106_2_reg_1285;

assign zext_ln106_7_fu_768_p1 = or_ln106_2_fu_763_p2;

assign zext_ln106_fu_745_p1 = add_ln106_reg_1279;

assign zext_ln97_3_fu_395_p1 = select_ln97_17_fu_388_p3;

endmodule //lenet5_Pooling2dMax_float_1_0_1036831949u_s
