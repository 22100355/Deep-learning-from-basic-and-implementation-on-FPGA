// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __lenet5_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fc1_bias_ROM_AUTO_1R_H__
#define __lenet5_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fc1_bias_ROM_AUTO_1R_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct lenet5_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fc1_bias_ROM_AUTO_1R_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 120;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(lenet5_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fc1_bias_ROM_AUTO_1R_ram) {
        ram[0] = "0b10111101010000000010010110110100";
        ram[1] = "0b10111011110100011000001100111100";
        ram[2] = "0b10111100000001001111000100100111";
        ram[3] = "0b00111100000011010110111100011000";
        ram[4] = "0b10111011011011100110100110000110";
        ram[5] = "0b10111011101001011010111000101111";
        ram[6] = "0b00111100100101010111111000110001";
        ram[7] = "0b10111101000101000001000011000111";
        ram[8] = "0b10111100011111111111010110010100";
        ram[9] = "0b00111100100011101001100000101110";
        ram[10] = "0b10111101001011001010111111010101";
        ram[11] = "0b00111101001000010100011100111110";
        ram[12] = "0b00111100100111000010010010001010";
        ram[13] = "0b00111100011000001001101010110100";
        ram[14] = "0b00111100111011011101010100111011";
        ram[15] = "0b10111100010100101000111111011111";
        ram[16] = "0b00111101000100101100001000010111";
        ram[17] = "0b10111101010110111000011001111011";
        ram[18] = "0b10111101010001000111100000110011";
        ram[19] = "0b10111101000010001111101001110110";
        ram[20] = "0b00111101001000100111111100101010";
        ram[21] = "0b10111101000111011101000000010000";
        ram[22] = "0b00111100010011010111010101111110";
        ram[23] = "0b00111100100101000010010001000111";
        ram[24] = "0b10111100011001101001110111010001";
        ram[25] = "0b00111100110100011101101111011110";
        ram[26] = "0b10111101000011110011011001011000";
        ram[27] = "0b00111100101110101101010111011001";
        ram[28] = "0b10111011001111000010110001101100";
        ram[29] = "0b00111100011011001101011110100000";
        ram[30] = "0b10111100110010001001111011011011";
        ram[31] = "0b00111101010100101101111010101110";
        ram[32] = "0b00111101000000111010000011001100";
        ram[33] = "0b00111100110111001000001011011000";
        ram[34] = "0b10111011100111000110111001011110";
        ram[35] = "0b10111101000100110010010000011100";
        ram[36] = "0b00111100011001100111111001010000";
        ram[37] = "0b10111100100110000010011001001001";
        ram[38] = "0b00111011011100100000011011101110";
        ram[39] = "0b10111100111110110010001100101101";
        ram[40] = "0b00111101000111011100100000110110";
        ram[41] = "0b00111011000000110011001100111011";
        ram[42] = "0b00111101011111001010011111110000";
        ram[43] = "0b10111101000001111011001001111011";
        ram[44] = "0b10111101000110010011111010111101";
        ram[45] = "0b10111100010111111100010111100111";
        ram[46] = "0b00111100101001111011000001010100";
        ram[47] = "0b00111100111000001111101100110101";
        ram[48] = "0b10111100011100100101001100100111";
        ram[49] = "0b10111101000001000010111101011100";
        ram[50] = "0b00111100101011100111010011110110";
        ram[51] = "0b10111100010110111111011111011110";
        ram[52] = "0b00111100001001000100111011110100";
        ram[53] = "0b10111101000110100010101111000010";
        ram[54] = "0b10111101000110011000111111100101";
        ram[55] = "0b00111101001111101111000100011011";
        ram[56] = "0b10111100100101000111100100011101";
        ram[57] = "0b00111101001111000111111111011001";
        ram[58] = "0b10111011101101000000110101011000";
        ram[59] = "0b00111100111101101100111100110111";
        ram[60] = "0b10111101001101011101001101010010";
        ram[61] = "0b10111100101011111101101110100001";
        ram[62] = "0b10111100100101000000011010001111";
        ram[63] = "0b10111100100011000111000000011011";
        ram[64] = "0b10111100101110001000111011110000";
        ram[65] = "0b00111101001101010001101010101011";
        ram[66] = "0b00111010110001100010001101110101";
        ram[67] = "0b10111100100111000101110001001110";
        ram[68] = "0b10111100101111011110001110000001";
        ram[69] = "0b00111101000110001110000101111111";
        ram[70] = "0b10111101000001011101101110100001";
        ram[71] = "0b10111101010001011111111010100001";
        ram[72] = "0b10111100110001000011001100000101";
        ram[73] = "0b10111101001100011010111011111011";
        ram[74] = "0b10111100101000111111010101011100";
        ram[75] = "0b00111101011000101101100010111101";
        ram[76] = "0b10111100110100001010110001011000";
        ram[77] = "0b10111100000100100011101110100100";
        ram[78] = "0b10111100011010000001010001110001";
        ram[79] = "0b00111101000011111000001000011101";
        ram[80] = "0b10111100111110100001010010111111";
        ram[81] = "0b10111100110011011110101011011111";
        ram[82] = "0b00111101000001010110110011011000";
        ram[83] = "0b00111100111110010110101000111111";
        ram[84] = "0b10111011010110100011001110000011";
        ram[85] = "0b00111101010010000100111001011100";
        ram[86] = "0b10111101001111001000101111011101";
        ram[87] = "0b10111100101001001001010001100111";
        ram[88] = "0b10111100100001111110001100101101";
        ram[89] = "0b10111100101011110000010010011010";
        ram[90] = "0b00111011010010001110010110000010";
        ram[91] = "0b10111100111110000110110001100011";
        ram[92] = "0b10111010100111111011001100101101";
        ram[93] = "0b00111100001010111000010001001001";
        ram[94] = "0b00111100111101000001000110011011";
        ram[95] = "0b00111101001110001000011111011010";
        ram[96] = "0b00111100111101001000001100100000";
        ram[97] = "0b00111100110000100000001110111101";
        ram[98] = "0b00111101010010100111111100001101";
        ram[99] = "0b10111101000010101011001100010100";
        ram[100] = "0b00111100100110101111111001000010";
        ram[101] = "0b00111100111111110101111001110000";
        ram[102] = "0b10111001101100000001101110001100";
        ram[103] = "0b00111100110100001110001101100110";
        ram[104] = "0b10111100000011000011110011111110";
        ram[105] = "0b10111100100011110000000110110001";
        ram[106] = "0b10111100010110111001001101011110";
        ram[107] = "0b00111101000000010101110011000000";
        ram[108] = "0b00111101000110111011011000101100";
        ram[109] = "0b00111100101010001010110001110100";
        ram[110] = "0b10111101010000110010000000010010";
        ram[111] = "0b10111011010001101101000111101101";
        ram[112] = "0b10111011010100100011101101001111";
        ram[113] = "0b10111100111001001000100100101100";
        ram[114] = "0b00111100111011110000101011011010";
        ram[115] = "0b10111101001001101110010100000101";
        ram[116] = "0b10111101000111111000101100011001";
        ram[117] = "0b10111100101100101010111011011111";
        ram[118] = "0b10111100000000100001100100001100";
        ram[119] = "0b00111100101101010101101010010101";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(lenet5_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fc1_bias_ROM_AUTO_1R) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 120;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


lenet5_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fc1_bias_ROM_AUTO_1R_ram* meminst;


SC_CTOR(lenet5_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fc1_bias_ROM_AUTO_1R) {
meminst = new lenet5_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fc1_bias_ROM_AUTO_1R_ram("lenet5_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fc1_bias_ROM_AUTO_1R_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~lenet5_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fc1_bias_ROM_AUTO_1R() {
    delete meminst;
}


};//endmodule
#endif
