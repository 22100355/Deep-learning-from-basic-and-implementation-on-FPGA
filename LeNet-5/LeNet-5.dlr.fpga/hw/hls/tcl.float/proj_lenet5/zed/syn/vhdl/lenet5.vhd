-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity lenet5 is
generic (
    C_M_AXI_DATA_ADDR_WIDTH : INTEGER := 32;
    C_M_AXI_DATA_ID_WIDTH : INTEGER := 1;
    C_M_AXI_DATA_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_DATA_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_DATA_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_DATA_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_DATA_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_DATA_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 5;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_DATA_USER_VALUE : INTEGER := 0;
    C_M_AXI_DATA_PROT_VALUE : INTEGER := 0;
    C_M_AXI_DATA_CACHE_VALUE : INTEGER := 3 );
port (
    ap_local_block : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_data_AWVALID : OUT STD_LOGIC;
    m_axi_data_AWREADY : IN STD_LOGIC;
    m_axi_data_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_ADDR_WIDTH-1 downto 0);
    m_axi_data_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_ID_WIDTH-1 downto 0);
    m_axi_data_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_data_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_data_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_data_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_data_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_data_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_data_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_data_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_data_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_AWUSER_WIDTH-1 downto 0);
    m_axi_data_WVALID : OUT STD_LOGIC;
    m_axi_data_WREADY : IN STD_LOGIC;
    m_axi_data_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_DATA_WIDTH-1 downto 0);
    m_axi_data_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_DATA_WIDTH/8-1 downto 0);
    m_axi_data_WLAST : OUT STD_LOGIC;
    m_axi_data_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_ID_WIDTH-1 downto 0);
    m_axi_data_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WUSER_WIDTH-1 downto 0);
    m_axi_data_ARVALID : OUT STD_LOGIC;
    m_axi_data_ARREADY : IN STD_LOGIC;
    m_axi_data_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_ADDR_WIDTH-1 downto 0);
    m_axi_data_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_ID_WIDTH-1 downto 0);
    m_axi_data_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_data_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_data_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_data_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_data_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_data_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_data_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_data_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_data_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_ARUSER_WIDTH-1 downto 0);
    m_axi_data_RVALID : IN STD_LOGIC;
    m_axi_data_RREADY : OUT STD_LOGIC;
    m_axi_data_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_DATA_WIDTH-1 downto 0);
    m_axi_data_RLAST : IN STD_LOGIC;
    m_axi_data_RID : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_ID_WIDTH-1 downto 0);
    m_axi_data_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_RUSER_WIDTH-1 downto 0);
    m_axi_data_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_data_BVALID : IN STD_LOGIC;
    m_axi_data_BREADY : OUT STD_LOGIC;
    m_axi_data_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_data_BID : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_ID_WIDTH-1 downto 0);
    m_axi_data_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_BUSER_WIDTH-1 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of lenet5 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "lenet5_lenet5,hls_ip_2021_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.566700,HLS_SYN_LAT=501432,HLS_SYN_TPT=none,HLS_SYN_MEM=423,HLS_SYN_DSP=0,HLS_SYN_FF=17856,HLS_SYN_LUT=21561,HLS_VERSION=2021_2}";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (18 downto 0) := "0000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (18 downto 0) := "0000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (18 downto 0) := "0000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (18 downto 0) := "0000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (18 downto 0) := "0000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (18 downto 0) := "0000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (18 downto 0) := "0001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (18 downto 0) := "0010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (18 downto 0) := "0100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (18 downto 0) := "1000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";

    signal ap_local_deadlock : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal classes : STD_LOGIC_VECTOR (31 downto 0);
    signal image_r : STD_LOGIC_VECTOR (31 downto 0);
    signal data_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal data_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal image_r_read_reg_220 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1_reg_225 : STD_LOGIC_VECTOR (29 downto 0);
    signal p1_out_data_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal p1_out_data_ce0 : STD_LOGIC;
    signal p1_out_data_we0 : STD_LOGIC;
    signal p1_out_data_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p1_out_data_ce1 : STD_LOGIC;
    signal p1_out_data_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p1_out_data_ce2 : STD_LOGIC;
    signal p1_out_data_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p1_out_data_ce3 : STD_LOGIC;
    signal p1_out_data_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p1_out_data_ce4 : STD_LOGIC;
    signal p1_out_data_q4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p1_out_data_ce5 : STD_LOGIC;
    signal p1_out_data_q5 : STD_LOGIC_VECTOR (31 downto 0);
    signal p1_out_data_ce6 : STD_LOGIC;
    signal p1_out_data_q6 : STD_LOGIC_VECTOR (31 downto 0);
    signal p1_out_data_ce7 : STD_LOGIC;
    signal p1_out_data_q7 : STD_LOGIC_VECTOR (31 downto 0);
    signal p1_out_data_ce8 : STD_LOGIC;
    signal p1_out_data_q8 : STD_LOGIC_VECTOR (31 downto 0);
    signal p1_out_data_ce9 : STD_LOGIC;
    signal p1_out_data_q9 : STD_LOGIC_VECTOR (31 downto 0);
    signal p1_out_data_ce10 : STD_LOGIC;
    signal p1_out_data_q10 : STD_LOGIC_VECTOR (31 downto 0);
    signal p1_out_data_ce11 : STD_LOGIC;
    signal p1_out_data_q11 : STD_LOGIC_VECTOR (31 downto 0);
    signal p1_out_data_ce12 : STD_LOGIC;
    signal p1_out_data_q12 : STD_LOGIC_VECTOR (31 downto 0);
    signal c1_out_data_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal c1_out_data_ce0 : STD_LOGIC;
    signal c1_out_data_we0 : STD_LOGIC;
    signal c1_out_data_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal c1_out_data_ce1 : STD_LOGIC;
    signal c1_out_data_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal c1_out_data_ce2 : STD_LOGIC;
    signal c1_out_data_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal c1_out_data_ce3 : STD_LOGIC;
    signal c1_out_data_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal c2_out_data_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal c2_out_data_ce0 : STD_LOGIC;
    signal c2_out_data_we0 : STD_LOGIC;
    signal c2_out_data_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal c2_out_data_ce1 : STD_LOGIC;
    signal c2_out_data_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal c2_out_data_ce2 : STD_LOGIC;
    signal c2_out_data_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal c2_out_data_ce3 : STD_LOGIC;
    signal c2_out_data_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p2_out_data_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal p2_out_data_ce0 : STD_LOGIC;
    signal p2_out_data_we0 : STD_LOGIC;
    signal p2_out_data_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal f1_out_data_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal f1_out_data_ce0 : STD_LOGIC;
    signal f1_out_data_we0 : STD_LOGIC;
    signal f1_out_data_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal f2_out_data_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal f2_out_data_ce0 : STD_LOGIC;
    signal f2_out_data_we0 : STD_LOGIC;
    signal f2_out_data_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Convolution2d_float_s_fu_132_ap_start : STD_LOGIC;
    signal grp_Convolution2d_float_s_fu_132_ap_done : STD_LOGIC;
    signal grp_Convolution2d_float_s_fu_132_ap_idle : STD_LOGIC;
    signal grp_Convolution2d_float_s_fu_132_ap_ready : STD_LOGIC;
    signal grp_Convolution2d_float_s_fu_132_out_data_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_Convolution2d_float_s_fu_132_out_data_ce0 : STD_LOGIC;
    signal grp_Convolution2d_float_s_fu_132_out_data_we0 : STD_LOGIC;
    signal grp_Convolution2d_float_s_fu_132_out_data_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Convolution2d_float_s_fu_132_m_axi_data_AWVALID : STD_LOGIC;
    signal grp_Convolution2d_float_s_fu_132_m_axi_data_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Convolution2d_float_s_fu_132_m_axi_data_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Convolution2d_float_s_fu_132_m_axi_data_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Convolution2d_float_s_fu_132_m_axi_data_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Convolution2d_float_s_fu_132_m_axi_data_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Convolution2d_float_s_fu_132_m_axi_data_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Convolution2d_float_s_fu_132_m_axi_data_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Convolution2d_float_s_fu_132_m_axi_data_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Convolution2d_float_s_fu_132_m_axi_data_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Convolution2d_float_s_fu_132_m_axi_data_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Convolution2d_float_s_fu_132_m_axi_data_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Convolution2d_float_s_fu_132_m_axi_data_WVALID : STD_LOGIC;
    signal grp_Convolution2d_float_s_fu_132_m_axi_data_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Convolution2d_float_s_fu_132_m_axi_data_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Convolution2d_float_s_fu_132_m_axi_data_WLAST : STD_LOGIC;
    signal grp_Convolution2d_float_s_fu_132_m_axi_data_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Convolution2d_float_s_fu_132_m_axi_data_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Convolution2d_float_s_fu_132_m_axi_data_ARVALID : STD_LOGIC;
    signal grp_Convolution2d_float_s_fu_132_m_axi_data_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Convolution2d_float_s_fu_132_m_axi_data_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Convolution2d_float_s_fu_132_m_axi_data_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Convolution2d_float_s_fu_132_m_axi_data_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Convolution2d_float_s_fu_132_m_axi_data_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Convolution2d_float_s_fu_132_m_axi_data_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Convolution2d_float_s_fu_132_m_axi_data_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Convolution2d_float_s_fu_132_m_axi_data_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Convolution2d_float_s_fu_132_m_axi_data_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Convolution2d_float_s_fu_132_m_axi_data_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Convolution2d_float_s_fu_132_m_axi_data_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Convolution2d_float_s_fu_132_m_axi_data_RREADY : STD_LOGIC;
    signal grp_Convolution2d_float_s_fu_132_m_axi_data_BREADY : STD_LOGIC;
    signal grp_Convolution2d_float_s_fu_132_grp_fu_236_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Convolution2d_float_s_fu_132_grp_fu_236_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Convolution2d_float_s_fu_132_grp_fu_236_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Convolution2d_float_s_fu_132_grp_fu_236_p_ce : STD_LOGIC;
    signal grp_Convolution2d_float_s_fu_132_grp_fu_240_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Convolution2d_float_s_fu_132_grp_fu_240_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Convolution2d_float_s_fu_132_grp_fu_240_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Convolution2d_float_s_fu_132_grp_fu_240_p_ce : STD_LOGIC;
    signal grp_Convolution2d_float_s_fu_132_grp_fu_244_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Convolution2d_float_s_fu_132_grp_fu_244_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Convolution2d_float_s_fu_132_grp_fu_244_p_ce : STD_LOGIC;
    signal grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_ap_start : STD_LOGIC;
    signal grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_ap_done : STD_LOGIC;
    signal grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_ap_idle : STD_LOGIC;
    signal grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_ap_ready : STD_LOGIC;
    signal grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_p1_out_data_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_p1_out_data_ce0 : STD_LOGIC;
    signal grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_p1_out_data_we0 : STD_LOGIC;
    signal grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_p1_out_data_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_in_data_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_in_data_ce0 : STD_LOGIC;
    signal grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_in_data_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_in_data_ce1 : STD_LOGIC;
    signal grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_in_data_address2 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_in_data_ce2 : STD_LOGIC;
    signal grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_in_data_address3 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_in_data_ce3 : STD_LOGIC;
    signal grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_248_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_248_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_248_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_248_p_ce : STD_LOGIC;
    signal grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_252_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_252_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_252_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_252_p_ce : STD_LOGIC;
    signal grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_256_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_256_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_256_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_256_p_ce : STD_LOGIC;
    signal grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_260_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_260_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_260_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_260_p_ce : STD_LOGIC;
    signal grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_264_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_264_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_264_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_264_p_ce : STD_LOGIC;
    signal grp_Convolution2d_float_1_fu_152_ap_start : STD_LOGIC;
    signal grp_Convolution2d_float_1_fu_152_ap_done : STD_LOGIC;
    signal grp_Convolution2d_float_1_fu_152_ap_idle : STD_LOGIC;
    signal grp_Convolution2d_float_1_fu_152_ap_ready : STD_LOGIC;
    signal grp_Convolution2d_float_1_fu_152_out_data_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_Convolution2d_float_1_fu_152_out_data_ce0 : STD_LOGIC;
    signal grp_Convolution2d_float_1_fu_152_out_data_we0 : STD_LOGIC;
    signal grp_Convolution2d_float_1_fu_152_out_data_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Convolution2d_float_1_fu_152_p1_out_data_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_Convolution2d_float_1_fu_152_p1_out_data_ce0 : STD_LOGIC;
    signal grp_Convolution2d_float_1_fu_152_p1_out_data_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_Convolution2d_float_1_fu_152_p1_out_data_ce1 : STD_LOGIC;
    signal grp_Convolution2d_float_1_fu_152_p1_out_data_address2 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_Convolution2d_float_1_fu_152_p1_out_data_ce2 : STD_LOGIC;
    signal grp_Convolution2d_float_1_fu_152_p1_out_data_address3 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_Convolution2d_float_1_fu_152_p1_out_data_ce3 : STD_LOGIC;
    signal grp_Convolution2d_float_1_fu_152_p1_out_data_address4 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_Convolution2d_float_1_fu_152_p1_out_data_ce4 : STD_LOGIC;
    signal grp_Convolution2d_float_1_fu_152_p1_out_data_address5 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_Convolution2d_float_1_fu_152_p1_out_data_ce5 : STD_LOGIC;
    signal grp_Convolution2d_float_1_fu_152_p1_out_data_address6 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_Convolution2d_float_1_fu_152_p1_out_data_ce6 : STD_LOGIC;
    signal grp_Convolution2d_float_1_fu_152_p1_out_data_address7 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_Convolution2d_float_1_fu_152_p1_out_data_ce7 : STD_LOGIC;
    signal grp_Convolution2d_float_1_fu_152_p1_out_data_address8 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_Convolution2d_float_1_fu_152_p1_out_data_ce8 : STD_LOGIC;
    signal grp_Convolution2d_float_1_fu_152_p1_out_data_address9 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_Convolution2d_float_1_fu_152_p1_out_data_ce9 : STD_LOGIC;
    signal grp_Convolution2d_float_1_fu_152_p1_out_data_address10 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_Convolution2d_float_1_fu_152_p1_out_data_ce10 : STD_LOGIC;
    signal grp_Convolution2d_float_1_fu_152_p1_out_data_address11 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_Convolution2d_float_1_fu_152_p1_out_data_ce11 : STD_LOGIC;
    signal grp_Convolution2d_float_1_fu_152_p1_out_data_address12 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_Convolution2d_float_1_fu_152_p1_out_data_ce12 : STD_LOGIC;
    signal grp_Convolution2d_float_1_fu_152_grp_fu_236_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Convolution2d_float_1_fu_152_grp_fu_236_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Convolution2d_float_1_fu_152_grp_fu_236_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Convolution2d_float_1_fu_152_grp_fu_236_p_ce : STD_LOGIC;
    signal grp_Convolution2d_float_1_fu_152_grp_fu_240_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Convolution2d_float_1_fu_152_grp_fu_240_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Convolution2d_float_1_fu_152_grp_fu_240_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Convolution2d_float_1_fu_152_grp_fu_240_p_ce : STD_LOGIC;
    signal grp_Convolution2d_float_1_fu_152_grp_fu_244_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Convolution2d_float_1_fu_152_grp_fu_244_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Convolution2d_float_1_fu_152_grp_fu_244_p_ce : STD_LOGIC;
    signal grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_ap_start : STD_LOGIC;
    signal grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_ap_done : STD_LOGIC;
    signal grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_ap_idle : STD_LOGIC;
    signal grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_ap_ready : STD_LOGIC;
    signal grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_out_data_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_out_data_ce0 : STD_LOGIC;
    signal grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_out_data_we0 : STD_LOGIC;
    signal grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_out_data_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_in_data_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_in_data_ce0 : STD_LOGIC;
    signal grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_in_data_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_in_data_ce1 : STD_LOGIC;
    signal grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_in_data_address2 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_in_data_ce2 : STD_LOGIC;
    signal grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_in_data_address3 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_in_data_ce3 : STD_LOGIC;
    signal grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_248_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_248_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_248_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_248_p_ce : STD_LOGIC;
    signal grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_252_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_252_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_252_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_252_p_ce : STD_LOGIC;
    signal grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_256_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_256_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_256_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_256_p_ce : STD_LOGIC;
    signal grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_260_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_260_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_260_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_260_p_ce : STD_LOGIC;
    signal grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_264_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_264_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_264_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_264_p_ce : STD_LOGIC;
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_ap_start : STD_LOGIC;
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_ap_done : STD_LOGIC;
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_ap_idle : STD_LOGIC;
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_ap_ready : STD_LOGIC;
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_p2_out_data_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_p2_out_data_ce0 : STD_LOGIC;
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_f1_out_data_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_f1_out_data_ce0 : STD_LOGIC;
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_f1_out_data_we0 : STD_LOGIC;
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_f1_out_data_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_grp_fu_236_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_grp_fu_236_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_grp_fu_236_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_grp_fu_236_p_ce : STD_LOGIC;
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_grp_fu_244_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_grp_fu_244_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_grp_fu_244_p_ce : STD_LOGIC;
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_grp_fu_248_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_grp_fu_248_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_grp_fu_248_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_grp_fu_248_p_ce : STD_LOGIC;
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_ap_start : STD_LOGIC;
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_ap_done : STD_LOGIC;
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_ap_idle : STD_LOGIC;
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_ap_ready : STD_LOGIC;
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_f1_out_data_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_f1_out_data_ce0 : STD_LOGIC;
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_f2_out_data_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_f2_out_data_ce0 : STD_LOGIC;
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_f2_out_data_we0 : STD_LOGIC;
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_f2_out_data_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_grp_fu_236_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_grp_fu_236_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_grp_fu_236_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_grp_fu_236_p_ce : STD_LOGIC;
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_grp_fu_244_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_grp_fu_244_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_grp_fu_244_p_ce : STD_LOGIC;
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_grp_fu_248_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_grp_fu_248_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_grp_fu_248_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_grp_fu_248_p_ce : STD_LOGIC;
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_ap_start : STD_LOGIC;
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_ap_done : STD_LOGIC;
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_ap_idle : STD_LOGIC;
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_ap_ready : STD_LOGIC;
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_AWVALID : STD_LOGIC;
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_WVALID : STD_LOGIC;
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_WLAST : STD_LOGIC;
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_ARVALID : STD_LOGIC;
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_RREADY : STD_LOGIC;
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_BREADY : STD_LOGIC;
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_f2_out_data_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_f2_out_data_ce0 : STD_LOGIC;
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_grp_fu_236_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_grp_fu_236_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_grp_fu_236_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_grp_fu_236_p_ce : STD_LOGIC;
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_grp_fu_244_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_grp_fu_244_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_grp_fu_244_p_ce : STD_LOGIC;
    signal data_AWVALID : STD_LOGIC;
    signal data_AWREADY : STD_LOGIC;
    signal data_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal data_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal data_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal data_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal data_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal data_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal data_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal data_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal data_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal data_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal data_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal data_WVALID : STD_LOGIC;
    signal data_WREADY : STD_LOGIC;
    signal data_ARVALID : STD_LOGIC;
    signal data_ARREADY : STD_LOGIC;
    signal data_RVALID : STD_LOGIC;
    signal data_RREADY : STD_LOGIC;
    signal data_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal data_RLAST : STD_LOGIC;
    signal data_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal data_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal data_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal data_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal data_BVALID : STD_LOGIC;
    signal data_BREADY : STD_LOGIC;
    signal data_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal data_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal data_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Convolution2d_float_s_fu_132_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_Convolution2d_float_1_fu_152_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal sext_ln64_fu_210_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_236_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_236_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_236_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_236_ce : STD_LOGIC;
    signal grp_fu_240_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_240_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_240_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_240_ce : STD_LOGIC;
    signal grp_fu_244_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_244_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_244_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_244_ce : STD_LOGIC;
    signal grp_fu_248_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_248_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_248_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_248_ce : STD_LOGIC;
    signal grp_fu_248_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_252_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_252_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_252_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_252_ce : STD_LOGIC;
    signal grp_fu_252_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_256_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_256_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_256_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_256_ce : STD_LOGIC;
    signal grp_fu_256_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_260_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_260_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_260_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_260_ce : STD_LOGIC;
    signal grp_fu_260_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_264_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_264_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_264_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_264_ce : STD_LOGIC;
    signal grp_fu_264_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component lenet5_Convolution2d_float_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        out_data_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        out_data_ce0 : OUT STD_LOGIC;
        out_data_we0 : OUT STD_LOGIC;
        out_data_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_data_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_data_AWVALID : OUT STD_LOGIC;
        m_axi_data_AWREADY : IN STD_LOGIC;
        m_axi_data_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_data_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_data_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_data_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_data_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_data_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_data_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_data_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_data_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_data_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_WVALID : OUT STD_LOGIC;
        m_axi_data_WREADY : IN STD_LOGIC;
        m_axi_data_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_data_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_data_WLAST : OUT STD_LOGIC;
        m_axi_data_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_ARVALID : OUT STD_LOGIC;
        m_axi_data_ARREADY : IN STD_LOGIC;
        m_axi_data_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_data_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_data_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_data_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_data_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_data_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_data_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_data_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_data_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_data_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_RVALID : IN STD_LOGIC;
        m_axi_data_RREADY : OUT STD_LOGIC;
        m_axi_data_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_data_RLAST : IN STD_LOGIC;
        m_axi_data_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_data_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_data_BVALID : IN STD_LOGIC;
        m_axi_data_BREADY : OUT STD_LOGIC;
        m_axi_data_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_data_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        in_data : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_236_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_236_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_236_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_236_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_236_p_ce : OUT STD_LOGIC;
        grp_fu_240_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_240_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_240_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_240_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_240_p_ce : OUT STD_LOGIC;
        grp_fu_244_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_244_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_244_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_244_p_ce : OUT STD_LOGIC );
    end component;


    component lenet5_Pooling2dMax_float_1_0_1036831949u_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p1_out_data_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        p1_out_data_ce0 : OUT STD_LOGIC;
        p1_out_data_we0 : OUT STD_LOGIC;
        p1_out_data_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        in_data_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        in_data_ce0 : OUT STD_LOGIC;
        in_data_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        in_data_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
        in_data_ce1 : OUT STD_LOGIC;
        in_data_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        in_data_address2 : OUT STD_LOGIC_VECTOR (12 downto 0);
        in_data_ce2 : OUT STD_LOGIC;
        in_data_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        in_data_address3 : OUT STD_LOGIC_VECTOR (12 downto 0);
        in_data_ce3 : OUT STD_LOGIC;
        in_data_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_248_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_248_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_248_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_248_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_248_p_ce : OUT STD_LOGIC;
        grp_fu_252_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_252_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_252_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_252_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_252_p_ce : OUT STD_LOGIC;
        grp_fu_256_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_256_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_256_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_256_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_256_p_ce : OUT STD_LOGIC;
        grp_fu_260_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_260_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_260_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_260_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_260_p_ce : OUT STD_LOGIC;
        grp_fu_264_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_264_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_264_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_264_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_264_p_ce : OUT STD_LOGIC );
    end component;


    component lenet5_Convolution2d_float_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        out_data_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        out_data_ce0 : OUT STD_LOGIC;
        out_data_we0 : OUT STD_LOGIC;
        out_data_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_data_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        p1_out_data_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        p1_out_data_ce0 : OUT STD_LOGIC;
        p1_out_data_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        p1_out_data_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        p1_out_data_ce1 : OUT STD_LOGIC;
        p1_out_data_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        p1_out_data_address2 : OUT STD_LOGIC_VECTOR (10 downto 0);
        p1_out_data_ce2 : OUT STD_LOGIC;
        p1_out_data_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        p1_out_data_address3 : OUT STD_LOGIC_VECTOR (10 downto 0);
        p1_out_data_ce3 : OUT STD_LOGIC;
        p1_out_data_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        p1_out_data_address4 : OUT STD_LOGIC_VECTOR (10 downto 0);
        p1_out_data_ce4 : OUT STD_LOGIC;
        p1_out_data_q4 : IN STD_LOGIC_VECTOR (31 downto 0);
        p1_out_data_address5 : OUT STD_LOGIC_VECTOR (10 downto 0);
        p1_out_data_ce5 : OUT STD_LOGIC;
        p1_out_data_q5 : IN STD_LOGIC_VECTOR (31 downto 0);
        p1_out_data_address6 : OUT STD_LOGIC_VECTOR (10 downto 0);
        p1_out_data_ce6 : OUT STD_LOGIC;
        p1_out_data_q6 : IN STD_LOGIC_VECTOR (31 downto 0);
        p1_out_data_address7 : OUT STD_LOGIC_VECTOR (10 downto 0);
        p1_out_data_ce7 : OUT STD_LOGIC;
        p1_out_data_q7 : IN STD_LOGIC_VECTOR (31 downto 0);
        p1_out_data_address8 : OUT STD_LOGIC_VECTOR (10 downto 0);
        p1_out_data_ce8 : OUT STD_LOGIC;
        p1_out_data_q8 : IN STD_LOGIC_VECTOR (31 downto 0);
        p1_out_data_address9 : OUT STD_LOGIC_VECTOR (10 downto 0);
        p1_out_data_ce9 : OUT STD_LOGIC;
        p1_out_data_q9 : IN STD_LOGIC_VECTOR (31 downto 0);
        p1_out_data_address10 : OUT STD_LOGIC_VECTOR (10 downto 0);
        p1_out_data_ce10 : OUT STD_LOGIC;
        p1_out_data_q10 : IN STD_LOGIC_VECTOR (31 downto 0);
        p1_out_data_address11 : OUT STD_LOGIC_VECTOR (10 downto 0);
        p1_out_data_ce11 : OUT STD_LOGIC;
        p1_out_data_q11 : IN STD_LOGIC_VECTOR (31 downto 0);
        p1_out_data_address12 : OUT STD_LOGIC_VECTOR (10 downto 0);
        p1_out_data_ce12 : OUT STD_LOGIC;
        p1_out_data_q12 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_236_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_236_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_236_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_236_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_236_p_ce : OUT STD_LOGIC;
        grp_fu_240_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_240_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_240_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_240_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_240_p_ce : OUT STD_LOGIC;
        grp_fu_244_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_244_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_244_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_244_p_ce : OUT STD_LOGIC );
    end component;


    component lenet5_Pooling2dMax_float_1_0_1036831949u_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        out_data_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        out_data_ce0 : OUT STD_LOGIC;
        out_data_we0 : OUT STD_LOGIC;
        out_data_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        in_data_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        in_data_ce0 : OUT STD_LOGIC;
        in_data_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        in_data_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        in_data_ce1 : OUT STD_LOGIC;
        in_data_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        in_data_address2 : OUT STD_LOGIC_VECTOR (10 downto 0);
        in_data_ce2 : OUT STD_LOGIC;
        in_data_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        in_data_address3 : OUT STD_LOGIC_VECTOR (10 downto 0);
        in_data_ce3 : OUT STD_LOGIC;
        in_data_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_248_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_248_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_248_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_248_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_248_p_ce : OUT STD_LOGIC;
        grp_fu_252_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_252_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_252_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_252_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_252_p_ce : OUT STD_LOGIC;
        grp_fu_256_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_256_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_256_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_256_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_256_p_ce : OUT STD_LOGIC;
        grp_fu_260_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_260_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_260_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_260_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_260_p_ce : OUT STD_LOGIC;
        grp_fu_264_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_264_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_264_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_264_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_264_p_ce : OUT STD_LOGIC );
    end component;


    component lenet5_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p2_out_data_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        p2_out_data_ce0 : OUT STD_LOGIC;
        p2_out_data_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        f1_out_data_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        f1_out_data_ce0 : OUT STD_LOGIC;
        f1_out_data_we0 : OUT STD_LOGIC;
        f1_out_data_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_236_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_236_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_236_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_236_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_236_p_ce : OUT STD_LOGIC;
        grp_fu_244_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_244_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_244_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_244_p_ce : OUT STD_LOGIC;
        grp_fu_248_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_248_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_248_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_248_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_248_p_ce : OUT STD_LOGIC );
    end component;


    component lenet5_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        f1_out_data_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        f1_out_data_ce0 : OUT STD_LOGIC;
        f1_out_data_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        f2_out_data_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        f2_out_data_ce0 : OUT STD_LOGIC;
        f2_out_data_we0 : OUT STD_LOGIC;
        f2_out_data_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_236_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_236_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_236_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_236_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_236_p_ce : OUT STD_LOGIC;
        grp_fu_244_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_244_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_244_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_244_p_ce : OUT STD_LOGIC;
        grp_fu_248_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_248_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_248_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_248_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_248_p_ce : OUT STD_LOGIC );
    end component;


    component lenet5_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_data_AWVALID : OUT STD_LOGIC;
        m_axi_data_AWREADY : IN STD_LOGIC;
        m_axi_data_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_data_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_data_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_data_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_data_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_data_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_data_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_data_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_data_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_data_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_WVALID : OUT STD_LOGIC;
        m_axi_data_WREADY : IN STD_LOGIC;
        m_axi_data_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_data_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_data_WLAST : OUT STD_LOGIC;
        m_axi_data_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_ARVALID : OUT STD_LOGIC;
        m_axi_data_ARREADY : IN STD_LOGIC;
        m_axi_data_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_data_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_data_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_data_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_data_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_data_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_data_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_data_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_data_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_data_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_RVALID : IN STD_LOGIC;
        m_axi_data_RREADY : OUT STD_LOGIC;
        m_axi_data_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_data_RLAST : IN STD_LOGIC;
        m_axi_data_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_data_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_data_BVALID : IN STD_LOGIC;
        m_axi_data_BREADY : OUT STD_LOGIC;
        m_axi_data_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_data_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln64 : IN STD_LOGIC_VECTOR (29 downto 0);
        f2_out_data_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        f2_out_data_ce0 : OUT STD_LOGIC;
        f2_out_data_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_236_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_236_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_236_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_236_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_236_p_ce : OUT STD_LOGIC;
        grp_fu_244_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_244_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_244_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_244_p_ce : OUT STD_LOGIC );
    end component;


    component lenet5_fadd_32ns_32ns_32_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component lenet5_fmul_32ns_32ns_32_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component lenet5_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component lenet5_p1_out_data_RAM_1WNR_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address2 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address3 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address4 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce4 : IN STD_LOGIC;
        q4 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address5 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce5 : IN STD_LOGIC;
        q5 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address6 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce6 : IN STD_LOGIC;
        q6 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address7 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce7 : IN STD_LOGIC;
        q7 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address8 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce8 : IN STD_LOGIC;
        q8 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address9 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce9 : IN STD_LOGIC;
        q9 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address10 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce10 : IN STD_LOGIC;
        q10 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address11 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce11 : IN STD_LOGIC;
        q11 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address12 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce12 : IN STD_LOGIC;
        q12 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component lenet5_c1_out_data_RAM_1WNR_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address2 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address3 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component lenet5_c2_out_data_RAM_1WNR_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address2 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address3 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component lenet5_p2_out_data_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component lenet5_f1_out_data_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component lenet5_f2_out_data_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component lenet5_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        classes : OUT STD_LOGIC_VECTOR (31 downto 0);
        image_r : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        ap_local_deadlock : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component lenet5_data_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    p1_out_data_U : component lenet5_p1_out_data_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1176,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => p1_out_data_address0,
        ce0 => p1_out_data_ce0,
        we0 => p1_out_data_we0,
        d0 => grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_p1_out_data_d0,
        q0 => p1_out_data_q0,
        address1 => grp_Convolution2d_float_1_fu_152_p1_out_data_address1,
        ce1 => p1_out_data_ce1,
        q1 => p1_out_data_q1,
        address2 => grp_Convolution2d_float_1_fu_152_p1_out_data_address2,
        ce2 => p1_out_data_ce2,
        q2 => p1_out_data_q2,
        address3 => grp_Convolution2d_float_1_fu_152_p1_out_data_address3,
        ce3 => p1_out_data_ce3,
        q3 => p1_out_data_q3,
        address4 => grp_Convolution2d_float_1_fu_152_p1_out_data_address4,
        ce4 => p1_out_data_ce4,
        q4 => p1_out_data_q4,
        address5 => grp_Convolution2d_float_1_fu_152_p1_out_data_address5,
        ce5 => p1_out_data_ce5,
        q5 => p1_out_data_q5,
        address6 => grp_Convolution2d_float_1_fu_152_p1_out_data_address6,
        ce6 => p1_out_data_ce6,
        q6 => p1_out_data_q6,
        address7 => grp_Convolution2d_float_1_fu_152_p1_out_data_address7,
        ce7 => p1_out_data_ce7,
        q7 => p1_out_data_q7,
        address8 => grp_Convolution2d_float_1_fu_152_p1_out_data_address8,
        ce8 => p1_out_data_ce8,
        q8 => p1_out_data_q8,
        address9 => grp_Convolution2d_float_1_fu_152_p1_out_data_address9,
        ce9 => p1_out_data_ce9,
        q9 => p1_out_data_q9,
        address10 => grp_Convolution2d_float_1_fu_152_p1_out_data_address10,
        ce10 => p1_out_data_ce10,
        q10 => p1_out_data_q10,
        address11 => grp_Convolution2d_float_1_fu_152_p1_out_data_address11,
        ce11 => p1_out_data_ce11,
        q11 => p1_out_data_q11,
        address12 => grp_Convolution2d_float_1_fu_152_p1_out_data_address12,
        ce12 => p1_out_data_ce12,
        q12 => p1_out_data_q12);

    c1_out_data_U : component lenet5_c1_out_data_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4704,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => c1_out_data_address0,
        ce0 => c1_out_data_ce0,
        we0 => c1_out_data_we0,
        d0 => grp_Convolution2d_float_s_fu_132_out_data_d0,
        q0 => c1_out_data_q0,
        address1 => grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_in_data_address1,
        ce1 => c1_out_data_ce1,
        q1 => c1_out_data_q1,
        address2 => grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_in_data_address2,
        ce2 => c1_out_data_ce2,
        q2 => c1_out_data_q2,
        address3 => grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_in_data_address3,
        ce3 => c1_out_data_ce3,
        q3 => c1_out_data_q3);

    c2_out_data_U : component lenet5_c2_out_data_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1600,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => c2_out_data_address0,
        ce0 => c2_out_data_ce0,
        we0 => c2_out_data_we0,
        d0 => grp_Convolution2d_float_1_fu_152_out_data_d0,
        q0 => c2_out_data_q0,
        address1 => grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_in_data_address1,
        ce1 => c2_out_data_ce1,
        q1 => c2_out_data_q1,
        address2 => grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_in_data_address2,
        ce2 => c2_out_data_ce2,
        q2 => c2_out_data_q2,
        address3 => grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_in_data_address3,
        ce3 => c2_out_data_ce3,
        q3 => c2_out_data_q3);

    p2_out_data_U : component lenet5_p2_out_data_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 400,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => p2_out_data_address0,
        ce0 => p2_out_data_ce0,
        we0 => p2_out_data_we0,
        d0 => grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_out_data_d0,
        q0 => p2_out_data_q0);

    f1_out_data_U : component lenet5_f1_out_data_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 120,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => f1_out_data_address0,
        ce0 => f1_out_data_ce0,
        we0 => f1_out_data_we0,
        d0 => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_f1_out_data_d0,
        q0 => f1_out_data_q0);

    f2_out_data_U : component lenet5_f2_out_data_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 84,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => f2_out_data_address0,
        ce0 => f2_out_data_ce0,
        we0 => f2_out_data_we0,
        d0 => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_f2_out_data_d0,
        q0 => f2_out_data_q0);

    grp_Convolution2d_float_s_fu_132 : component lenet5_Convolution2d_float_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_Convolution2d_float_s_fu_132_ap_start,
        ap_done => grp_Convolution2d_float_s_fu_132_ap_done,
        ap_idle => grp_Convolution2d_float_s_fu_132_ap_idle,
        ap_ready => grp_Convolution2d_float_s_fu_132_ap_ready,
        out_data_address0 => grp_Convolution2d_float_s_fu_132_out_data_address0,
        out_data_ce0 => grp_Convolution2d_float_s_fu_132_out_data_ce0,
        out_data_we0 => grp_Convolution2d_float_s_fu_132_out_data_we0,
        out_data_d0 => grp_Convolution2d_float_s_fu_132_out_data_d0,
        out_data_q0 => c1_out_data_q0,
        m_axi_data_AWVALID => grp_Convolution2d_float_s_fu_132_m_axi_data_AWVALID,
        m_axi_data_AWREADY => ap_const_logic_0,
        m_axi_data_AWADDR => grp_Convolution2d_float_s_fu_132_m_axi_data_AWADDR,
        m_axi_data_AWID => grp_Convolution2d_float_s_fu_132_m_axi_data_AWID,
        m_axi_data_AWLEN => grp_Convolution2d_float_s_fu_132_m_axi_data_AWLEN,
        m_axi_data_AWSIZE => grp_Convolution2d_float_s_fu_132_m_axi_data_AWSIZE,
        m_axi_data_AWBURST => grp_Convolution2d_float_s_fu_132_m_axi_data_AWBURST,
        m_axi_data_AWLOCK => grp_Convolution2d_float_s_fu_132_m_axi_data_AWLOCK,
        m_axi_data_AWCACHE => grp_Convolution2d_float_s_fu_132_m_axi_data_AWCACHE,
        m_axi_data_AWPROT => grp_Convolution2d_float_s_fu_132_m_axi_data_AWPROT,
        m_axi_data_AWQOS => grp_Convolution2d_float_s_fu_132_m_axi_data_AWQOS,
        m_axi_data_AWREGION => grp_Convolution2d_float_s_fu_132_m_axi_data_AWREGION,
        m_axi_data_AWUSER => grp_Convolution2d_float_s_fu_132_m_axi_data_AWUSER,
        m_axi_data_WVALID => grp_Convolution2d_float_s_fu_132_m_axi_data_WVALID,
        m_axi_data_WREADY => ap_const_logic_0,
        m_axi_data_WDATA => grp_Convolution2d_float_s_fu_132_m_axi_data_WDATA,
        m_axi_data_WSTRB => grp_Convolution2d_float_s_fu_132_m_axi_data_WSTRB,
        m_axi_data_WLAST => grp_Convolution2d_float_s_fu_132_m_axi_data_WLAST,
        m_axi_data_WID => grp_Convolution2d_float_s_fu_132_m_axi_data_WID,
        m_axi_data_WUSER => grp_Convolution2d_float_s_fu_132_m_axi_data_WUSER,
        m_axi_data_ARVALID => grp_Convolution2d_float_s_fu_132_m_axi_data_ARVALID,
        m_axi_data_ARREADY => data_ARREADY,
        m_axi_data_ARADDR => grp_Convolution2d_float_s_fu_132_m_axi_data_ARADDR,
        m_axi_data_ARID => grp_Convolution2d_float_s_fu_132_m_axi_data_ARID,
        m_axi_data_ARLEN => grp_Convolution2d_float_s_fu_132_m_axi_data_ARLEN,
        m_axi_data_ARSIZE => grp_Convolution2d_float_s_fu_132_m_axi_data_ARSIZE,
        m_axi_data_ARBURST => grp_Convolution2d_float_s_fu_132_m_axi_data_ARBURST,
        m_axi_data_ARLOCK => grp_Convolution2d_float_s_fu_132_m_axi_data_ARLOCK,
        m_axi_data_ARCACHE => grp_Convolution2d_float_s_fu_132_m_axi_data_ARCACHE,
        m_axi_data_ARPROT => grp_Convolution2d_float_s_fu_132_m_axi_data_ARPROT,
        m_axi_data_ARQOS => grp_Convolution2d_float_s_fu_132_m_axi_data_ARQOS,
        m_axi_data_ARREGION => grp_Convolution2d_float_s_fu_132_m_axi_data_ARREGION,
        m_axi_data_ARUSER => grp_Convolution2d_float_s_fu_132_m_axi_data_ARUSER,
        m_axi_data_RVALID => data_RVALID,
        m_axi_data_RREADY => grp_Convolution2d_float_s_fu_132_m_axi_data_RREADY,
        m_axi_data_RDATA => data_RDATA,
        m_axi_data_RLAST => data_RLAST,
        m_axi_data_RID => data_RID,
        m_axi_data_RFIFONUM => data_RFIFONUM,
        m_axi_data_RUSER => data_RUSER,
        m_axi_data_RRESP => data_RRESP,
        m_axi_data_BVALID => ap_const_logic_0,
        m_axi_data_BREADY => grp_Convolution2d_float_s_fu_132_m_axi_data_BREADY,
        m_axi_data_BRESP => ap_const_lv2_0,
        m_axi_data_BID => ap_const_lv1_0,
        m_axi_data_BUSER => ap_const_lv1_0,
        in_data => image_r_read_reg_220,
        grp_fu_236_p_din0 => grp_Convolution2d_float_s_fu_132_grp_fu_236_p_din0,
        grp_fu_236_p_din1 => grp_Convolution2d_float_s_fu_132_grp_fu_236_p_din1,
        grp_fu_236_p_opcode => grp_Convolution2d_float_s_fu_132_grp_fu_236_p_opcode,
        grp_fu_236_p_dout0 => grp_fu_236_p2,
        grp_fu_236_p_ce => grp_Convolution2d_float_s_fu_132_grp_fu_236_p_ce,
        grp_fu_240_p_din0 => grp_Convolution2d_float_s_fu_132_grp_fu_240_p_din0,
        grp_fu_240_p_din1 => grp_Convolution2d_float_s_fu_132_grp_fu_240_p_din1,
        grp_fu_240_p_opcode => grp_Convolution2d_float_s_fu_132_grp_fu_240_p_opcode,
        grp_fu_240_p_dout0 => grp_fu_240_p2,
        grp_fu_240_p_ce => grp_Convolution2d_float_s_fu_132_grp_fu_240_p_ce,
        grp_fu_244_p_din0 => grp_Convolution2d_float_s_fu_132_grp_fu_244_p_din0,
        grp_fu_244_p_din1 => grp_Convolution2d_float_s_fu_132_grp_fu_244_p_din1,
        grp_fu_244_p_dout0 => grp_fu_244_p2,
        grp_fu_244_p_ce => grp_Convolution2d_float_s_fu_132_grp_fu_244_p_ce);

    grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146 : component lenet5_Pooling2dMax_float_1_0_1036831949u_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_ap_start,
        ap_done => grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_ap_done,
        ap_idle => grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_ap_idle,
        ap_ready => grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_ap_ready,
        p1_out_data_address0 => grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_p1_out_data_address0,
        p1_out_data_ce0 => grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_p1_out_data_ce0,
        p1_out_data_we0 => grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_p1_out_data_we0,
        p1_out_data_d0 => grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_p1_out_data_d0,
        in_data_address0 => grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_in_data_address0,
        in_data_ce0 => grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_in_data_ce0,
        in_data_q0 => c1_out_data_q0,
        in_data_address1 => grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_in_data_address1,
        in_data_ce1 => grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_in_data_ce1,
        in_data_q1 => c1_out_data_q1,
        in_data_address2 => grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_in_data_address2,
        in_data_ce2 => grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_in_data_ce2,
        in_data_q2 => c1_out_data_q2,
        in_data_address3 => grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_in_data_address3,
        in_data_ce3 => grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_in_data_ce3,
        in_data_q3 => c1_out_data_q3,
        grp_fu_248_p_din0 => grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_248_p_din0,
        grp_fu_248_p_din1 => grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_248_p_din1,
        grp_fu_248_p_opcode => grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_248_p_opcode,
        grp_fu_248_p_dout0 => grp_fu_248_p2,
        grp_fu_248_p_ce => grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_248_p_ce,
        grp_fu_252_p_din0 => grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_252_p_din0,
        grp_fu_252_p_din1 => grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_252_p_din1,
        grp_fu_252_p_opcode => grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_252_p_opcode,
        grp_fu_252_p_dout0 => grp_fu_252_p2,
        grp_fu_252_p_ce => grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_252_p_ce,
        grp_fu_256_p_din0 => grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_256_p_din0,
        grp_fu_256_p_din1 => grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_256_p_din1,
        grp_fu_256_p_opcode => grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_256_p_opcode,
        grp_fu_256_p_dout0 => grp_fu_256_p2,
        grp_fu_256_p_ce => grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_256_p_ce,
        grp_fu_260_p_din0 => grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_260_p_din0,
        grp_fu_260_p_din1 => grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_260_p_din1,
        grp_fu_260_p_opcode => grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_260_p_opcode,
        grp_fu_260_p_dout0 => grp_fu_260_p2,
        grp_fu_260_p_ce => grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_260_p_ce,
        grp_fu_264_p_din0 => grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_264_p_din0,
        grp_fu_264_p_din1 => grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_264_p_din1,
        grp_fu_264_p_opcode => grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_264_p_opcode,
        grp_fu_264_p_dout0 => grp_fu_264_p2,
        grp_fu_264_p_ce => grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_264_p_ce);

    grp_Convolution2d_float_1_fu_152 : component lenet5_Convolution2d_float_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_Convolution2d_float_1_fu_152_ap_start,
        ap_done => grp_Convolution2d_float_1_fu_152_ap_done,
        ap_idle => grp_Convolution2d_float_1_fu_152_ap_idle,
        ap_ready => grp_Convolution2d_float_1_fu_152_ap_ready,
        out_data_address0 => grp_Convolution2d_float_1_fu_152_out_data_address0,
        out_data_ce0 => grp_Convolution2d_float_1_fu_152_out_data_ce0,
        out_data_we0 => grp_Convolution2d_float_1_fu_152_out_data_we0,
        out_data_d0 => grp_Convolution2d_float_1_fu_152_out_data_d0,
        out_data_q0 => c2_out_data_q0,
        p1_out_data_address0 => grp_Convolution2d_float_1_fu_152_p1_out_data_address0,
        p1_out_data_ce0 => grp_Convolution2d_float_1_fu_152_p1_out_data_ce0,
        p1_out_data_q0 => p1_out_data_q0,
        p1_out_data_address1 => grp_Convolution2d_float_1_fu_152_p1_out_data_address1,
        p1_out_data_ce1 => grp_Convolution2d_float_1_fu_152_p1_out_data_ce1,
        p1_out_data_q1 => p1_out_data_q1,
        p1_out_data_address2 => grp_Convolution2d_float_1_fu_152_p1_out_data_address2,
        p1_out_data_ce2 => grp_Convolution2d_float_1_fu_152_p1_out_data_ce2,
        p1_out_data_q2 => p1_out_data_q2,
        p1_out_data_address3 => grp_Convolution2d_float_1_fu_152_p1_out_data_address3,
        p1_out_data_ce3 => grp_Convolution2d_float_1_fu_152_p1_out_data_ce3,
        p1_out_data_q3 => p1_out_data_q3,
        p1_out_data_address4 => grp_Convolution2d_float_1_fu_152_p1_out_data_address4,
        p1_out_data_ce4 => grp_Convolution2d_float_1_fu_152_p1_out_data_ce4,
        p1_out_data_q4 => p1_out_data_q4,
        p1_out_data_address5 => grp_Convolution2d_float_1_fu_152_p1_out_data_address5,
        p1_out_data_ce5 => grp_Convolution2d_float_1_fu_152_p1_out_data_ce5,
        p1_out_data_q5 => p1_out_data_q5,
        p1_out_data_address6 => grp_Convolution2d_float_1_fu_152_p1_out_data_address6,
        p1_out_data_ce6 => grp_Convolution2d_float_1_fu_152_p1_out_data_ce6,
        p1_out_data_q6 => p1_out_data_q6,
        p1_out_data_address7 => grp_Convolution2d_float_1_fu_152_p1_out_data_address7,
        p1_out_data_ce7 => grp_Convolution2d_float_1_fu_152_p1_out_data_ce7,
        p1_out_data_q7 => p1_out_data_q7,
        p1_out_data_address8 => grp_Convolution2d_float_1_fu_152_p1_out_data_address8,
        p1_out_data_ce8 => grp_Convolution2d_float_1_fu_152_p1_out_data_ce8,
        p1_out_data_q8 => p1_out_data_q8,
        p1_out_data_address9 => grp_Convolution2d_float_1_fu_152_p1_out_data_address9,
        p1_out_data_ce9 => grp_Convolution2d_float_1_fu_152_p1_out_data_ce9,
        p1_out_data_q9 => p1_out_data_q9,
        p1_out_data_address10 => grp_Convolution2d_float_1_fu_152_p1_out_data_address10,
        p1_out_data_ce10 => grp_Convolution2d_float_1_fu_152_p1_out_data_ce10,
        p1_out_data_q10 => p1_out_data_q10,
        p1_out_data_address11 => grp_Convolution2d_float_1_fu_152_p1_out_data_address11,
        p1_out_data_ce11 => grp_Convolution2d_float_1_fu_152_p1_out_data_ce11,
        p1_out_data_q11 => p1_out_data_q11,
        p1_out_data_address12 => grp_Convolution2d_float_1_fu_152_p1_out_data_address12,
        p1_out_data_ce12 => grp_Convolution2d_float_1_fu_152_p1_out_data_ce12,
        p1_out_data_q12 => p1_out_data_q12,
        grp_fu_236_p_din0 => grp_Convolution2d_float_1_fu_152_grp_fu_236_p_din0,
        grp_fu_236_p_din1 => grp_Convolution2d_float_1_fu_152_grp_fu_236_p_din1,
        grp_fu_236_p_opcode => grp_Convolution2d_float_1_fu_152_grp_fu_236_p_opcode,
        grp_fu_236_p_dout0 => grp_fu_236_p2,
        grp_fu_236_p_ce => grp_Convolution2d_float_1_fu_152_grp_fu_236_p_ce,
        grp_fu_240_p_din0 => grp_Convolution2d_float_1_fu_152_grp_fu_240_p_din0,
        grp_fu_240_p_din1 => grp_Convolution2d_float_1_fu_152_grp_fu_240_p_din1,
        grp_fu_240_p_opcode => grp_Convolution2d_float_1_fu_152_grp_fu_240_p_opcode,
        grp_fu_240_p_dout0 => grp_fu_240_p2,
        grp_fu_240_p_ce => grp_Convolution2d_float_1_fu_152_grp_fu_240_p_ce,
        grp_fu_244_p_din0 => grp_Convolution2d_float_1_fu_152_grp_fu_244_p_din0,
        grp_fu_244_p_din1 => grp_Convolution2d_float_1_fu_152_grp_fu_244_p_din1,
        grp_fu_244_p_dout0 => grp_fu_244_p2,
        grp_fu_244_p_ce => grp_Convolution2d_float_1_fu_152_grp_fu_244_p_ce);

    grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162 : component lenet5_Pooling2dMax_float_1_0_1036831949u_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_ap_start,
        ap_done => grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_ap_done,
        ap_idle => grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_ap_idle,
        ap_ready => grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_ap_ready,
        out_data_address0 => grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_out_data_address0,
        out_data_ce0 => grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_out_data_ce0,
        out_data_we0 => grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_out_data_we0,
        out_data_d0 => grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_out_data_d0,
        in_data_address0 => grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_in_data_address0,
        in_data_ce0 => grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_in_data_ce0,
        in_data_q0 => c2_out_data_q0,
        in_data_address1 => grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_in_data_address1,
        in_data_ce1 => grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_in_data_ce1,
        in_data_q1 => c2_out_data_q1,
        in_data_address2 => grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_in_data_address2,
        in_data_ce2 => grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_in_data_ce2,
        in_data_q2 => c2_out_data_q2,
        in_data_address3 => grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_in_data_address3,
        in_data_ce3 => grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_in_data_ce3,
        in_data_q3 => c2_out_data_q3,
        grp_fu_248_p_din0 => grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_248_p_din0,
        grp_fu_248_p_din1 => grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_248_p_din1,
        grp_fu_248_p_opcode => grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_248_p_opcode,
        grp_fu_248_p_dout0 => grp_fu_248_p2,
        grp_fu_248_p_ce => grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_248_p_ce,
        grp_fu_252_p_din0 => grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_252_p_din0,
        grp_fu_252_p_din1 => grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_252_p_din1,
        grp_fu_252_p_opcode => grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_252_p_opcode,
        grp_fu_252_p_dout0 => grp_fu_252_p2,
        grp_fu_252_p_ce => grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_252_p_ce,
        grp_fu_256_p_din0 => grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_256_p_din0,
        grp_fu_256_p_din1 => grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_256_p_din1,
        grp_fu_256_p_opcode => grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_256_p_opcode,
        grp_fu_256_p_dout0 => grp_fu_256_p2,
        grp_fu_256_p_ce => grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_256_p_ce,
        grp_fu_260_p_din0 => grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_260_p_din0,
        grp_fu_260_p_din1 => grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_260_p_din1,
        grp_fu_260_p_opcode => grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_260_p_opcode,
        grp_fu_260_p_dout0 => grp_fu_260_p2,
        grp_fu_260_p_ce => grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_260_p_ce,
        grp_fu_264_p_din0 => grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_264_p_din0,
        grp_fu_264_p_din1 => grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_264_p_din1,
        grp_fu_264_p_opcode => grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_264_p_opcode,
        grp_fu_264_p_dout0 => grp_fu_264_p2,
        grp_fu_264_p_ce => grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_264_p_ce);

    grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168 : component lenet5_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_ap_start,
        ap_done => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_ap_done,
        ap_idle => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_ap_idle,
        ap_ready => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_ap_ready,
        p2_out_data_address0 => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_p2_out_data_address0,
        p2_out_data_ce0 => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_p2_out_data_ce0,
        p2_out_data_q0 => p2_out_data_q0,
        f1_out_data_address0 => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_f1_out_data_address0,
        f1_out_data_ce0 => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_f1_out_data_ce0,
        f1_out_data_we0 => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_f1_out_data_we0,
        f1_out_data_d0 => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_f1_out_data_d0,
        grp_fu_236_p_din0 => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_grp_fu_236_p_din0,
        grp_fu_236_p_din1 => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_grp_fu_236_p_din1,
        grp_fu_236_p_opcode => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_grp_fu_236_p_opcode,
        grp_fu_236_p_dout0 => grp_fu_236_p2,
        grp_fu_236_p_ce => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_grp_fu_236_p_ce,
        grp_fu_244_p_din0 => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_grp_fu_244_p_din0,
        grp_fu_244_p_din1 => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_grp_fu_244_p_din1,
        grp_fu_244_p_dout0 => grp_fu_244_p2,
        grp_fu_244_p_ce => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_grp_fu_244_p_ce,
        grp_fu_248_p_din0 => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_grp_fu_248_p_din0,
        grp_fu_248_p_din1 => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_grp_fu_248_p_din1,
        grp_fu_248_p_opcode => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_grp_fu_248_p_opcode,
        grp_fu_248_p_dout0 => grp_fu_248_p2,
        grp_fu_248_p_ce => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_grp_fu_248_p_ce);

    grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178 : component lenet5_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_ap_start,
        ap_done => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_ap_done,
        ap_idle => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_ap_idle,
        ap_ready => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_ap_ready,
        f1_out_data_address0 => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_f1_out_data_address0,
        f1_out_data_ce0 => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_f1_out_data_ce0,
        f1_out_data_q0 => f1_out_data_q0,
        f2_out_data_address0 => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_f2_out_data_address0,
        f2_out_data_ce0 => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_f2_out_data_ce0,
        f2_out_data_we0 => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_f2_out_data_we0,
        f2_out_data_d0 => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_f2_out_data_d0,
        grp_fu_236_p_din0 => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_grp_fu_236_p_din0,
        grp_fu_236_p_din1 => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_grp_fu_236_p_din1,
        grp_fu_236_p_opcode => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_grp_fu_236_p_opcode,
        grp_fu_236_p_dout0 => grp_fu_236_p2,
        grp_fu_236_p_ce => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_grp_fu_236_p_ce,
        grp_fu_244_p_din0 => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_grp_fu_244_p_din0,
        grp_fu_244_p_din1 => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_grp_fu_244_p_din1,
        grp_fu_244_p_dout0 => grp_fu_244_p2,
        grp_fu_244_p_ce => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_grp_fu_244_p_ce,
        grp_fu_248_p_din0 => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_grp_fu_248_p_din0,
        grp_fu_248_p_din1 => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_grp_fu_248_p_din1,
        grp_fu_248_p_opcode => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_grp_fu_248_p_opcode,
        grp_fu_248_p_dout0 => grp_fu_248_p2,
        grp_fu_248_p_ce => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_grp_fu_248_p_ce);

    grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188 : component lenet5_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_ap_start,
        ap_done => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_ap_done,
        ap_idle => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_ap_idle,
        ap_ready => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_ap_ready,
        m_axi_data_AWVALID => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_AWVALID,
        m_axi_data_AWREADY => data_AWREADY,
        m_axi_data_AWADDR => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_AWADDR,
        m_axi_data_AWID => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_AWID,
        m_axi_data_AWLEN => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_AWLEN,
        m_axi_data_AWSIZE => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_AWSIZE,
        m_axi_data_AWBURST => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_AWBURST,
        m_axi_data_AWLOCK => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_AWLOCK,
        m_axi_data_AWCACHE => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_AWCACHE,
        m_axi_data_AWPROT => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_AWPROT,
        m_axi_data_AWQOS => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_AWQOS,
        m_axi_data_AWREGION => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_AWREGION,
        m_axi_data_AWUSER => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_AWUSER,
        m_axi_data_WVALID => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_WVALID,
        m_axi_data_WREADY => data_WREADY,
        m_axi_data_WDATA => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_WDATA,
        m_axi_data_WSTRB => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_WSTRB,
        m_axi_data_WLAST => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_WLAST,
        m_axi_data_WID => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_WID,
        m_axi_data_WUSER => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_WUSER,
        m_axi_data_ARVALID => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_ARVALID,
        m_axi_data_ARREADY => ap_const_logic_0,
        m_axi_data_ARADDR => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_ARADDR,
        m_axi_data_ARID => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_ARID,
        m_axi_data_ARLEN => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_ARLEN,
        m_axi_data_ARSIZE => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_ARSIZE,
        m_axi_data_ARBURST => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_ARBURST,
        m_axi_data_ARLOCK => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_ARLOCK,
        m_axi_data_ARCACHE => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_ARCACHE,
        m_axi_data_ARPROT => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_ARPROT,
        m_axi_data_ARQOS => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_ARQOS,
        m_axi_data_ARREGION => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_ARREGION,
        m_axi_data_ARUSER => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_ARUSER,
        m_axi_data_RVALID => ap_const_logic_0,
        m_axi_data_RREADY => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_RREADY,
        m_axi_data_RDATA => ap_const_lv32_0,
        m_axi_data_RLAST => ap_const_logic_0,
        m_axi_data_RID => ap_const_lv1_0,
        m_axi_data_RFIFONUM => ap_const_lv9_0,
        m_axi_data_RUSER => ap_const_lv1_0,
        m_axi_data_RRESP => ap_const_lv2_0,
        m_axi_data_BVALID => data_BVALID,
        m_axi_data_BREADY => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_BREADY,
        m_axi_data_BRESP => data_BRESP,
        m_axi_data_BID => data_BID,
        m_axi_data_BUSER => data_BUSER,
        sext_ln64 => trunc_ln1_reg_225,
        f2_out_data_address0 => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_f2_out_data_address0,
        f2_out_data_ce0 => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_f2_out_data_ce0,
        f2_out_data_q0 => f2_out_data_q0,
        grp_fu_236_p_din0 => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_grp_fu_236_p_din0,
        grp_fu_236_p_din1 => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_grp_fu_236_p_din1,
        grp_fu_236_p_opcode => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_grp_fu_236_p_opcode,
        grp_fu_236_p_dout0 => grp_fu_236_p2,
        grp_fu_236_p_ce => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_grp_fu_236_p_ce,
        grp_fu_244_p_din0 => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_grp_fu_244_p_din0,
        grp_fu_244_p_din1 => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_grp_fu_244_p_din1,
        grp_fu_244_p_dout0 => grp_fu_244_p2,
        grp_fu_244_p_ce => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_grp_fu_244_p_ce);

    control_s_axi_U : component lenet5_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        classes => classes,
        image_r => image_r,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        ap_local_deadlock => ap_local_deadlock);

    data_m_axi_U : component lenet5_data_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 32,
        USER_AW => 32,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        USER_RFIFONUM_WIDTH => 9,
        C_M_AXI_ID_WIDTH => C_M_AXI_DATA_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_DATA_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_DATA_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_DATA_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_DATA_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_DATA_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_DATA_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_DATA_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_DATA_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_DATA_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_DATA_CACHE_VALUE)
    port map (
        AWVALID => m_axi_data_AWVALID,
        AWREADY => m_axi_data_AWREADY,
        AWADDR => m_axi_data_AWADDR,
        AWID => m_axi_data_AWID,
        AWLEN => m_axi_data_AWLEN,
        AWSIZE => m_axi_data_AWSIZE,
        AWBURST => m_axi_data_AWBURST,
        AWLOCK => m_axi_data_AWLOCK,
        AWCACHE => m_axi_data_AWCACHE,
        AWPROT => m_axi_data_AWPROT,
        AWQOS => m_axi_data_AWQOS,
        AWREGION => m_axi_data_AWREGION,
        AWUSER => m_axi_data_AWUSER,
        WVALID => m_axi_data_WVALID,
        WREADY => m_axi_data_WREADY,
        WDATA => m_axi_data_WDATA,
        WSTRB => m_axi_data_WSTRB,
        WLAST => m_axi_data_WLAST,
        WID => m_axi_data_WID,
        WUSER => m_axi_data_WUSER,
        ARVALID => m_axi_data_ARVALID,
        ARREADY => m_axi_data_ARREADY,
        ARADDR => m_axi_data_ARADDR,
        ARID => m_axi_data_ARID,
        ARLEN => m_axi_data_ARLEN,
        ARSIZE => m_axi_data_ARSIZE,
        ARBURST => m_axi_data_ARBURST,
        ARLOCK => m_axi_data_ARLOCK,
        ARCACHE => m_axi_data_ARCACHE,
        ARPROT => m_axi_data_ARPROT,
        ARQOS => m_axi_data_ARQOS,
        ARREGION => m_axi_data_ARREGION,
        ARUSER => m_axi_data_ARUSER,
        RVALID => m_axi_data_RVALID,
        RREADY => m_axi_data_RREADY,
        RDATA => m_axi_data_RDATA,
        RLAST => m_axi_data_RLAST,
        RID => m_axi_data_RID,
        RUSER => m_axi_data_RUSER,
        RRESP => m_axi_data_RRESP,
        BVALID => m_axi_data_BVALID,
        BREADY => m_axi_data_BREADY,
        BRESP => m_axi_data_BRESP,
        BID => m_axi_data_BID,
        BUSER => m_axi_data_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => data_ARVALID,
        I_ARREADY => data_ARREADY,
        I_ARADDR => grp_Convolution2d_float_s_fu_132_m_axi_data_ARADDR,
        I_ARID => grp_Convolution2d_float_s_fu_132_m_axi_data_ARID,
        I_ARLEN => grp_Convolution2d_float_s_fu_132_m_axi_data_ARLEN,
        I_ARSIZE => grp_Convolution2d_float_s_fu_132_m_axi_data_ARSIZE,
        I_ARLOCK => grp_Convolution2d_float_s_fu_132_m_axi_data_ARLOCK,
        I_ARCACHE => grp_Convolution2d_float_s_fu_132_m_axi_data_ARCACHE,
        I_ARQOS => grp_Convolution2d_float_s_fu_132_m_axi_data_ARQOS,
        I_ARPROT => grp_Convolution2d_float_s_fu_132_m_axi_data_ARPROT,
        I_ARUSER => grp_Convolution2d_float_s_fu_132_m_axi_data_ARUSER,
        I_ARBURST => grp_Convolution2d_float_s_fu_132_m_axi_data_ARBURST,
        I_ARREGION => grp_Convolution2d_float_s_fu_132_m_axi_data_ARREGION,
        I_RVALID => data_RVALID,
        I_RREADY => data_RREADY,
        I_RDATA => data_RDATA,
        I_RFIFONUM => data_RFIFONUM,
        I_RID => data_RID,
        I_RUSER => data_RUSER,
        I_RRESP => data_RRESP,
        I_RLAST => data_RLAST,
        I_AWVALID => data_AWVALID,
        I_AWREADY => data_AWREADY,
        I_AWADDR => data_AWADDR,
        I_AWID => data_AWID,
        I_AWLEN => data_AWLEN,
        I_AWSIZE => data_AWSIZE,
        I_AWLOCK => data_AWLOCK,
        I_AWCACHE => data_AWCACHE,
        I_AWQOS => data_AWQOS,
        I_AWPROT => data_AWPROT,
        I_AWUSER => data_AWUSER,
        I_AWBURST => data_AWBURST,
        I_AWREGION => data_AWREGION,
        I_WVALID => data_WVALID,
        I_WREADY => data_WREADY,
        I_WDATA => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_WDATA,
        I_WID => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_WID,
        I_WUSER => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_WUSER,
        I_WLAST => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_WLAST,
        I_WSTRB => grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_WSTRB,
        I_BVALID => data_BVALID,
        I_BREADY => data_BREADY,
        I_BRESP => data_BRESP,
        I_BID => data_BID,
        I_BUSER => data_BUSER);

    fadd_32ns_32ns_32_5_full_dsp_1_U133 : component lenet5_fadd_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_236_p0,
        din1 => grp_fu_236_p1,
        ce => grp_fu_236_ce,
        dout => grp_fu_236_p2);

    fadd_32ns_32ns_32_5_full_dsp_1_U134 : component lenet5_fadd_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_240_p0,
        din1 => grp_fu_240_p1,
        ce => grp_fu_240_ce,
        dout => grp_fu_240_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U135 : component lenet5_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_244_p0,
        din1 => grp_fu_244_p1,
        ce => grp_fu_244_ce,
        dout => grp_fu_244_p2);

    fcmp_32ns_32ns_1_2_no_dsp_1_U136 : component lenet5_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_248_p0,
        din1 => grp_fu_248_p1,
        ce => grp_fu_248_ce,
        opcode => grp_fu_248_opcode,
        dout => grp_fu_248_p2);

    fcmp_32ns_32ns_1_2_no_dsp_1_U137 : component lenet5_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_252_p0,
        din1 => grp_fu_252_p1,
        ce => grp_fu_252_ce,
        opcode => grp_fu_252_opcode,
        dout => grp_fu_252_p2);

    fcmp_32ns_32ns_1_2_no_dsp_1_U138 : component lenet5_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_256_p0,
        din1 => grp_fu_256_p1,
        ce => grp_fu_256_ce,
        opcode => grp_fu_256_opcode,
        dout => grp_fu_256_p2);

    fcmp_32ns_32ns_1_2_no_dsp_1_U139 : component lenet5_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_260_p0,
        din1 => grp_fu_260_p1,
        ce => grp_fu_260_ce,
        opcode => grp_fu_260_opcode,
        dout => grp_fu_260_p2);

    fcmp_32ns_32ns_1_2_no_dsp_1_U140 : component lenet5_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_264_p0,
        din1 => grp_fu_264_p1,
        ce => grp_fu_264_ce,
        opcode => grp_fu_264_opcode,
        dout => grp_fu_264_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_Convolution2d_float_1_fu_152_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_Convolution2d_float_1_fu_152_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    grp_Convolution2d_float_1_fu_152_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Convolution2d_float_1_fu_152_ap_ready = ap_const_logic_1)) then 
                    grp_Convolution2d_float_1_fu_152_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_Convolution2d_float_s_fu_132_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_Convolution2d_float_s_fu_132_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_Convolution2d_float_s_fu_132_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Convolution2d_float_s_fu_132_ap_ready = ap_const_logic_1)) then 
                    grp_Convolution2d_float_s_fu_132_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_ap_ready = ap_const_logic_1)) then 
                    grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_ap_ready = ap_const_logic_1)) then 
                    grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                    grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_ap_ready = ap_const_logic_1)) then 
                    grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                    grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_ap_ready = ap_const_logic_1)) then 
                    grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_ap_ready = ap_const_logic_1)) then 
                    grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                image_r_read_reg_220 <= image_r;
                trunc_ln1_reg_225 <= classes(31 downto 2);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state12, ap_CS_fsm_state19, grp_Convolution2d_float_s_fu_132_ap_done, grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_ap_done, grp_Convolution2d_float_1_fu_152_ap_done, grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_ap_done, grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_ap_done, grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_ap_done, grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_ap_done, data_AWREADY, data_BVALID, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state14)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_Convolution2d_float_s_fu_132_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_Convolution2d_float_1_fu_152_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if ((not(((data_AWREADY = ap_const_logic_0) or (grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_ap_done = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state14) and (grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                if (((data_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state10_blk_assign_proc : process(grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_ap_done)
    begin
        if ((grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state11_blk <= ap_const_logic_0;

    ap_ST_fsm_state12_blk_assign_proc : process(grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_ap_done, data_AWREADY)
    begin
        if (((data_AWREADY = ap_const_logic_0) or (grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_ap_done = ap_const_logic_0))) then 
            ap_ST_fsm_state12_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state12_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state13_blk <= ap_const_logic_0;

    ap_ST_fsm_state14_blk_assign_proc : process(grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_ap_done)
    begin
        if ((grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state14_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state14_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;

    ap_ST_fsm_state19_blk_assign_proc : process(data_BVALID)
    begin
        if ((data_BVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state19_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state19_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_Convolution2d_float_s_fu_132_ap_done)
    begin
        if ((grp_Convolution2d_float_s_fu_132_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_ap_done)
    begin
        if ((grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(grp_Convolution2d_float_1_fu_152_ap_done)
    begin
        if ((grp_Convolution2d_float_1_fu_152_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state7_blk <= ap_const_logic_0;

    ap_ST_fsm_state8_blk_assign_proc : process(grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_ap_done)
    begin
        if ((grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_CS_fsm_state19, data_BVALID)
    begin
        if (((data_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_local_block <= ap_const_logic_0;
    ap_local_deadlock <= ap_const_lv1_0;

    ap_ready_assign_proc : process(ap_CS_fsm_state19, data_BVALID)
    begin
        if (((data_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    c1_out_data_address0_assign_proc : process(grp_Convolution2d_float_s_fu_132_out_data_address0, grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_in_data_address0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            c1_out_data_address0 <= grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_in_data_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            c1_out_data_address0 <= grp_Convolution2d_float_s_fu_132_out_data_address0;
        else 
            c1_out_data_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    c1_out_data_ce0_assign_proc : process(grp_Convolution2d_float_s_fu_132_out_data_ce0, grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_in_data_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            c1_out_data_ce0 <= grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_in_data_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            c1_out_data_ce0 <= grp_Convolution2d_float_s_fu_132_out_data_ce0;
        else 
            c1_out_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    c1_out_data_ce1_assign_proc : process(grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_in_data_ce1, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            c1_out_data_ce1 <= grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_in_data_ce1;
        else 
            c1_out_data_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    c1_out_data_ce2_assign_proc : process(grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_in_data_ce2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            c1_out_data_ce2 <= grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_in_data_ce2;
        else 
            c1_out_data_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    c1_out_data_ce3_assign_proc : process(grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_in_data_ce3, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            c1_out_data_ce3 <= grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_in_data_ce3;
        else 
            c1_out_data_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    c1_out_data_we0_assign_proc : process(grp_Convolution2d_float_s_fu_132_out_data_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            c1_out_data_we0 <= grp_Convolution2d_float_s_fu_132_out_data_we0;
        else 
            c1_out_data_we0 <= ap_const_logic_0;
        end if; 
    end process;


    c2_out_data_address0_assign_proc : process(grp_Convolution2d_float_1_fu_152_out_data_address0, grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_in_data_address0, ap_CS_fsm_state6, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            c2_out_data_address0 <= grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_in_data_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            c2_out_data_address0 <= grp_Convolution2d_float_1_fu_152_out_data_address0;
        else 
            c2_out_data_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    c2_out_data_ce0_assign_proc : process(grp_Convolution2d_float_1_fu_152_out_data_ce0, grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_in_data_ce0, ap_CS_fsm_state6, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            c2_out_data_ce0 <= grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_in_data_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            c2_out_data_ce0 <= grp_Convolution2d_float_1_fu_152_out_data_ce0;
        else 
            c2_out_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    c2_out_data_ce1_assign_proc : process(grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_in_data_ce1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            c2_out_data_ce1 <= grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_in_data_ce1;
        else 
            c2_out_data_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    c2_out_data_ce2_assign_proc : process(grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_in_data_ce2, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            c2_out_data_ce2 <= grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_in_data_ce2;
        else 
            c2_out_data_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    c2_out_data_ce3_assign_proc : process(grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_in_data_ce3, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            c2_out_data_ce3 <= grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_in_data_ce3;
        else 
            c2_out_data_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    c2_out_data_we0_assign_proc : process(grp_Convolution2d_float_1_fu_152_out_data_we0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            c2_out_data_we0 <= grp_Convolution2d_float_1_fu_152_out_data_we0;
        else 
            c2_out_data_we0 <= ap_const_logic_0;
        end if; 
    end process;


    data_ARVALID_assign_proc : process(ap_CS_fsm_state1, grp_Convolution2d_float_s_fu_132_m_axi_data_ARVALID, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_ARVALID <= grp_Convolution2d_float_s_fu_132_m_axi_data_ARVALID;
        else 
            data_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    data_AWADDR_assign_proc : process(ap_CS_fsm_state12, grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_ap_done, grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_AWADDR, data_AWREADY, ap_CS_fsm_state13, ap_CS_fsm_state14, sext_ln64_fu_210_p1)
    begin
        if ((not(((data_AWREADY = ap_const_logic_0) or (grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_ap_done = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            data_AWADDR <= sext_ln64_fu_210_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            data_AWADDR <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_AWADDR;
        else 
            data_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    data_AWBURST_assign_proc : process(grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_AWBURST, ap_CS_fsm_state13, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            data_AWBURST <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_AWBURST;
        else 
            data_AWBURST <= ap_const_lv2_0;
        end if; 
    end process;


    data_AWCACHE_assign_proc : process(grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_AWCACHE, ap_CS_fsm_state13, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            data_AWCACHE <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_AWCACHE;
        else 
            data_AWCACHE <= ap_const_lv4_0;
        end if; 
    end process;


    data_AWID_assign_proc : process(grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_AWID, ap_CS_fsm_state13, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            data_AWID <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_AWID;
        else 
            data_AWID <= ap_const_lv1_0;
        end if; 
    end process;


    data_AWLEN_assign_proc : process(ap_CS_fsm_state12, grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_ap_done, grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_AWLEN, data_AWREADY, ap_CS_fsm_state13, ap_CS_fsm_state14)
    begin
        if ((not(((data_AWREADY = ap_const_logic_0) or (grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_ap_done = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            data_AWLEN <= ap_const_lv32_A;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            data_AWLEN <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_AWLEN;
        else 
            data_AWLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    data_AWLOCK_assign_proc : process(grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_AWLOCK, ap_CS_fsm_state13, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            data_AWLOCK <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_AWLOCK;
        else 
            data_AWLOCK <= ap_const_lv2_0;
        end if; 
    end process;


    data_AWPROT_assign_proc : process(grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_AWPROT, ap_CS_fsm_state13, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            data_AWPROT <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_AWPROT;
        else 
            data_AWPROT <= ap_const_lv3_0;
        end if; 
    end process;


    data_AWQOS_assign_proc : process(grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_AWQOS, ap_CS_fsm_state13, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            data_AWQOS <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_AWQOS;
        else 
            data_AWQOS <= ap_const_lv4_0;
        end if; 
    end process;


    data_AWREGION_assign_proc : process(grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_AWREGION, ap_CS_fsm_state13, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            data_AWREGION <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_AWREGION;
        else 
            data_AWREGION <= ap_const_lv4_0;
        end if; 
    end process;


    data_AWSIZE_assign_proc : process(grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_AWSIZE, ap_CS_fsm_state13, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            data_AWSIZE <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_AWSIZE;
        else 
            data_AWSIZE <= ap_const_lv3_0;
        end if; 
    end process;


    data_AWUSER_assign_proc : process(grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_AWUSER, ap_CS_fsm_state13, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            data_AWUSER <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_AWUSER;
        else 
            data_AWUSER <= ap_const_lv1_0;
        end if; 
    end process;


    data_AWVALID_assign_proc : process(ap_CS_fsm_state12, grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_ap_done, grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_AWVALID, data_AWREADY, ap_CS_fsm_state13, ap_CS_fsm_state14)
    begin
        if ((not(((data_AWREADY = ap_const_logic_0) or (grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_ap_done = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            data_AWVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            data_AWVALID <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_AWVALID;
        else 
            data_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    data_BREADY_assign_proc : process(ap_CS_fsm_state19, grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_BREADY, data_BVALID, ap_CS_fsm_state13, ap_CS_fsm_state14)
    begin
        if (((data_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            data_BREADY <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            data_BREADY <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_BREADY;
        else 
            data_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    data_RREADY_assign_proc : process(ap_CS_fsm_state1, grp_Convolution2d_float_s_fu_132_m_axi_data_RREADY, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_RREADY <= grp_Convolution2d_float_s_fu_132_m_axi_data_RREADY;
        else 
            data_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    data_WVALID_assign_proc : process(grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_WVALID, ap_CS_fsm_state13, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            data_WVALID <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_m_axi_data_WVALID;
        else 
            data_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    data_blk_n_AW_assign_proc : process(m_axi_data_AWREADY, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            data_blk_n_AW <= m_axi_data_AWREADY;
        else 
            data_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    data_blk_n_B_assign_proc : process(m_axi_data_BVALID, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            data_blk_n_B <= m_axi_data_BVALID;
        else 
            data_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    f1_out_data_address0_assign_proc : process(ap_CS_fsm_state12, grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_f1_out_data_address0, grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_f1_out_data_address0, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            f1_out_data_address0 <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_f1_out_data_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            f1_out_data_address0 <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_f1_out_data_address0;
        else 
            f1_out_data_address0 <= "XXXXXXX";
        end if; 
    end process;


    f1_out_data_ce0_assign_proc : process(ap_CS_fsm_state12, grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_f1_out_data_ce0, grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_f1_out_data_ce0, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            f1_out_data_ce0 <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_f1_out_data_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            f1_out_data_ce0 <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_f1_out_data_ce0;
        else 
            f1_out_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    f1_out_data_we0_assign_proc : process(grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_f1_out_data_we0, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            f1_out_data_we0 <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_f1_out_data_we0;
        else 
            f1_out_data_we0 <= ap_const_logic_0;
        end if; 
    end process;


    f2_out_data_address0_assign_proc : process(ap_CS_fsm_state12, grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_f2_out_data_address0, grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_f2_out_data_address0, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            f2_out_data_address0 <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_f2_out_data_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            f2_out_data_address0 <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_f2_out_data_address0;
        else 
            f2_out_data_address0 <= "XXXXXXX";
        end if; 
    end process;


    f2_out_data_ce0_assign_proc : process(ap_CS_fsm_state12, grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_f2_out_data_ce0, grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_f2_out_data_ce0, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            f2_out_data_ce0 <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_f2_out_data_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            f2_out_data_ce0 <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_f2_out_data_ce0;
        else 
            f2_out_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    f2_out_data_we0_assign_proc : process(ap_CS_fsm_state12, grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_f2_out_data_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            f2_out_data_we0 <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_f2_out_data_we0;
        else 
            f2_out_data_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_Convolution2d_float_1_fu_152_ap_start <= grp_Convolution2d_float_1_fu_152_ap_start_reg;
    grp_Convolution2d_float_s_fu_132_ap_start <= grp_Convolution2d_float_s_fu_132_ap_start_reg;
    grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_ap_start <= grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_ap_start_reg;
    grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_ap_start <= grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_ap_start_reg;

    grp_fu_236_ce_assign_proc : process(ap_CS_fsm_state12, grp_Convolution2d_float_s_fu_132_grp_fu_236_p_ce, grp_Convolution2d_float_1_fu_152_grp_fu_236_p_ce, grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_grp_fu_236_p_ce, grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_grp_fu_236_p_ce, grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_grp_fu_236_p_ce, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_236_ce <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_grp_fu_236_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_236_ce <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_grp_fu_236_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_236_ce <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_grp_fu_236_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_236_ce <= grp_Convolution2d_float_1_fu_152_grp_fu_236_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_236_ce <= grp_Convolution2d_float_s_fu_132_grp_fu_236_p_ce;
        else 
            grp_fu_236_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_236_p0_assign_proc : process(ap_CS_fsm_state12, grp_Convolution2d_float_s_fu_132_grp_fu_236_p_din0, grp_Convolution2d_float_1_fu_152_grp_fu_236_p_din0, grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_grp_fu_236_p_din0, grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_grp_fu_236_p_din0, grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_grp_fu_236_p_din0, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_236_p0 <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_grp_fu_236_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_236_p0 <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_grp_fu_236_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_236_p0 <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_grp_fu_236_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_236_p0 <= grp_Convolution2d_float_1_fu_152_grp_fu_236_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_236_p0 <= grp_Convolution2d_float_s_fu_132_grp_fu_236_p_din0;
        else 
            grp_fu_236_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_236_p1_assign_proc : process(ap_CS_fsm_state12, grp_Convolution2d_float_s_fu_132_grp_fu_236_p_din1, grp_Convolution2d_float_1_fu_152_grp_fu_236_p_din1, grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_grp_fu_236_p_din1, grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_grp_fu_236_p_din1, grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_grp_fu_236_p_din1, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_236_p1 <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_grp_fu_236_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_236_p1 <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_grp_fu_236_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_236_p1 <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_grp_fu_236_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_236_p1 <= grp_Convolution2d_float_1_fu_152_grp_fu_236_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_236_p1 <= grp_Convolution2d_float_s_fu_132_grp_fu_236_p_din1;
        else 
            grp_fu_236_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_240_ce_assign_proc : process(grp_Convolution2d_float_s_fu_132_grp_fu_240_p_ce, grp_Convolution2d_float_1_fu_152_grp_fu_240_p_ce, ap_CS_fsm_state2, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_240_ce <= grp_Convolution2d_float_1_fu_152_grp_fu_240_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_240_ce <= grp_Convolution2d_float_s_fu_132_grp_fu_240_p_ce;
        else 
            grp_fu_240_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_240_p0_assign_proc : process(grp_Convolution2d_float_s_fu_132_grp_fu_240_p_din0, grp_Convolution2d_float_1_fu_152_grp_fu_240_p_din0, ap_CS_fsm_state2, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_240_p0 <= grp_Convolution2d_float_1_fu_152_grp_fu_240_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_240_p0 <= grp_Convolution2d_float_s_fu_132_grp_fu_240_p_din0;
        else 
            grp_fu_240_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_240_p1_assign_proc : process(grp_Convolution2d_float_s_fu_132_grp_fu_240_p_din1, grp_Convolution2d_float_1_fu_152_grp_fu_240_p_din1, ap_CS_fsm_state2, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_240_p1 <= grp_Convolution2d_float_1_fu_152_grp_fu_240_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_240_p1 <= grp_Convolution2d_float_s_fu_132_grp_fu_240_p_din1;
        else 
            grp_fu_240_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_244_ce_assign_proc : process(ap_CS_fsm_state12, grp_Convolution2d_float_s_fu_132_grp_fu_244_p_ce, grp_Convolution2d_float_1_fu_152_grp_fu_244_p_ce, grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_grp_fu_244_p_ce, grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_grp_fu_244_p_ce, grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_grp_fu_244_p_ce, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_244_ce <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_grp_fu_244_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_244_ce <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_grp_fu_244_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_244_ce <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_grp_fu_244_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_244_ce <= grp_Convolution2d_float_1_fu_152_grp_fu_244_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_244_ce <= grp_Convolution2d_float_s_fu_132_grp_fu_244_p_ce;
        else 
            grp_fu_244_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_244_p0_assign_proc : process(ap_CS_fsm_state12, grp_Convolution2d_float_s_fu_132_grp_fu_244_p_din0, grp_Convolution2d_float_1_fu_152_grp_fu_244_p_din0, grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_grp_fu_244_p_din0, grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_grp_fu_244_p_din0, grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_grp_fu_244_p_din0, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_244_p0 <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_grp_fu_244_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_244_p0 <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_grp_fu_244_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_244_p0 <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_grp_fu_244_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_244_p0 <= grp_Convolution2d_float_1_fu_152_grp_fu_244_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_244_p0 <= grp_Convolution2d_float_s_fu_132_grp_fu_244_p_din0;
        else 
            grp_fu_244_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_244_p1_assign_proc : process(ap_CS_fsm_state12, grp_Convolution2d_float_s_fu_132_grp_fu_244_p_din1, grp_Convolution2d_float_1_fu_152_grp_fu_244_p_din1, grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_grp_fu_244_p_din1, grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_grp_fu_244_p_din1, grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_grp_fu_244_p_din1, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_244_p1 <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_grp_fu_244_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_244_p1 <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_grp_fu_244_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_244_p1 <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_grp_fu_244_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_244_p1 <= grp_Convolution2d_float_1_fu_152_grp_fu_244_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_244_p1 <= grp_Convolution2d_float_s_fu_132_grp_fu_244_p_din1;
        else 
            grp_fu_244_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_248_ce_assign_proc : process(ap_CS_fsm_state12, grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_248_p_ce, grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_248_p_ce, grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_grp_fu_248_p_ce, grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_grp_fu_248_p_ce, ap_CS_fsm_state4, ap_CS_fsm_state8, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_248_ce <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_grp_fu_248_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_248_ce <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_grp_fu_248_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_248_ce <= grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_248_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_248_ce <= grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_248_p_ce;
        else 
            grp_fu_248_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_248_opcode_assign_proc : process(ap_CS_fsm_state12, grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_248_p_opcode, grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_248_p_opcode, grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_grp_fu_248_p_opcode, grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_grp_fu_248_p_opcode, ap_CS_fsm_state4, ap_CS_fsm_state8, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_248_opcode <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_grp_fu_248_p_opcode;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_248_opcode <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_grp_fu_248_p_opcode;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_248_opcode <= grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_248_p_opcode;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_248_opcode <= grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_248_p_opcode;
        else 
            grp_fu_248_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_248_p0_assign_proc : process(ap_CS_fsm_state12, grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_248_p_din0, grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_248_p_din0, grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_grp_fu_248_p_din0, grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_grp_fu_248_p_din0, ap_CS_fsm_state4, ap_CS_fsm_state8, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_248_p0 <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_grp_fu_248_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_248_p0 <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_grp_fu_248_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_248_p0 <= grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_248_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_248_p0 <= grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_248_p_din0;
        else 
            grp_fu_248_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_248_p1_assign_proc : process(ap_CS_fsm_state12, grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_248_p_din1, grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_248_p_din1, grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_grp_fu_248_p_din1, grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_grp_fu_248_p_din1, ap_CS_fsm_state4, ap_CS_fsm_state8, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_248_p1 <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_grp_fu_248_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_248_p1 <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_grp_fu_248_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_248_p1 <= grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_248_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_248_p1 <= grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_248_p_din1;
        else 
            grp_fu_248_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_252_ce_assign_proc : process(grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_252_p_ce, grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_252_p_ce, ap_CS_fsm_state4, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_252_ce <= grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_252_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_252_ce <= grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_252_p_ce;
        else 
            grp_fu_252_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_252_opcode_assign_proc : process(grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_252_p_opcode, grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_252_p_opcode, ap_CS_fsm_state4, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_252_opcode <= grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_252_p_opcode;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_252_opcode <= grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_252_p_opcode;
        else 
            grp_fu_252_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_252_p0_assign_proc : process(grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_252_p_din0, grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_252_p_din0, ap_CS_fsm_state4, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_252_p0 <= grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_252_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_252_p0 <= grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_252_p_din0;
        else 
            grp_fu_252_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_252_p1_assign_proc : process(grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_252_p_din1, grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_252_p_din1, ap_CS_fsm_state4, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_252_p1 <= grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_252_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_252_p1 <= grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_252_p_din1;
        else 
            grp_fu_252_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_256_ce_assign_proc : process(grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_256_p_ce, grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_256_p_ce, ap_CS_fsm_state4, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_256_ce <= grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_256_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_256_ce <= grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_256_p_ce;
        else 
            grp_fu_256_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_256_opcode_assign_proc : process(grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_256_p_opcode, grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_256_p_opcode, ap_CS_fsm_state4, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_256_opcode <= grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_256_p_opcode;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_256_opcode <= grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_256_p_opcode;
        else 
            grp_fu_256_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_256_p0_assign_proc : process(grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_256_p_din0, grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_256_p_din0, ap_CS_fsm_state4, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_256_p0 <= grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_256_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_256_p0 <= grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_256_p_din0;
        else 
            grp_fu_256_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_256_p1_assign_proc : process(grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_256_p_din1, grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_256_p_din1, ap_CS_fsm_state4, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_256_p1 <= grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_256_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_256_p1 <= grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_256_p_din1;
        else 
            grp_fu_256_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_260_ce_assign_proc : process(grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_260_p_ce, grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_260_p_ce, ap_CS_fsm_state4, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_260_ce <= grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_260_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_260_ce <= grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_260_p_ce;
        else 
            grp_fu_260_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_260_opcode_assign_proc : process(grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_260_p_opcode, grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_260_p_opcode, ap_CS_fsm_state4, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_260_opcode <= grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_260_p_opcode;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_260_opcode <= grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_260_p_opcode;
        else 
            grp_fu_260_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_260_p0_assign_proc : process(grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_260_p_din0, grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_260_p_din0, ap_CS_fsm_state4, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_260_p0 <= grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_260_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_260_p0 <= grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_260_p_din0;
        else 
            grp_fu_260_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_260_p1_assign_proc : process(grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_260_p_din1, grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_260_p_din1, ap_CS_fsm_state4, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_260_p1 <= grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_260_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_260_p1 <= grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_260_p_din1;
        else 
            grp_fu_260_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_264_ce_assign_proc : process(grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_264_p_ce, grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_264_p_ce, ap_CS_fsm_state4, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_264_ce <= grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_264_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_264_ce <= grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_264_p_ce;
        else 
            grp_fu_264_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_264_opcode_assign_proc : process(grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_264_p_opcode, grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_264_p_opcode, ap_CS_fsm_state4, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_264_opcode <= grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_264_p_opcode;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_264_opcode <= grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_264_p_opcode;
        else 
            grp_fu_264_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_264_p0_assign_proc : process(grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_264_p_din0, grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_264_p_din0, ap_CS_fsm_state4, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_264_p0 <= grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_264_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_264_p0 <= grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_264_p_din0;
        else 
            grp_fu_264_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_264_p1_assign_proc : process(grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_264_p_din1, grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_264_p_din1, ap_CS_fsm_state4, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_264_p1 <= grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_grp_fu_264_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_264_p1 <= grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_grp_fu_264_p_din1;
        else 
            grp_fu_264_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_ap_start <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_26_fu_178_ap_start_reg;
    grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_ap_start <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_27_fu_188_ap_start_reg;
    grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_ap_start <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_ap_start_reg;

    p1_out_data_address0_assign_proc : process(grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_p1_out_data_address0, grp_Convolution2d_float_1_fu_152_p1_out_data_address0, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p1_out_data_address0 <= grp_Convolution2d_float_1_fu_152_p1_out_data_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            p1_out_data_address0 <= grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_p1_out_data_address0;
        else 
            p1_out_data_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    p1_out_data_ce0_assign_proc : process(grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_p1_out_data_ce0, grp_Convolution2d_float_1_fu_152_p1_out_data_ce0, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p1_out_data_ce0 <= grp_Convolution2d_float_1_fu_152_p1_out_data_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            p1_out_data_ce0 <= grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_p1_out_data_ce0;
        else 
            p1_out_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p1_out_data_ce1_assign_proc : process(grp_Convolution2d_float_1_fu_152_p1_out_data_ce1, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p1_out_data_ce1 <= grp_Convolution2d_float_1_fu_152_p1_out_data_ce1;
        else 
            p1_out_data_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    p1_out_data_ce10_assign_proc : process(grp_Convolution2d_float_1_fu_152_p1_out_data_ce10, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p1_out_data_ce10 <= grp_Convolution2d_float_1_fu_152_p1_out_data_ce10;
        else 
            p1_out_data_ce10 <= ap_const_logic_0;
        end if; 
    end process;


    p1_out_data_ce11_assign_proc : process(grp_Convolution2d_float_1_fu_152_p1_out_data_ce11, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p1_out_data_ce11 <= grp_Convolution2d_float_1_fu_152_p1_out_data_ce11;
        else 
            p1_out_data_ce11 <= ap_const_logic_0;
        end if; 
    end process;


    p1_out_data_ce12_assign_proc : process(grp_Convolution2d_float_1_fu_152_p1_out_data_ce12, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p1_out_data_ce12 <= grp_Convolution2d_float_1_fu_152_p1_out_data_ce12;
        else 
            p1_out_data_ce12 <= ap_const_logic_0;
        end if; 
    end process;


    p1_out_data_ce2_assign_proc : process(grp_Convolution2d_float_1_fu_152_p1_out_data_ce2, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p1_out_data_ce2 <= grp_Convolution2d_float_1_fu_152_p1_out_data_ce2;
        else 
            p1_out_data_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    p1_out_data_ce3_assign_proc : process(grp_Convolution2d_float_1_fu_152_p1_out_data_ce3, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p1_out_data_ce3 <= grp_Convolution2d_float_1_fu_152_p1_out_data_ce3;
        else 
            p1_out_data_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    p1_out_data_ce4_assign_proc : process(grp_Convolution2d_float_1_fu_152_p1_out_data_ce4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p1_out_data_ce4 <= grp_Convolution2d_float_1_fu_152_p1_out_data_ce4;
        else 
            p1_out_data_ce4 <= ap_const_logic_0;
        end if; 
    end process;


    p1_out_data_ce5_assign_proc : process(grp_Convolution2d_float_1_fu_152_p1_out_data_ce5, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p1_out_data_ce5 <= grp_Convolution2d_float_1_fu_152_p1_out_data_ce5;
        else 
            p1_out_data_ce5 <= ap_const_logic_0;
        end if; 
    end process;


    p1_out_data_ce6_assign_proc : process(grp_Convolution2d_float_1_fu_152_p1_out_data_ce6, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p1_out_data_ce6 <= grp_Convolution2d_float_1_fu_152_p1_out_data_ce6;
        else 
            p1_out_data_ce6 <= ap_const_logic_0;
        end if; 
    end process;


    p1_out_data_ce7_assign_proc : process(grp_Convolution2d_float_1_fu_152_p1_out_data_ce7, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p1_out_data_ce7 <= grp_Convolution2d_float_1_fu_152_p1_out_data_ce7;
        else 
            p1_out_data_ce7 <= ap_const_logic_0;
        end if; 
    end process;


    p1_out_data_ce8_assign_proc : process(grp_Convolution2d_float_1_fu_152_p1_out_data_ce8, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p1_out_data_ce8 <= grp_Convolution2d_float_1_fu_152_p1_out_data_ce8;
        else 
            p1_out_data_ce8 <= ap_const_logic_0;
        end if; 
    end process;


    p1_out_data_ce9_assign_proc : process(grp_Convolution2d_float_1_fu_152_p1_out_data_ce9, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p1_out_data_ce9 <= grp_Convolution2d_float_1_fu_152_p1_out_data_ce9;
        else 
            p1_out_data_ce9 <= ap_const_logic_0;
        end if; 
    end process;


    p1_out_data_we0_assign_proc : process(grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_p1_out_data_we0, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            p1_out_data_we0 <= grp_Pooling2dMax_float_1_0_1036831949u_1_fu_146_p1_out_data_we0;
        else 
            p1_out_data_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p2_out_data_address0_assign_proc : process(grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_out_data_address0, grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_p2_out_data_address0, ap_CS_fsm_state8, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            p2_out_data_address0 <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_p2_out_data_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p2_out_data_address0 <= grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_out_data_address0;
        else 
            p2_out_data_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    p2_out_data_ce0_assign_proc : process(grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_out_data_ce0, grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_p2_out_data_ce0, ap_CS_fsm_state8, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            p2_out_data_ce0 <= grp_lenet5_Pipeline_VITIS_LOOP_64_1_VITIS_LOOP_68_2_fu_168_p2_out_data_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p2_out_data_ce0 <= grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_out_data_ce0;
        else 
            p2_out_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p2_out_data_we0_assign_proc : process(grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_out_data_we0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p2_out_data_we0 <= grp_Pooling2dMax_float_1_0_1036831949u_s_fu_162_out_data_we0;
        else 
            p2_out_data_we0 <= ap_const_logic_0;
        end if; 
    end process;

        sext_ln64_fu_210_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1_reg_225),32));

end behav;
